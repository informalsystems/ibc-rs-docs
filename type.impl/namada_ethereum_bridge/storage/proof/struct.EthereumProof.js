(function() {
    var type_impls = Object.fromEntries([["namada_ethereum_bridge",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorshDeserialize-for-EthereumProof%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/namada_ethereum_bridge/storage/proof.rs.html#22\">source</a><a href=\"#impl-BorshDeserialize-for-EthereumProof%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"borsh/de/trait.BorshDeserialize.html\" title=\"trait borsh::de::BorshDeserialize\">BorshDeserialize</a> for <a class=\"struct\" href=\"namada_ethereum_bridge/storage/proof/struct.EthereumProof.html\" title=\"struct namada_ethereum_bridge::storage::proof::EthereumProof\">EthereumProof</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"borsh/de/trait.BorshDeserialize.html\" title=\"trait borsh::de::BorshDeserialize\">BorshDeserialize</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.deserialize_reader\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_ethereum_bridge/storage/proof.rs.html#22\">source</a><a href=\"#method.deserialize_reader\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"borsh/de/trait.BorshDeserialize.html#tymethod.deserialize_reader\" class=\"fn\">deserialize_reader</a>&lt;__R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>&gt;(reader: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __R</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/borsh/de/mod.rs.html#39\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"borsh/de/trait.BorshDeserialize.html#method.deserialize\" class=\"fn\">deserialize</a>(buf: &amp;mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Deserializes this instance from a given slice of bytes.\nUpdates the buffer to point at the remaining bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/borsh/de/mod.rs.html#46\">source</a><a href=\"#method.try_from_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"borsh/de/trait.BorshDeserialize.html#method.try_from_slice\" class=\"fn\">try_from_slice</a>(v: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Deserialize this instance from a slice of bytes.</div></details><section id=\"method.try_from_reader\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/borsh/de/mod.rs.html#55\">source</a><a href=\"#method.try_from_reader\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"borsh/de/trait.BorshDeserialize.html#method.try_from_reader\" class=\"fn\">try_from_reader</a>&lt;R&gt;(reader: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut R</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section></div></details>","BorshDeserialize","namada_ethereum_bridge::storage::proof::BridgePoolRootProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorshSchema-for-EthereumProof%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/namada_ethereum_bridge/storage/proof.rs.html#22\">source</a><a href=\"#impl-BorshSchema-for-EthereumProof%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"borsh/schema/trait.BorshSchema.html\" title=\"trait borsh::schema::BorshSchema\">BorshSchema</a> for <a class=\"struct\" href=\"namada_ethereum_bridge/storage/proof/struct.EthereumProof.html\" title=\"struct namada_ethereum_bridge::storage::proof::EthereumProof\">EthereumProof</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"borsh/schema/trait.BorshSchema.html\" title=\"trait borsh::schema::BorshSchema\">BorshSchema</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.declaration\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_ethereum_bridge/storage/proof.rs.html#22\">source</a><a href=\"#method.declaration\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"borsh/schema/trait.BorshSchema.html#tymethod.declaration\" class=\"fn\">declaration</a>() -&gt; <a class=\"type\" href=\"borsh/schema/type.Declaration.html\" title=\"type borsh::schema::Declaration\">Declaration</a></h4></section></summary><div class='docblock'>Get the name of the type without brackets.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_definitions_recursively\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_ethereum_bridge/storage/proof.rs.html#22\">source</a><a href=\"#method.add_definitions_recursively\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"borsh/schema/trait.BorshSchema.html#tymethod.add_definitions_recursively\" class=\"fn\">add_definitions_recursively</a>(\n    definitions: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/collections/btree/map/struct.BTreeMap.html\" title=\"struct alloc::collections::btree::map::BTreeMap\">BTreeMap</a>&lt;<a class=\"type\" href=\"borsh/schema/type.Declaration.html\" title=\"type borsh::schema::Declaration\">Declaration</a>, <a class=\"enum\" href=\"borsh/schema/enum.Definition.html\" title=\"enum borsh::schema::Definition\">Definition</a>&gt;,\n)</h4></section></summary><div class='docblock'>Recursively, using DFS, add type definitions required for this type.\nType definition partially explains how to serialize/deserialize a type.</div></details></div></details>","BorshSchema","namada_ethereum_bridge::storage::proof::BridgePoolRootProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorshSerialize-for-EthereumProof%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/namada_ethereum_bridge/storage/proof.rs.html#22\">source</a><a href=\"#impl-BorshSerialize-for-EthereumProof%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"borsh/ser/trait.BorshSerialize.html\" title=\"trait borsh::ser::BorshSerialize\">BorshSerialize</a> for <a class=\"struct\" href=\"namada_ethereum_bridge/storage/proof/struct.EthereumProof.html\" title=\"struct namada_ethereum_bridge::storage::proof::EthereumProof\">EthereumProof</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"borsh/ser/trait.BorshSerialize.html\" title=\"trait borsh::ser::BorshSerialize\">BorshSerialize</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_ethereum_bridge/storage/proof.rs.html#22\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"borsh/ser/trait.BorshSerialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__W: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>&gt;(&amp;self, writer: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __W</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></div></details>","BorshSerialize","namada_ethereum_bridge::storage::proof::BridgePoolRootProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-EthereumProof%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/namada_ethereum_bridge/storage/proof.rs.html#22\">source</a><a href=\"#impl-Clone-for-EthereumProof%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"namada_ethereum_bridge/storage/proof/struct.EthereumProof.html\" title=\"struct namada_ethereum_bridge::storage::proof::EthereumProof\">EthereumProof</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_ethereum_bridge/storage/proof.rs.html#22\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"namada_ethereum_bridge/storage/proof/struct.EthereumProof.html\" title=\"struct namada_ethereum_bridge::storage::proof::EthereumProof\">EthereumProof</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","namada_ethereum_bridge::storage::proof::BridgePoolRootProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-EthereumProof%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/namada_ethereum_bridge/storage/proof.rs.html#22\">source</a><a href=\"#impl-Debug-for-EthereumProof%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"namada_ethereum_bridge/storage/proof/struct.EthereumProof.html\" title=\"struct namada_ethereum_bridge::storage::proof::EthereumProof\">EthereumProof</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_ethereum_bridge/storage/proof.rs.html#22\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","namada_ethereum_bridge::storage::proof::BridgePoolRootProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EthereumProof%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/namada_ethereum_bridge/storage/proof.rs.html#33-75\">source</a><a href=\"#impl-EthereumProof%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"namada_ethereum_bridge/storage/proof/struct.EthereumProof.html\" title=\"struct namada_ethereum_bridge::storage::proof::EthereumProof\">EthereumProof</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_ethereum_bridge/storage/proof.rs.html#35-40\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_ethereum_bridge/storage/proof/struct.EthereumProof.html#tymethod.new\" class=\"fn\">new</a>(data: T) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Return an incomplete <a href=\"namada_ethereum_bridge/storage/proof/struct.EthereumProof.html\" title=\"struct namada_ethereum_bridge::storage::proof::EthereumProof\"><code>EthereumProof</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_ethereum_bridge/storage/proof.rs.html#44-52\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_ethereum_bridge/storage/proof/struct.EthereumProof.html#tymethod.map\" class=\"fn\">map</a>&lt;F, R&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"namada_ethereum_bridge/storage/proof/struct.EthereumProof.html\" title=\"struct namada_ethereum_bridge::storage::proof::EthereumProof\">EthereumProof</a>&lt;R&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(T) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Map a function over the inner data of this <a href=\"namada_ethereum_bridge/storage/proof/struct.EthereumProof.html\" title=\"struct namada_ethereum_bridge::storage::proof::EthereumProof\"><code>EthereumProof</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.attach_signature\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_ethereum_bridge/storage/proof.rs.html#55-63\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_ethereum_bridge/storage/proof/struct.EthereumProof.html#tymethod.attach_signature\" class=\"fn\">attach_signature</a>(&amp;mut self, addr_book: <a class=\"struct\" href=\"namada_vote_ext/validator_set_update/struct.EthAddrBook.html\" title=\"struct namada_vote_ext::validator_set_update::EthAddrBook\">EthAddrBook</a>, signature: <a class=\"type\" href=\"namada_core/key/common/type.Signature.html\" title=\"type namada_core::key::common::Signature\">Signature</a>)</h4></section></summary><div class=\"docblock\"><p>Add a new signature to this <a href=\"namada_ethereum_bridge/storage/proof/struct.EthereumProof.html\" title=\"struct namada_ethereum_bridge::storage::proof::EthereumProof\"><code>EthereumProof</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.attach_signature_batch\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_ethereum_bridge/storage/proof.rs.html#66-74\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_ethereum_bridge/storage/proof/struct.EthereumProof.html#tymethod.attach_signature_batch\" class=\"fn\">attach_signature_batch</a>&lt;I, K&gt;(&amp;mut self, batch: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = (<a class=\"struct\" href=\"namada_vote_ext/validator_set_update/struct.EthAddrBook.html\" title=\"struct namada_vote_ext::validator_set_update::EthAddrBook\">EthAddrBook</a>, K)&gt;,\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"type\" href=\"namada_core/key/common/type.Signature.html\" title=\"type namada_core::key::common::Signature\">Signature</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Add a new batch of signatures to this <a href=\"namada_ethereum_bridge/storage/proof/struct.EthereumProof.html\" title=\"struct namada_ethereum_bridge::storage::proof::EthereumProof\"><code>EthereumProof</code></a>.</p>\n</div></details></div></details>",0,"namada_ethereum_bridge::storage::proof::BridgePoolRootProof"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[18644]}