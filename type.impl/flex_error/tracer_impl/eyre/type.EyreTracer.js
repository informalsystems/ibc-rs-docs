(function() {var type_impls = {
"flex_error":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ErrorMessageTracer-for-Report\" class=\"impl\"><a class=\"src rightside\" href=\"src/flex_error/tracer_impl/eyre.rs.html#7-23\">source</a><a href=\"#impl-ErrorMessageTracer-for-Report\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"flex_error/trait.ErrorMessageTracer.html\" title=\"trait flex_error::ErrorMessageTracer\">ErrorMessageTracer</a> for <a class=\"type\" href=\"flex_error/tracer_impl/eyre/type.EyreTracer.html\" title=\"type flex_error::tracer_impl::eyre::EyreTracer\">EyreTracer</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_message\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/flex_error/tracer_impl/eyre.rs.html#8-11\">source</a><a href=\"#method.new_message\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"flex_error/trait.ErrorMessageTracer.html#tymethod.new_message\" class=\"fn\">new_message</a>&lt;E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>&gt;(err: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;E</a>) -&gt; Self</h4></section></summary><div class='docblock'>Creates a new error trace, starting from a source error\ndetail that implements <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\"><code>Display</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_message\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/flex_error/tracer_impl/eyre.rs.html#13-16\">source</a><a href=\"#method.add_message\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"flex_error/trait.ErrorMessageTracer.html#tymethod.add_message\" class=\"fn\">add_message</a>&lt;E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>&gt;(self, err: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;E</a>) -&gt; Self</h4></section></summary><div class='docblock'>Adds new error detail to an existing trace.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_error\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/flex_error/tracer_impl/eyre.rs.html#19-22\">source</a><a href=\"#method.as_error\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"flex_error/trait.ErrorMessageTracer.html#tymethod.as_error\" class=\"fn\">as_error</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;(dyn <a class=\"trait\" href=\"flex_error/trait.StdError.html\" title=\"trait flex_error::StdError\">Error</a> + 'static)&gt;</h4></section></summary><div class='docblock'>If the <code>std</code> feature is enabled, the error tracer\nalso provides method to optionally converts itself\nto a <code>dyn</code> <a href=\"flex_error/trait.StdError.html\" title=\"trait flex_error::StdError\"><code>Error</code></a>.</div></details></div></details>","ErrorMessageTracer","flex_error::DefaultTracer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ErrorTracer%3CE%3E-for-Report\" class=\"impl\"><a class=\"src rightside\" href=\"src/flex_error/tracer_impl/eyre.rs.html#25-37\">source</a><a href=\"#impl-ErrorTracer%3CE%3E-for-Report\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E&gt; <a class=\"trait\" href=\"flex_error/trait.ErrorTracer.html\" title=\"trait flex_error::ErrorTracer\">ErrorTracer</a>&lt;E&gt; for <a class=\"type\" href=\"flex_error/tracer_impl/eyre/type.EyreTracer.html\" title=\"type flex_error::tracer_impl::eyre::EyreTracer\">EyreTracer</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_trace\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/flex_error/tracer_impl/eyre.rs.html#29-31\">source</a><a href=\"#method.new_trace\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"flex_error/trait.ErrorTracer.html#tymethod.new_trace\" class=\"fn\">new_trace</a>(err: E) -&gt; Self</h4></section></summary><div class='docblock'>Create a new error trace from <code>E</code>, also taking ownership of it. <a href=\"flex_error/trait.ErrorTracer.html#tymethod.new_trace\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_trace\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/flex_error/tracer_impl/eyre.rs.html#33-36\">source</a><a href=\"#method.add_trace\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"flex_error/trait.ErrorTracer.html#tymethod.add_trace\" class=\"fn\">add_trace</a>(self, err: E) -&gt; Self</h4></section></summary><div class='docblock'>Add a new error trace from <code>E</code>. In the current underlying implementation,\nthis is effectively still has the same behavior as\n<a href=\"flex_error/trait.ErrorMessageTracer.html#tymethod.add_message\" title=\"method flex_error::ErrorMessageTracer::add_message\"><code>ErrorMessageTracer::add_message</code></a>. This is because <a href=\"eyre/index.html\" title=\"mod eyre\"><code>eyre</code></a> and\n[<code>anyhow</code>] do not support adding new set of backtraces to an existing\ntrace. So effectively, currently the error tracers can track at most\none backtrace coming from the original error source.</div></details></div></details>","ErrorTracer<E>","flex_error::DefaultTracer"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()