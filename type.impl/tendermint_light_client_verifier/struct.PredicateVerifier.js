(function() {var type_impls = {
"tendermint_light_client_verifier":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-PredicateVerifier%3CP,+C,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tendermint_light_client_verifier/verifier.rs.html#96\">source</a><a href=\"#impl-Clone-for-PredicateVerifier%3CP,+C,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, C: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"tendermint_light_client_verifier/struct.PredicateVerifier.html\" title=\"struct tendermint_light_client_verifier::PredicateVerifier\">PredicateVerifier</a>&lt;P, C, V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tendermint_light_client_verifier/verifier.rs.html#96\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"tendermint_light_client_verifier/struct.PredicateVerifier.html\" title=\"struct tendermint_light_client_verifier::PredicateVerifier\">PredicateVerifier</a>&lt;P, C, V&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","tendermint_light_client_verifier::verifier::ProdVerifier"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-PredicateVerifier%3CP,+C,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tendermint_light_client_verifier/verifier.rs.html#96\">source</a><a href=\"#impl-Debug-for-PredicateVerifier%3CP,+C,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, C: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"tendermint_light_client_verifier/struct.PredicateVerifier.html\" title=\"struct tendermint_light_client_verifier::PredicateVerifier\">PredicateVerifier</a>&lt;P, C, V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tendermint_light_client_verifier/verifier.rs.html#96\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","tendermint_light_client_verifier::verifier::ProdVerifier"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-PredicateVerifier%3CP,+C,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tendermint_light_client_verifier/verifier.rs.html#96\">source</a><a href=\"#impl-Default-for-PredicateVerifier%3CP,+C,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>, C: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>, V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"tendermint_light_client_verifier/struct.PredicateVerifier.html\" title=\"struct tendermint_light_client_verifier::PredicateVerifier\">PredicateVerifier</a>&lt;P, C, V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tendermint_light_client_verifier/verifier.rs.html#96\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"tendermint_light_client_verifier/struct.PredicateVerifier.html\" title=\"struct tendermint_light_client_verifier::PredicateVerifier\">PredicateVerifier</a>&lt;P, C, V&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","tendermint_light_client_verifier::verifier::ProdVerifier"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-PredicateVerifier%3CP,+C,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tendermint_light_client_verifier/verifier.rs.html#96\">source</a><a href=\"#impl-PartialEq-for-PredicateVerifier%3CP,+C,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, C: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"tendermint_light_client_verifier/struct.PredicateVerifier.html\" title=\"struct tendermint_light_client_verifier::PredicateVerifier\">PredicateVerifier</a>&lt;P, C, V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tendermint_light_client_verifier/verifier.rs.html#96\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"tendermint_light_client_verifier/struct.PredicateVerifier.html\" title=\"struct tendermint_light_client_verifier::PredicateVerifier\">PredicateVerifier</a>&lt;P, C, V&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","tendermint_light_client_verifier::verifier::ProdVerifier"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PredicateVerifier%3CP,+C,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tendermint_light_client_verifier/verifier.rs.html#103-260\">source</a><a href=\"#impl-PredicateVerifier%3CP,+C,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, C, V&gt; <a class=\"struct\" href=\"tendermint_light_client_verifier/struct.PredicateVerifier.html\" title=\"struct tendermint_light_client_verifier::PredicateVerifier\">PredicateVerifier</a>&lt;P, C, V&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"tendermint_light_client_verifier/predicates/trait.VerificationPredicates.html\" title=\"trait tendermint_light_client_verifier::predicates::VerificationPredicates\">VerificationPredicates</a>,\n    C: <a class=\"trait\" href=\"tendermint_light_client_verifier/operations/voting_power/trait.VotingPowerCalculator.html\" title=\"trait tendermint_light_client_verifier::operations::voting_power::VotingPowerCalculator\">VotingPowerCalculator</a>,\n    V: <a class=\"trait\" href=\"tendermint_light_client_verifier/operations/commit_validator/trait.CommitValidator.html\" title=\"trait tendermint_light_client_verifier::operations::commit_validator::CommitValidator\">CommitValidator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/tendermint_light_client_verifier/verifier.rs.html#110-116\">source</a><h4 class=\"code-header\">pub fn <a href=\"tendermint_light_client_verifier/struct.PredicateVerifier.html#tymethod.new\" class=\"fn\">new</a>(\n    predicates: P,\n    voting_power_calculator: C,\n    commit_validator: V\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Constructor.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify_validator_sets\" class=\"method\"><a class=\"src rightside\" href=\"src/tendermint_light_client_verifier/verifier.rs.html#119-148\">source</a><h4 class=\"code-header\">pub fn <a href=\"tendermint_light_client_verifier/struct.PredicateVerifier.html#tymethod.verify_validator_sets\" class=\"fn\">verify_validator_sets</a>(\n    &amp;self,\n    untrusted: &amp;<a class=\"struct\" href=\"tendermint_light_client_verifier/types/struct.UntrustedBlockState.html\" title=\"struct tendermint_light_client_verifier::types::UntrustedBlockState\">UntrustedBlockState</a>&lt;'_&gt;\n) -&gt; <a class=\"enum\" href=\"tendermint_light_client_verifier/enum.Verdict.html\" title=\"enum tendermint_light_client_verifier::Verdict\">Verdict</a></h4></section></summary><div class=\"docblock\"><p>Validates an <code>UntrustedBlockState</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate_against_trusted\" class=\"method\"><a class=\"src rightside\" href=\"src/tendermint_light_client_verifier/verifier.rs.html#152-194\">source</a><h4 class=\"code-header\">pub fn <a href=\"tendermint_light_client_verifier/struct.PredicateVerifier.html#tymethod.validate_against_trusted\" class=\"fn\">validate_against_trusted</a>(\n    &amp;self,\n    untrusted: &amp;<a class=\"struct\" href=\"tendermint_light_client_verifier/types/struct.UntrustedBlockState.html\" title=\"struct tendermint_light_client_verifier::types::UntrustedBlockState\">UntrustedBlockState</a>&lt;'_&gt;,\n    trusted: &amp;<a class=\"struct\" href=\"tendermint_light_client_verifier/types/struct.TrustedBlockState.html\" title=\"struct tendermint_light_client_verifier::types::TrustedBlockState\">TrustedBlockState</a>&lt;'_&gt;,\n    options: &amp;<a class=\"struct\" href=\"tendermint_light_client_verifier/options/struct.Options.html\" title=\"struct tendermint_light_client_verifier::options::Options\">Options</a>,\n    now: <a class=\"struct\" href=\"tendermint_light_client_verifier/types/struct.Time.html\" title=\"struct tendermint_light_client_verifier::types::Time\">Time</a>\n) -&gt; <a class=\"enum\" href=\"tendermint_light_client_verifier/enum.Verdict.html\" title=\"enum tendermint_light_client_verifier::Verdict\">Verdict</a></h4></section></summary><div class=\"docblock\"><p>Validate an <code>UntrustedBlockState</code> coming from a client update,\nbased on the given <code>TrustedBlockState</code>, <code>Options</code> and current time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_header_is_from_past\" class=\"method\"><a class=\"src rightside\" href=\"src/tendermint_light_client_verifier/verifier.rs.html#197-210\">source</a><h4 class=\"code-header\">pub fn <a href=\"tendermint_light_client_verifier/struct.PredicateVerifier.html#tymethod.check_header_is_from_past\" class=\"fn\">check_header_is_from_past</a>(\n    &amp;self,\n    untrusted: &amp;<a class=\"struct\" href=\"tendermint_light_client_verifier/types/struct.UntrustedBlockState.html\" title=\"struct tendermint_light_client_verifier::types::UntrustedBlockState\">UntrustedBlockState</a>&lt;'_&gt;,\n    options: &amp;<a class=\"struct\" href=\"tendermint_light_client_verifier/options/struct.Options.html\" title=\"struct tendermint_light_client_verifier::options::Options\">Options</a>,\n    now: <a class=\"struct\" href=\"tendermint_light_client_verifier/types/struct.Time.html\" title=\"struct tendermint_light_client_verifier::types::Time\">Time</a>\n) -&gt; <a class=\"enum\" href=\"tendermint_light_client_verifier/enum.Verdict.html\" title=\"enum tendermint_light_client_verifier::Verdict\">Verdict</a></h4></section></summary><div class=\"docblock\"><p>Ensure the header isn’t from a future time</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify_commit\" class=\"method\"><a class=\"src rightside\" href=\"src/tendermint_light_client_verifier/verifier.rs.html#216-224\">source</a><h4 class=\"code-header\">pub fn <a href=\"tendermint_light_client_verifier/struct.PredicateVerifier.html#tymethod.verify_commit\" class=\"fn\">verify_commit</a>(&amp;self, untrusted: &amp;<a class=\"struct\" href=\"tendermint_light_client_verifier/types/struct.UntrustedBlockState.html\" title=\"struct tendermint_light_client_verifier::types::UntrustedBlockState\">UntrustedBlockState</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"tendermint_light_client_verifier/enum.Verdict.html\" title=\"enum tendermint_light_client_verifier::Verdict\">Verdict</a></h4></section></summary><div class=\"docblock\"><p>Verify that more than 2/3 of the validators correctly committed the block.</p>\n<p>Use <a href=\"tendermint_light_client_verifier/struct.PredicateVerifier.html#method.verify_commit_against_trusted\" title=\"method tendermint_light_client_verifier::PredicateVerifier::verify_commit_against_trusted\"><code>PredicateVerifier::verify_commit_against_trusted()</code></a> to also verify that there is\nenough overlap between validator sets.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify_commit_against_trusted\" class=\"method\"><a class=\"src rightside\" href=\"src/tendermint_light_client_verifier/verifier.rs.html#229-259\">source</a><h4 class=\"code-header\">pub fn <a href=\"tendermint_light_client_verifier/struct.PredicateVerifier.html#tymethod.verify_commit_against_trusted\" class=\"fn\">verify_commit_against_trusted</a>(\n    &amp;self,\n    untrusted: &amp;<a class=\"struct\" href=\"tendermint_light_client_verifier/types/struct.UntrustedBlockState.html\" title=\"struct tendermint_light_client_verifier::types::UntrustedBlockState\">UntrustedBlockState</a>&lt;'_&gt;,\n    trusted: &amp;<a class=\"struct\" href=\"tendermint_light_client_verifier/types/struct.TrustedBlockState.html\" title=\"struct tendermint_light_client_verifier::types::TrustedBlockState\">TrustedBlockState</a>&lt;'_&gt;,\n    options: &amp;<a class=\"struct\" href=\"tendermint_light_client_verifier/options/struct.Options.html\" title=\"struct tendermint_light_client_verifier::options::Options\">Options</a>\n) -&gt; <a class=\"enum\" href=\"tendermint_light_client_verifier/enum.Verdict.html\" title=\"enum tendermint_light_client_verifier::Verdict\">Verdict</a></h4></section></summary><div class=\"docblock\"><p>Verify that a) there is enough overlap between the validator sets of the\ntrusted and untrusted blocks and b) more than 2/3 of the validators\ncorrectly committed the block.</p>\n</div></details></div></details>",0,"tendermint_light_client_verifier::verifier::ProdVerifier"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Verifier-for-PredicateVerifier%3CP,+C,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tendermint_light_client_verifier/verifier.rs.html#262-325\">source</a><a href=\"#impl-Verifier-for-PredicateVerifier%3CP,+C,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, C, V&gt; <a class=\"trait\" href=\"tendermint_light_client_verifier/trait.Verifier.html\" title=\"trait tendermint_light_client_verifier::Verifier\">Verifier</a> for <a class=\"struct\" href=\"tendermint_light_client_verifier/struct.PredicateVerifier.html\" title=\"struct tendermint_light_client_verifier::PredicateVerifier\">PredicateVerifier</a>&lt;P, C, V&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"tendermint_light_client_verifier/predicates/trait.VerificationPredicates.html\" title=\"trait tendermint_light_client_verifier::predicates::VerificationPredicates\">VerificationPredicates</a>,\n    C: <a class=\"trait\" href=\"tendermint_light_client_verifier/operations/voting_power/trait.VotingPowerCalculator.html\" title=\"trait tendermint_light_client_verifier::operations::voting_power::VotingPowerCalculator\">VotingPowerCalculator</a>,\n    V: <a class=\"trait\" href=\"tendermint_light_client_verifier/operations/commit_validator/trait.CommitValidator.html\" title=\"trait tendermint_light_client_verifier::operations::commit_validator::CommitValidator\">CommitValidator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify_update_header\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tendermint_light_client_verifier/verifier.rs.html#295-308\">source</a><a href=\"#method.verify_update_header\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"tendermint_light_client_verifier/trait.Verifier.html#tymethod.verify_update_header\" class=\"fn\">verify_update_header</a>(\n    &amp;self,\n    untrusted: <a class=\"struct\" href=\"tendermint_light_client_verifier/types/struct.UntrustedBlockState.html\" title=\"struct tendermint_light_client_verifier::types::UntrustedBlockState\">UntrustedBlockState</a>&lt;'_&gt;,\n    trusted: <a class=\"struct\" href=\"tendermint_light_client_verifier/types/struct.TrustedBlockState.html\" title=\"struct tendermint_light_client_verifier::types::TrustedBlockState\">TrustedBlockState</a>&lt;'_&gt;,\n    options: &amp;<a class=\"struct\" href=\"tendermint_light_client_verifier/options/struct.Options.html\" title=\"struct tendermint_light_client_verifier::options::Options\">Options</a>,\n    now: <a class=\"struct\" href=\"tendermint_light_client_verifier/types/struct.Time.html\" title=\"struct tendermint_light_client_verifier::types::Time\">Time</a>\n) -&gt; <a class=\"enum\" href=\"tendermint_light_client_verifier/enum.Verdict.html\" title=\"enum tendermint_light_client_verifier::Verdict\">Verdict</a></h4></section></summary><div class=\"docblock\"><p>Validate the given light block state by performing the following checks -&gt;</p>\n<ul>\n<li>Validate the untrusted header\n<ul>\n<li>Ensure the header validator hashes match the given validators</li>\n<li>Ensure the header next validator hashes match the given next validators</li>\n<li>Ensure the header matches the commit</li>\n<li>Ensure commit is valid</li>\n</ul>\n</li>\n<li>Validate the untrusted header against the trusted header\n<ul>\n<li>Ensure the latest trusted header hasn’t expired</li>\n<li>Ensure the header isn’t from a future time</li>\n<li>Check that the untrusted block is more recent than the trusted state</li>\n<li>If the untrusted block is the very next block after the trusted block, check that\ntheir (next) validator sets hashes match.</li>\n<li>Otherwise, ensure that the untrusted block has a greater height than the trusted\nblock.</li>\n</ul>\n</li>\n<li>Check there is enough overlap between the validator sets of the trusted and untrusted\nblocks.</li>\n<li>Verify that more than 2/3 of the validators correctly committed the block.</li>\n</ul>\n<p><strong>NOTE</strong>: If the untrusted state’s <code>next_validators</code> field is <code>None</code>,\nthis will not (and will not be able to) check whether the untrusted\nstate’s <code>next_validators_hash</code> field is valid.</p>\n<p><strong>NOTE</strong>: It is the caller’s responsibility to ensure that\n<code>trusted.next_validators.hash() == trusted.next_validators_hash</code>,\nas typically the <code>trusted.next_validators</code> validator set comes from the relayer,\nand <code>trusted.next_validators_hash</code> is the hash stored on chain.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify_misbehaviour_header\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tendermint_light_client_verifier/verifier.rs.html#313-324\">source</a><a href=\"#method.verify_misbehaviour_header\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"tendermint_light_client_verifier/trait.Verifier.html#tymethod.verify_misbehaviour_header\" class=\"fn\">verify_misbehaviour_header</a>(\n    &amp;self,\n    untrusted: <a class=\"struct\" href=\"tendermint_light_client_verifier/types/struct.UntrustedBlockState.html\" title=\"struct tendermint_light_client_verifier::types::UntrustedBlockState\">UntrustedBlockState</a>&lt;'_&gt;,\n    trusted: <a class=\"struct\" href=\"tendermint_light_client_verifier/types/struct.TrustedBlockState.html\" title=\"struct tendermint_light_client_verifier::types::TrustedBlockState\">TrustedBlockState</a>&lt;'_&gt;,\n    options: &amp;<a class=\"struct\" href=\"tendermint_light_client_verifier/options/struct.Options.html\" title=\"struct tendermint_light_client_verifier::options::Options\">Options</a>,\n    now: <a class=\"struct\" href=\"tendermint_light_client_verifier/types/struct.Time.html\" title=\"struct tendermint_light_client_verifier::types::Time\">Time</a>\n) -&gt; <a class=\"enum\" href=\"tendermint_light_client_verifier/enum.Verdict.html\" title=\"enum tendermint_light_client_verifier::Verdict\">Verdict</a></h4></section></summary><div class=\"docblock\"><p>Verify a header received in <code>MsgSubmitMisbehaviour</code>.\nThe verification for these headers is a bit more relaxed in order to catch FLA attacks.\nIn particular the “header in the future” check for the header should be skipped.</p>\n</div></details></div></details>","Verifier","tendermint_light_client_verifier::verifier::ProdVerifier"],["<section id=\"impl-Eq-for-PredicateVerifier%3CP,+C,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tendermint_light_client_verifier/verifier.rs.html#96\">source</a><a href=\"#impl-Eq-for-PredicateVerifier%3CP,+C,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>, C: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>, V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"tendermint_light_client_verifier/struct.PredicateVerifier.html\" title=\"struct tendermint_light_client_verifier::PredicateVerifier\">PredicateVerifier</a>&lt;P, C, V&gt;</h3></section>","Eq","tendermint_light_client_verifier::verifier::ProdVerifier"],["<section id=\"impl-StructuralPartialEq-for-PredicateVerifier%3CP,+C,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tendermint_light_client_verifier/verifier.rs.html#96\">source</a><a href=\"#impl-StructuralPartialEq-for-PredicateVerifier%3CP,+C,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, C, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"tendermint_light_client_verifier/struct.PredicateVerifier.html\" title=\"struct tendermint_light_client_verifier::PredicateVerifier\">PredicateVerifier</a>&lt;P, C, V&gt;</h3></section>","StructuralPartialEq","tendermint_light_client_verifier::verifier::ProdVerifier"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()