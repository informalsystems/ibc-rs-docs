(function() {
    var type_impls = Object.fromEntries([["namada_proof_of_stake",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Collectable-for-LazyMap%3CK,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#109-112\">source</a><a href=\"#impl-Collectable-for-LazyMap%3CK,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V&gt; <a class=\"trait\" href=\"namada_proof_of_stake/trait.Collectable.html\" title=\"trait namada_proof_of_stake::Collectable\">Collectable</a> for <a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyMap.html\" title=\"struct namada_proof_of_stake::LazyMap\">LazyMap</a>&lt;K, V&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"namada_proof_of_stake/trait.KeySeg.html\" title=\"trait namada_proof_of_stake::KeySeg\">KeySeg</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    V: <a class=\"trait\" href=\"borsh/ser/trait.BorshSerialize.html\" title=\"trait borsh::ser::BorshSerialize\">BorshSerialize</a> + <a class=\"trait\" href=\"borsh/de/trait.BorshDeserialize.html\" title=\"trait borsh::de::BorshDeserialize\">BorshDeserialize</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Collected\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#114\">source</a><a href=\"#associatedtype.Collected\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_proof_of_stake/trait.Collectable.html#associatedtype.Collected\" class=\"associatedtype\">Collected</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/collections/btree/map/struct.BTreeMap.html\" title=\"struct alloc::collections::btree::map::BTreeMap\">BTreeMap</a>&lt;K, V&gt;</h4></section></summary><div class='docblock'>The type of the value of the lazy map</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collect_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#116-118\">source</a><a href=\"#method.collect_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_proof_of_stake/trait.Collectable.html#tymethod.collect_map\" class=\"fn\">collect_map</a>&lt;S&gt;(\n    &amp;self,\n    storage: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyMap.html\" title=\"struct namada_proof_of_stake::LazyMap\">LazyMap</a>&lt;K, V&gt; as <a class=\"trait\" href=\"namada_proof_of_stake/trait.Collectable.html\" title=\"trait namada_proof_of_stake::Collectable\">Collectable</a>&gt;::<a class=\"associatedtype\" href=\"namada_proof_of_stake/trait.Collectable.html#associatedtype.Collected\" title=\"type namada_proof_of_stake::Collectable::Collected\">Collected</a>, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageRead.html\" title=\"trait namada_proof_of_stake::StorageRead\">StorageRead</a>,</div></h4></section></summary><div class='docblock'>Collect the lazy map into an eager map</div></details></div></details>","Collectable","namada_proof_of_stake::types::ValidatorPositionAddresses","namada_proof_of_stake::types::IncomingRedelegations","namada_proof_of_stake::types::LivenessSumMissedVotes","namada_proof_of_stake::types::DelegationTargets","namada_proof_of_stake::types::RewardsProducts","namada_proof_of_stake::types::RewardsAccumulator"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Collectable-for-LazyMap%3CK,+V,+Nested%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#82-85\">source</a><a href=\"#impl-Collectable-for-LazyMap%3CK,+V,+Nested%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V&gt; <a class=\"trait\" href=\"namada_proof_of_stake/trait.Collectable.html\" title=\"trait namada_proof_of_stake::Collectable\">Collectable</a> for <a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyMap.html\" title=\"struct namada_proof_of_stake::LazyMap\">LazyMap</a>&lt;K, V, <a class=\"struct\" href=\"namada_storage/collections/struct.Nested.html\" title=\"struct namada_storage::collections::Nested\">Nested</a>&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"namada_proof_of_stake/trait.KeySeg.html\" title=\"trait namada_proof_of_stake::KeySeg\">KeySeg</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    V: <a class=\"trait\" href=\"namada_proof_of_stake/trait.Collectable.html\" title=\"trait namada_proof_of_stake::Collectable\">Collectable</a> + <a class=\"trait\" href=\"namada_proof_of_stake/trait.LazyCollection.html\" title=\"trait namada_proof_of_stake::LazyCollection\">LazyCollection</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Collected\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#87\">source</a><a href=\"#associatedtype.Collected\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_proof_of_stake/trait.Collectable.html#associatedtype.Collected\" class=\"associatedtype\">Collected</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/collections/btree/map/struct.BTreeMap.html\" title=\"struct alloc::collections::btree::map::BTreeMap\">BTreeMap</a>&lt;K, &lt;V as <a class=\"trait\" href=\"namada_proof_of_stake/trait.Collectable.html\" title=\"trait namada_proof_of_stake::Collectable\">Collectable</a>&gt;::<a class=\"associatedtype\" href=\"namada_proof_of_stake/trait.Collectable.html#associatedtype.Collected\" title=\"type namada_proof_of_stake::Collectable::Collected\">Collected</a>&gt;</h4></section></summary><div class='docblock'>The type of the value of the lazy map</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collect_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#89-91\">source</a><a href=\"#method.collect_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_proof_of_stake/trait.Collectable.html#tymethod.collect_map\" class=\"fn\">collect_map</a>&lt;S&gt;(\n    &amp;self,\n    storage: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyMap.html\" title=\"struct namada_proof_of_stake::LazyMap\">LazyMap</a>&lt;K, V, <a class=\"struct\" href=\"namada_storage/collections/struct.Nested.html\" title=\"struct namada_storage::collections::Nested\">Nested</a>&gt; as <a class=\"trait\" href=\"namada_proof_of_stake/trait.Collectable.html\" title=\"trait namada_proof_of_stake::Collectable\">Collectable</a>&gt;::<a class=\"associatedtype\" href=\"namada_proof_of_stake/trait.Collectable.html#associatedtype.Collected\" title=\"type namada_proof_of_stake::Collectable::Collected\">Collected</a>, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageRead.html\" title=\"trait namada_proof_of_stake::StorageRead\">StorageRead</a>,</div></h4></section></summary><div class='docblock'>Collect the lazy map into an eager map</div></details></div></details>","Collectable","namada_proof_of_stake::NestedMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-LazyMap%3CK,+V,+SON%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#31\">source</a><a href=\"#impl-Debug-for-LazyMap%3CK,+V,+SON%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, SON&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyMap.html\" title=\"struct namada_proof_of_stake::LazyMap\">LazyMap</a>&lt;K, V, SON&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    SON: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#31\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","namada_proof_of_stake::types::ValidatorPositionAddresses","namada_proof_of_stake::types::IncomingRedelegations","namada_proof_of_stake::types::LivenessSumMissedVotes","namada_proof_of_stake::types::DelegationTargets","namada_proof_of_stake::types::RewardsProducts","namada_proof_of_stake::types::RewardsAccumulator","namada_proof_of_stake::NestedMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LazyCollection-for-LazyMap%3CK,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#216-219\">source</a><a href=\"#impl-LazyCollection-for-LazyMap%3CK,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V&gt; <a class=\"trait\" href=\"namada_proof_of_stake/trait.LazyCollection.html\" title=\"trait namada_proof_of_stake::LazyCollection\">LazyCollection</a> for <a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyMap.html\" title=\"struct namada_proof_of_stake::LazyMap\">LazyMap</a>&lt;K, V&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"namada_proof_of_stake/trait.KeySeg.html\" title=\"trait namada_proof_of_stake::KeySeg\">KeySeg</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    V: <a class=\"trait\" href=\"borsh/de/trait.BorshDeserialize.html\" title=\"trait borsh::de::BorshDeserialize\">BorshDeserialize</a> + <a class=\"trait\" href=\"borsh/ser/trait.BorshSerialize.html\" title=\"trait borsh::ser::BorshSerialize\">BorshSerialize</a> + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.open\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#225\">source</a><a href=\"#method.open\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_proof_of_stake/trait.LazyCollection.html#tymethod.open\" class=\"fn\">open</a>(key: <a class=\"struct\" href=\"namada_proof_of_stake/struct.Key.html\" title=\"struct namada_proof_of_stake::Key\">Key</a>) -&gt; <a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyMap.html\" title=\"struct namada_proof_of_stake::LazyMap\">LazyMap</a>&lt;K, V&gt;</h4></section></summary><div class=\"docblock\"><p>Create or use an existing map with the given storage <code>key</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.SubKey\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#221\">source</a><a href=\"#associatedtype.SubKey\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_proof_of_stake/trait.LazyCollection.html#associatedtype.SubKey\" class=\"associatedtype\">SubKey</a> = <a class=\"enum\" href=\"namada_proof_of_stake/lazy_map/enum.SubKey.html\" title=\"enum namada_proof_of_stake::lazy_map::SubKey\">SubKey</a>&lt;K&gt;</h4></section></summary><div class='docblock'>Possible sub-keys in the collection</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Value\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#222\">source</a><a href=\"#associatedtype.Value\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_proof_of_stake/trait.LazyCollection.html#associatedtype.Value\" class=\"associatedtype\">Value</a> = V</h4></section></summary><div class='docblock'>A type of a value in the inner-most collection</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_valid_sub_key\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#234-237\">source</a><a href=\"#method.is_valid_sub_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_proof_of_stake/trait.LazyCollection.html#tymethod.is_valid_sub_key\" class=\"fn\">is_valid_sub_key</a>(\n    &amp;self,\n    key: &amp;<a class=\"struct\" href=\"namada_proof_of_stake/struct.Key.html\" title=\"struct namada_proof_of_stake::Key\">Key</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyMap.html\" title=\"struct namada_proof_of_stake::LazyMap\">LazyMap</a>&lt;K, V&gt; as <a class=\"trait\" href=\"namada_proof_of_stake/trait.LazyCollection.html\" title=\"trait namada_proof_of_stake::LazyCollection\">LazyCollection</a>&gt;::<a class=\"associatedtype\" href=\"namada_proof_of_stake/trait.LazyCollection.html#associatedtype.SubKey\" title=\"type namada_proof_of_stake::LazyCollection::SubKey\">SubKey</a>&gt;, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Check if the given storage key is a valid LazyVec sub-key and if so\nreturn which one. Returns: <a href=\"namada_proof_of_stake/trait.LazyCollection.html#tymethod.is_valid_sub_key\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_data_sub_key\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#278\">source</a><a href=\"#method.is_data_sub_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_proof_of_stake/trait.LazyCollection.html#tymethod.is_data_sub_key\" class=\"fn\">is_data_sub_key</a>(&amp;self, key: &amp;<a class=\"struct\" href=\"namada_proof_of_stake/struct.Key.html\" title=\"struct namada_proof_of_stake::Key\">Key</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Check if the given storage key is a valid data key. <a href=\"namada_proof_of_stake/trait.LazyCollection.html#tymethod.is_data_sub_key\">Read more</a></div></details></div></details>","LazyCollection","namada_proof_of_stake::types::ValidatorPositionAddresses","namada_proof_of_stake::types::IncomingRedelegations","namada_proof_of_stake::types::LivenessSumMissedVotes","namada_proof_of_stake::types::DelegationTargets","namada_proof_of_stake::types::RewardsProducts","namada_proof_of_stake::types::RewardsAccumulator"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LazyCollection-for-LazyMap%3CK,+V,+Nested%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#129-132\">source</a><a href=\"#impl-LazyCollection-for-LazyMap%3CK,+V,+Nested%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V&gt; <a class=\"trait\" href=\"namada_proof_of_stake/trait.LazyCollection.html\" title=\"trait namada_proof_of_stake::LazyCollection\">LazyCollection</a> for <a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyMap.html\" title=\"struct namada_proof_of_stake::LazyMap\">LazyMap</a>&lt;K, V, <a class=\"struct\" href=\"namada_storage/collections/struct.Nested.html\" title=\"struct namada_storage::collections::Nested\">Nested</a>&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"namada_proof_of_stake/trait.KeySeg.html\" title=\"trait namada_proof_of_stake::KeySeg\">KeySeg</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    V: <a class=\"trait\" href=\"namada_proof_of_stake/trait.LazyCollection.html\" title=\"trait namada_proof_of_stake::LazyCollection\">LazyCollection</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.SubKey\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#134\">source</a><a href=\"#associatedtype.SubKey\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_proof_of_stake/trait.LazyCollection.html#associatedtype.SubKey\" class=\"associatedtype\">SubKey</a> = <a class=\"enum\" href=\"namada_proof_of_stake/lazy_map/enum.NestedSubKey.html\" title=\"enum namada_proof_of_stake::lazy_map::NestedSubKey\">NestedSubKey</a>&lt;K, &lt;V as <a class=\"trait\" href=\"namada_proof_of_stake/trait.LazyCollection.html\" title=\"trait namada_proof_of_stake::LazyCollection\">LazyCollection</a>&gt;::<a class=\"associatedtype\" href=\"namada_proof_of_stake/trait.LazyCollection.html#associatedtype.SubKey\" title=\"type namada_proof_of_stake::LazyCollection::SubKey\">SubKey</a>&gt;</h4></section></summary><div class='docblock'>Possible sub-keys in the collection</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Value\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#135\">source</a><a href=\"#associatedtype.Value\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_proof_of_stake/trait.LazyCollection.html#associatedtype.Value\" class=\"associatedtype\">Value</a> = &lt;V as <a class=\"trait\" href=\"namada_proof_of_stake/trait.LazyCollection.html\" title=\"trait namada_proof_of_stake::LazyCollection\">LazyCollection</a>&gt;::<a class=\"associatedtype\" href=\"namada_proof_of_stake/trait.LazyCollection.html#associatedtype.Value\" title=\"type namada_proof_of_stake::LazyCollection::Value\">Value</a></h4></section></summary><div class='docblock'>A type of a value in the inner-most collection</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.open\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#137\">source</a><a href=\"#method.open\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_proof_of_stake/trait.LazyCollection.html#tymethod.open\" class=\"fn\">open</a>(key: <a class=\"struct\" href=\"namada_proof_of_stake/struct.Key.html\" title=\"struct namada_proof_of_stake::Key\">Key</a>) -&gt; <a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyMap.html\" title=\"struct namada_proof_of_stake::LazyMap\">LazyMap</a>&lt;K, V, <a class=\"struct\" href=\"namada_storage/collections/struct.Nested.html\" title=\"struct namada_storage::collections::Nested\">Nested</a>&gt;</h4></section></summary><div class='docblock'>Create or use an existing vector with the given storage <code>key</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_valid_sub_key\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#146-149\">source</a><a href=\"#method.is_valid_sub_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_proof_of_stake/trait.LazyCollection.html#tymethod.is_valid_sub_key\" class=\"fn\">is_valid_sub_key</a>(\n    &amp;self,\n    key: &amp;<a class=\"struct\" href=\"namada_proof_of_stake/struct.Key.html\" title=\"struct namada_proof_of_stake::Key\">Key</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyMap.html\" title=\"struct namada_proof_of_stake::LazyMap\">LazyMap</a>&lt;K, V, <a class=\"struct\" href=\"namada_storage/collections/struct.Nested.html\" title=\"struct namada_storage::collections::Nested\">Nested</a>&gt; as <a class=\"trait\" href=\"namada_proof_of_stake/trait.LazyCollection.html\" title=\"trait namada_proof_of_stake::LazyCollection\">LazyCollection</a>&gt;::<a class=\"associatedtype\" href=\"namada_proof_of_stake/trait.LazyCollection.html#associatedtype.SubKey\" title=\"type namada_proof_of_stake::LazyCollection::SubKey\">SubKey</a>&gt;, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Check if the given storage key is a valid LazyVec sub-key and if so\nreturn which one. Returns: <a href=\"namada_proof_of_stake/trait.LazyCollection.html#tymethod.is_valid_sub_key\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_data_sub_key\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#200\">source</a><a href=\"#method.is_data_sub_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_proof_of_stake/trait.LazyCollection.html#tymethod.is_data_sub_key\" class=\"fn\">is_data_sub_key</a>(&amp;self, key: &amp;<a class=\"struct\" href=\"namada_proof_of_stake/struct.Key.html\" title=\"struct namada_proof_of_stake::Key\">Key</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Check if the given storage key is a valid data key. <a href=\"namada_proof_of_stake/trait.LazyCollection.html#tymethod.is_data_sub_key\">Read more</a></div></details></div></details>","LazyCollection","namada_proof_of_stake::NestedMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LazyCollectionExt-for-LazyMap%3CK,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/namada_vp_env/collection_validation/lazy_map.rs.html#119-122\">source</a><a href=\"#impl-LazyCollectionExt-for-LazyMap%3CK,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V&gt; <a class=\"trait\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html\" title=\"trait namada_vp_env::collection_validation::LazyCollectionExt\">LazyCollectionExt</a> for <a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyMap.html\" title=\"struct namada_proof_of_stake::LazyMap\">LazyMap</a>&lt;K, V&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"namada_proof_of_stake/trait.KeySeg.html\" title=\"trait namada_proof_of_stake::KeySeg\">KeySeg</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    V: <a class=\"trait\" href=\"borsh/de/trait.BorshDeserialize.html\" title=\"trait borsh::de::BorshDeserialize\">BorshDeserialize</a> + <a class=\"trait\" href=\"borsh/ser/trait.BorshSerialize.html\" title=\"trait borsh::ser::BorshSerialize\">BorshSerialize</a> + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Action\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/namada_vp_env/collection_validation/lazy_map.rs.html#124\">source</a><a href=\"#associatedtype.Action\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#associatedtype.Action\" class=\"associatedtype\">Action</a> = <a class=\"enum\" href=\"namada_vp_env/collection_validation/lazy_map/enum.Action.html\" title=\"enum namada_vp_env::collection_validation::lazy_map::Action\">Action</a>&lt;K, V&gt;</h4></section></summary><div class='docblock'>Actions on the collection determined from changed storage keys by\n<code>Self::validate</code></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.SubKeyWithData\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/namada_vp_env/collection_validation/lazy_map.rs.html#125\">source</a><a href=\"#associatedtype.SubKeyWithData\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#associatedtype.SubKeyWithData\" class=\"associatedtype\">SubKeyWithData</a> = <a class=\"enum\" href=\"namada_vp_env/collection_validation/lazy_map/enum.SubKeyWithData.html\" title=\"enum namada_vp_env::collection_validation::lazy_map::SubKeyWithData\">SubKeyWithData</a>&lt;K, V&gt;</h4></section></summary><div class='docblock'>Possible sub-keys together with the data read from storage</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_sub_key_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_vp_env/collection_validation/lazy_map.rs.html#127-133\">source</a><a href=\"#method.read_sub_key_data\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#tymethod.read_sub_key_data\" class=\"fn\">read_sub_key_data</a>&lt;ENV&gt;(\n    env: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;ENV</a>,\n    storage_key: &amp;<a class=\"struct\" href=\"namada_proof_of_stake/struct.Key.html\" title=\"struct namada_proof_of_stake::Key\">Key</a>,\n    sub_key: &lt;<a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyMap.html\" title=\"struct namada_proof_of_stake::LazyMap\">LazyMap</a>&lt;K, V&gt; as <a class=\"trait\" href=\"namada_proof_of_stake/trait.LazyCollection.html\" title=\"trait namada_proof_of_stake::LazyCollection\">LazyCollection</a>&gt;::<a class=\"associatedtype\" href=\"namada_proof_of_stake/trait.LazyCollection.html#associatedtype.SubKey\" title=\"type namada_proof_of_stake::LazyCollection::SubKey\">SubKey</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyMap.html\" title=\"struct namada_proof_of_stake::LazyMap\">LazyMap</a>&lt;K, V&gt; as <a class=\"trait\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html\" title=\"trait namada_vp_env::collection_validation::LazyCollectionExt\">LazyCollectionExt</a>&gt;::<a class=\"associatedtype\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#associatedtype.SubKeyWithData\" title=\"type namada_vp_env::collection_validation::LazyCollectionExt::SubKeyWithData\">SubKeyWithData</a>&gt;, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    ENV: for&lt;'a&gt; <a class=\"trait\" href=\"namada_vp_env/trait.VpEnv.html\" title=\"trait namada_vp_env::VpEnv\">VpEnv</a>&lt;'a&gt;,</div></h4></section></summary><div class='docblock'>Try to read and decode the data for each change storage key in prior and\nposterior state. If there is no value in neither prior or posterior\nstate (which is a possible state when transaction e.g. writes and then\ndeletes one storage key, but it is treated as a no-op as it doesn’t\naffect result of validation), returns <code>Ok(None)</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate_changed_sub_keys\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_vp_env/collection_validation/lazy_map.rs.html#140-142\">source</a><a href=\"#method.validate_changed_sub_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#tymethod.validate_changed_sub_keys\" class=\"fn\">validate_changed_sub_keys</a>(\n    keys: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;<a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyMap.html\" title=\"struct namada_proof_of_stake::LazyMap\">LazyMap</a>&lt;K, V&gt; as <a class=\"trait\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html\" title=\"trait namada_vp_env::collection_validation::LazyCollectionExt\">LazyCollectionExt</a>&gt;::<a class=\"associatedtype\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#associatedtype.SubKeyWithData\" title=\"type namada_vp_env::collection_validation::LazyCollectionExt::SubKeyWithData\">SubKeyWithData</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;<a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyMap.html\" title=\"struct namada_proof_of_stake::LazyMap\">LazyMap</a>&lt;K, V&gt; as <a class=\"trait\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html\" title=\"trait namada_vp_env::collection_validation::LazyCollectionExt\">LazyCollectionExt</a>&gt;::<a class=\"associatedtype\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#associatedtype.Action\" title=\"type namada_vp_env::collection_validation::LazyCollectionExt::Action\">Action</a>&gt;, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Validate changed sub-keys associated with their data and return back\na vector of <code>Self::Action</code>s, if the changes are valid</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.accumulate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_vp_env/collection_validation/mod.rs.html#110-117\">source</a><a href=\"#method.accumulate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#method.accumulate\" class=\"fn\">accumulate</a>&lt;ENV&gt;(\n    &amp;self,\n    env: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;ENV</a>,\n    builder: &amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"namada_vp_env/collection_validation/struct.ValidationBuilder.html\" title=\"struct namada_vp_env::collection_validation::ValidationBuilder\">ValidationBuilder</a>&lt;Self::<a class=\"associatedtype\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#associatedtype.SubKeyWithData\" title=\"type namada_vp_env::collection_validation::LazyCollectionExt::SubKeyWithData\">SubKeyWithData</a>&gt;&gt;,\n    key_changed: &amp;<a class=\"struct\" href=\"namada_proof_of_stake/struct.Key.html\" title=\"struct namada_proof_of_stake::Key\">Key</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    ENV: for&lt;'a&gt; <a class=\"trait\" href=\"namada_vp_env/trait.VpEnv.html\" title=\"trait namada_vp_env::VpEnv\">VpEnv</a>&lt;'a&gt;,</div></h4></section></summary><div class='docblock'>Accumulate storage changes inside a <code>ValidationBuilder</code>. This is\ntypically done by the validity predicate while looping through the\nchanged keys. If the resulting <code>builder</code> is not <code>None</code>, one must\ncall <code>fn build()</code> on it to get the validation result.\nThis function will return <code>Ok(true)</code> if the storage key is a valid\nsub-key of this collection, <code>Ok(false)</code> if the storage key doesn’t match\nthe prefix of this collection, or error if the prefix matches this\ncollection, but the key itself is not recognized.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_vp_env/collection_validation/mod.rs.html#134-136\">source</a><a href=\"#method.validate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#method.validate\" class=\"fn\">validate</a>(\n    builder: <a class=\"struct\" href=\"namada_vp_env/collection_validation/struct.ValidationBuilder.html\" title=\"struct namada_vp_env::collection_validation::ValidationBuilder\">ValidationBuilder</a>&lt;Self::<a class=\"associatedtype\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#associatedtype.SubKeyWithData\" title=\"type namada_vp_env::collection_validation::LazyCollectionExt::SubKeyWithData\">SubKeyWithData</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Self::<a class=\"associatedtype\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#associatedtype.Action\" title=\"type namada_vp_env::collection_validation::LazyCollectionExt::Action\">Action</a>&gt;, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Execute validation on the validation builder, to be called when\n<code>accumulate</code> instantiates the builder to <code>Some(_)</code>, after all the\nchanges storage keys have been processed.</div></details></div></details>","LazyCollectionExt","namada_proof_of_stake::types::ValidatorPositionAddresses","namada_proof_of_stake::types::IncomingRedelegations","namada_proof_of_stake::types::LivenessSumMissedVotes","namada_proof_of_stake::types::DelegationTargets","namada_proof_of_stake::types::RewardsProducts","namada_proof_of_stake::types::RewardsAccumulator"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LazyCollectionExt-for-LazyMap%3CK,+V,+Nested%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/namada_vp_env/collection_validation/lazy_map.rs.html#49-52\">source</a><a href=\"#impl-LazyCollectionExt-for-LazyMap%3CK,+V,+Nested%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V&gt; <a class=\"trait\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html\" title=\"trait namada_vp_env::collection_validation::LazyCollectionExt\">LazyCollectionExt</a> for <a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyMap.html\" title=\"struct namada_proof_of_stake::LazyMap\">LazyMap</a>&lt;K, V, <a class=\"struct\" href=\"namada_storage/collections/struct.Nested.html\" title=\"struct namada_storage::collections::Nested\">Nested</a>&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"namada_proof_of_stake/trait.KeySeg.html\" title=\"trait namada_proof_of_stake::KeySeg\">KeySeg</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    V: <a class=\"trait\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html\" title=\"trait namada_vp_env::collection_validation::LazyCollectionExt\">LazyCollectionExt</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Action\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/namada_vp_env/collection_validation/lazy_map.rs.html#54\">source</a><a href=\"#associatedtype.Action\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#associatedtype.Action\" class=\"associatedtype\">Action</a> = <a class=\"enum\" href=\"namada_vp_env/collection_validation/lazy_map/enum.NestedAction.html\" title=\"enum namada_vp_env::collection_validation::lazy_map::NestedAction\">NestedAction</a>&lt;K, &lt;V as <a class=\"trait\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html\" title=\"trait namada_vp_env::collection_validation::LazyCollectionExt\">LazyCollectionExt</a>&gt;::<a class=\"associatedtype\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#associatedtype.Action\" title=\"type namada_vp_env::collection_validation::LazyCollectionExt::Action\">Action</a>&gt;</h4></section></summary><div class='docblock'>Actions on the collection determined from changed storage keys by\n<code>Self::validate</code></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.SubKeyWithData\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/namada_vp_env/collection_validation/lazy_map.rs.html#55\">source</a><a href=\"#associatedtype.SubKeyWithData\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#associatedtype.SubKeyWithData\" class=\"associatedtype\">SubKeyWithData</a> = <a class=\"enum\" href=\"namada_proof_of_stake/lazy_map/enum.NestedSubKey.html\" title=\"enum namada_proof_of_stake::lazy_map::NestedSubKey\">NestedSubKey</a>&lt;K, &lt;V as <a class=\"trait\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html\" title=\"trait namada_vp_env::collection_validation::LazyCollectionExt\">LazyCollectionExt</a>&gt;::<a class=\"associatedtype\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#associatedtype.SubKeyWithData\" title=\"type namada_vp_env::collection_validation::LazyCollectionExt::SubKeyWithData\">SubKeyWithData</a>&gt;</h4></section></summary><div class='docblock'>Possible sub-keys together with the data read from storage</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_sub_key_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_vp_env/collection_validation/lazy_map.rs.html#58-64\">source</a><a href=\"#method.read_sub_key_data\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#tymethod.read_sub_key_data\" class=\"fn\">read_sub_key_data</a>&lt;ENV&gt;(\n    env: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;ENV</a>,\n    storage_key: &amp;<a class=\"struct\" href=\"namada_proof_of_stake/struct.Key.html\" title=\"struct namada_proof_of_stake::Key\">Key</a>,\n    sub_key: &lt;<a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyMap.html\" title=\"struct namada_proof_of_stake::LazyMap\">LazyMap</a>&lt;K, V, <a class=\"struct\" href=\"namada_storage/collections/struct.Nested.html\" title=\"struct namada_storage::collections::Nested\">Nested</a>&gt; as <a class=\"trait\" href=\"namada_proof_of_stake/trait.LazyCollection.html\" title=\"trait namada_proof_of_stake::LazyCollection\">LazyCollection</a>&gt;::<a class=\"associatedtype\" href=\"namada_proof_of_stake/trait.LazyCollection.html#associatedtype.SubKey\" title=\"type namada_proof_of_stake::LazyCollection::SubKey\">SubKey</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyMap.html\" title=\"struct namada_proof_of_stake::LazyMap\">LazyMap</a>&lt;K, V, <a class=\"struct\" href=\"namada_storage/collections/struct.Nested.html\" title=\"struct namada_storage::collections::Nested\">Nested</a>&gt; as <a class=\"trait\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html\" title=\"trait namada_vp_env::collection_validation::LazyCollectionExt\">LazyCollectionExt</a>&gt;::<a class=\"associatedtype\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#associatedtype.SubKeyWithData\" title=\"type namada_vp_env::collection_validation::LazyCollectionExt::SubKeyWithData\">SubKeyWithData</a>&gt;, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    ENV: for&lt;'a&gt; <a class=\"trait\" href=\"namada_vp_env/trait.VpEnv.html\" title=\"trait namada_vp_env::VpEnv\">VpEnv</a>&lt;'a&gt;,</div></h4></section></summary><div class='docblock'>Try to read and decode the data for each change storage key in prior and\nposterior state. If there is no value in neither prior or posterior\nstate (which is a possible state when transaction e.g. writes and then\ndeletes one storage key, but it is treated as a no-op as it doesn’t\naffect result of validation), returns <code>Ok(None)</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate_changed_sub_keys\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_vp_env/collection_validation/lazy_map.rs.html#85-87\">source</a><a href=\"#method.validate_changed_sub_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#tymethod.validate_changed_sub_keys\" class=\"fn\">validate_changed_sub_keys</a>(\n    keys: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;<a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyMap.html\" title=\"struct namada_proof_of_stake::LazyMap\">LazyMap</a>&lt;K, V, <a class=\"struct\" href=\"namada_storage/collections/struct.Nested.html\" title=\"struct namada_storage::collections::Nested\">Nested</a>&gt; as <a class=\"trait\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html\" title=\"trait namada_vp_env::collection_validation::LazyCollectionExt\">LazyCollectionExt</a>&gt;::<a class=\"associatedtype\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#associatedtype.SubKeyWithData\" title=\"type namada_vp_env::collection_validation::LazyCollectionExt::SubKeyWithData\">SubKeyWithData</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;<a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyMap.html\" title=\"struct namada_proof_of_stake::LazyMap\">LazyMap</a>&lt;K, V, <a class=\"struct\" href=\"namada_storage/collections/struct.Nested.html\" title=\"struct namada_storage::collections::Nested\">Nested</a>&gt; as <a class=\"trait\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html\" title=\"trait namada_vp_env::collection_validation::LazyCollectionExt\">LazyCollectionExt</a>&gt;::<a class=\"associatedtype\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#associatedtype.Action\" title=\"type namada_vp_env::collection_validation::LazyCollectionExt::Action\">Action</a>&gt;, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Validate changed sub-keys associated with their data and return back\na vector of <code>Self::Action</code>s, if the changes are valid</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.accumulate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_vp_env/collection_validation/mod.rs.html#110-117\">source</a><a href=\"#method.accumulate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#method.accumulate\" class=\"fn\">accumulate</a>&lt;ENV&gt;(\n    &amp;self,\n    env: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;ENV</a>,\n    builder: &amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"namada_vp_env/collection_validation/struct.ValidationBuilder.html\" title=\"struct namada_vp_env::collection_validation::ValidationBuilder\">ValidationBuilder</a>&lt;Self::<a class=\"associatedtype\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#associatedtype.SubKeyWithData\" title=\"type namada_vp_env::collection_validation::LazyCollectionExt::SubKeyWithData\">SubKeyWithData</a>&gt;&gt;,\n    key_changed: &amp;<a class=\"struct\" href=\"namada_proof_of_stake/struct.Key.html\" title=\"struct namada_proof_of_stake::Key\">Key</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    ENV: for&lt;'a&gt; <a class=\"trait\" href=\"namada_vp_env/trait.VpEnv.html\" title=\"trait namada_vp_env::VpEnv\">VpEnv</a>&lt;'a&gt;,</div></h4></section></summary><div class='docblock'>Accumulate storage changes inside a <code>ValidationBuilder</code>. This is\ntypically done by the validity predicate while looping through the\nchanged keys. If the resulting <code>builder</code> is not <code>None</code>, one must\ncall <code>fn build()</code> on it to get the validation result.\nThis function will return <code>Ok(true)</code> if the storage key is a valid\nsub-key of this collection, <code>Ok(false)</code> if the storage key doesn’t match\nthe prefix of this collection, or error if the prefix matches this\ncollection, but the key itself is not recognized.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_vp_env/collection_validation/mod.rs.html#134-136\">source</a><a href=\"#method.validate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#method.validate\" class=\"fn\">validate</a>(\n    builder: <a class=\"struct\" href=\"namada_vp_env/collection_validation/struct.ValidationBuilder.html\" title=\"struct namada_vp_env::collection_validation::ValidationBuilder\">ValidationBuilder</a>&lt;Self::<a class=\"associatedtype\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#associatedtype.SubKeyWithData\" title=\"type namada_vp_env::collection_validation::LazyCollectionExt::SubKeyWithData\">SubKeyWithData</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Self::<a class=\"associatedtype\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#associatedtype.Action\" title=\"type namada_vp_env::collection_validation::LazyCollectionExt::Action\">Action</a>&gt;, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Execute validation on the validation builder, to be called when\n<code>accumulate</code> instantiates the builder to <code>Some(_)</code>, after all the\nchanges storage keys have been processed.</div></details></div></details>","LazyCollectionExt","namada_proof_of_stake::NestedMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LazyMap%3CK,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#381-384\">source</a><a href=\"#impl-LazyMap%3CK,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V&gt; <a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyMap.html\" title=\"struct namada_proof_of_stake::LazyMap\">LazyMap</a>&lt;K, V&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"namada_proof_of_stake/trait.KeySeg.html\" title=\"trait namada_proof_of_stake::KeySeg\">KeySeg</a>,\n    V: <a class=\"trait\" href=\"borsh/de/trait.BorshDeserialize.html\" title=\"trait borsh::de::BorshDeserialize\">BorshDeserialize</a> + <a class=\"trait\" href=\"borsh/ser/trait.BorshSerialize.html\" title=\"trait borsh::ser::BorshSerialize\">BorshSerialize</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#396-403\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_proof_of_stake/struct.LazyMap.html#tymethod.insert\" class=\"fn\">insert</a>&lt;S&gt;(\n    &amp;self,\n    storage: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut S</a>,\n    key: K,\n    val: V,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageWrite.html\" title=\"trait namada_proof_of_stake::StorageWrite\">StorageWrite</a> + <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageRead.html\" title=\"trait namada_proof_of_stake::StorageRead\">StorageRead</a>,</div></h4></section></summary><div class=\"docblock\"><p>Inserts a key-value pair into the map.</p>\n<p>The full storage key identifies the key in the pair, while the value is\nheld within the storage key.</p>\n<p>If the map did not have this key present, <code>None</code> is returned.\nIf the map did have this key present, the value is updated, and the old\nvalue is returned. Unlike in <code>std::collection::HashMap</code>, the key is also\nupdated; this matters for types that can be <code>==</code> without being\nidentical.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#415-417\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_proof_of_stake/struct.LazyMap.html#tymethod.remove\" class=\"fn\">remove</a>&lt;S&gt;(&amp;self, storage: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut S</a>, key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageWrite.html\" title=\"trait namada_proof_of_stake::StorageWrite\">StorageWrite</a> + <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageRead.html\" title=\"trait namada_proof_of_stake::StorageRead\">StorageRead</a>,</div></h4></section></summary><div class=\"docblock\"><p>Removes a key from the map if it’s present, returning the value at the\nkey if the key was previously in the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#430-432\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_proof_of_stake/struct.LazyMap.html#tymethod.get\" class=\"fn\">get</a>&lt;S&gt;(&amp;self, storage: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a>, key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageRead.html\" title=\"trait namada_proof_of_stake::StorageRead\">StorageRead</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the value corresponding to the key, if any.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#440-443\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_proof_of_stake/struct.LazyMap.html#tymethod.update\" class=\"fn\">update</a>&lt;S, F&gt;(&amp;self, storage: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut S</a>, key: K, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageWrite.html\" title=\"trait namada_proof_of_stake::StorageWrite\">StorageWrite</a> + <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageRead.html\" title=\"trait namada_proof_of_stake::StorageRead\">StorageRead</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;) -&gt; V,</div></h4></section></summary><div class=\"docblock\"><p>Update a value at the given key with the given function. If no existing\nvalue exists, the closure’s argument will be <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_update\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#455-458\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_proof_of_stake/struct.LazyMap.html#tymethod.try_update\" class=\"fn\">try_update</a>&lt;S, F&gt;(\n    &amp;self,\n    storage: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut S</a>,\n    key: K,\n    f: F,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageWrite.html\" title=\"trait namada_proof_of_stake::StorageWrite\">StorageWrite</a> + <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageRead.html\" title=\"trait namada_proof_of_stake::StorageRead\">StorageRead</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;V, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try update a value at the given key with the given function that may\nfail. If no existing value exists, the closure’s argument will be\n<code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#468-470\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_proof_of_stake/struct.LazyMap.html#tymethod.contains\" class=\"fn\">contains</a>&lt;S&gt;(&amp;self, storage: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a>, key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageRead.html\" title=\"trait namada_proof_of_stake::StorageRead\">StorageRead</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns whether the map contains a key with a value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#476-478\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_proof_of_stake/struct.LazyMap.html#tymethod.is_empty\" class=\"fn\">is_empty</a>&lt;S&gt;(&amp;self, storage: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageRead.html\" title=\"trait namada_proof_of_stake::StorageRead\">StorageRead</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns whether the map contains no elements.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#491-493\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_proof_of_stake/struct.LazyMap.html#tymethod.len\" class=\"fn\">len</a>&lt;S&gt;(&amp;self, storage: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageRead.html\" title=\"trait namada_proof_of_stake::StorageRead\">StorageRead</a>,</div></h4></section></summary><div class=\"docblock\"><p>Reads the number of elements in the map.</p>\n<p>Note that this function shouldn’t be used in transactions and VPs code\non unbounded maps to avoid gas usage increasing with the length of the\nset.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#506-509\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_proof_of_stake/struct.LazyMap.html#tymethod.iter\" class=\"fn\">iter</a>&lt;'iter&gt;(\n    &amp;self,\n    storage: &amp;'iter impl <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageRead.html\" title=\"trait namada_proof_of_stake::StorageRead\">StorageRead</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(K, V)</a>, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;&gt; + 'iter, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>An iterator visiting all key-value elements. The iterator element type\nis <code>Result&lt;(K, V)&gt;</code>, because iterator’s call to <code>next</code> may fail with\ne.g. out of gas or data decoding error.</p>\n<p>Note that this function shouldn’t be used in transactions and VPs code\non unbounded maps to avoid gas usage increasing with the length of the\nmap.</p>\n</div></details></div></details>",0,"namada_proof_of_stake::types::ValidatorPositionAddresses","namada_proof_of_stake::types::IncomingRedelegations","namada_proof_of_stake::types::LivenessSumMissedVotes","namada_proof_of_stake::types::DelegationTargets","namada_proof_of_stake::types::RewardsProducts","namada_proof_of_stake::types::RewardsAccumulator"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LazyMap%3CK,+V,+Nested%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#301-304\">source</a><a href=\"#impl-LazyMap%3CK,+V,+Nested%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V&gt; <a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyMap.html\" title=\"struct namada_proof_of_stake::LazyMap\">LazyMap</a>&lt;K, V, <a class=\"struct\" href=\"namada_storage/collections/struct.Nested.html\" title=\"struct namada_storage::collections::Nested\">Nested</a>&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"namada_proof_of_stake/trait.KeySeg.html\" title=\"trait namada_proof_of_stake::KeySeg\">KeySeg</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    V: <a class=\"trait\" href=\"namada_proof_of_stake/trait.LazyCollection.html\" title=\"trait namada_proof_of_stake::LazyCollection\">LazyCollection</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.at\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#309\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_proof_of_stake/struct.LazyMap.html#tymethod.at\" class=\"fn\">at</a>(&amp;self, key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>) -&gt; V</h4></section></summary><div class=\"docblock\"><p>Get a nested collection at given key <code>key</code>. If there is no nested\ncollection at the given key, a new empty one will be provided. The\nnested collection may be manipulated through its methods.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#314-316\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_proof_of_stake/struct.LazyMap.html#tymethod.contains\" class=\"fn\">contains</a>&lt;S&gt;(&amp;self, storage: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a>, key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageRead.html\" title=\"trait namada_proof_of_stake::StorageRead\">StorageRead</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns whether the nested map contains a certain key with data inside.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#324-326\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_proof_of_stake/struct.LazyMap.html#tymethod.remove_all\" class=\"fn\">remove_all</a>&lt;S&gt;(&amp;self, storage: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut S</a>, key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageRead.html\" title=\"trait namada_proof_of_stake::StorageRead\">StorageRead</a> + <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageWrite.html\" title=\"trait namada_proof_of_stake::StorageWrite\">StorageWrite</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove all map entries at a given key prefix</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#344-354\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_proof_of_stake/struct.LazyMap.html#tymethod.iter\" class=\"fn\">iter</a>&lt;'iter&gt;(\n    &amp;'iter self,\n    storage: &amp;'iter impl <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageRead.html\" title=\"trait namada_proof_of_stake::StorageRead\">StorageRead</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&lt;<a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyMap.html\" title=\"struct namada_proof_of_stake::LazyMap\">LazyMap</a>&lt;K, V, <a class=\"struct\" href=\"namada_storage/collections/struct.Nested.html\" title=\"struct namada_storage::collections::Nested\">Nested</a>&gt; as <a class=\"trait\" href=\"namada_proof_of_stake/trait.LazyCollection.html\" title=\"trait namada_proof_of_stake::LazyCollection\">LazyCollection</a>&gt;::<a class=\"associatedtype\" href=\"namada_proof_of_stake/trait.LazyCollection.html#associatedtype.SubKey\" title=\"type namada_proof_of_stake::LazyCollection::SubKey\">SubKey</a>, &lt;<a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyMap.html\" title=\"struct namada_proof_of_stake::LazyMap\">LazyMap</a>&lt;K, V, <a class=\"struct\" href=\"namada_storage/collections/struct.Nested.html\" title=\"struct namada_storage::collections::Nested\">Nested</a>&gt; as <a class=\"trait\" href=\"namada_proof_of_stake/trait.LazyCollection.html\" title=\"trait namada_proof_of_stake::LazyCollection\">LazyCollection</a>&gt;::<a class=\"associatedtype\" href=\"namada_proof_of_stake/trait.LazyCollection.html#associatedtype.Value\" title=\"type namada_proof_of_stake::LazyCollection::Value\">Value</a>), <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;&gt; + 'iter, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>An iterator visiting all key-value elements, where the values are from\nthe inner-most collection. The iterator element type is <code>Result&lt;_&gt;</code>,\nbecause iterator’s call to <code>next</code> may fail with e.g. out of gas or\ndata decoding error.</p>\n<p>Note that this function shouldn’t be used in transactions and VPs code\non unbounded maps to avoid gas usage increasing with the length of the\nmap.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#370-372\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_proof_of_stake/struct.LazyMap.html#tymethod.is_empty\" class=\"fn\">is_empty</a>&lt;S&gt;(&amp;self, storage: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageRead.html\" title=\"trait namada_proof_of_stake::StorageRead\">StorageRead</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns whether the map contains no elements.</p>\n</div></details></div></details>",0,"namada_proof_of_stake::NestedMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LazyMap%3CK,+V,+SON%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#284-286\">source</a><a href=\"#impl-LazyMap%3CK,+V,+SON%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, SON&gt; <a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyMap.html\" title=\"struct namada_proof_of_stake::LazyMap\">LazyMap</a>&lt;K, V, SON&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"namada_proof_of_stake/trait.KeySeg.html\" title=\"trait namada_proof_of_stake::KeySeg\">KeySeg</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_data_key\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_map.rs.html#294\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_proof_of_stake/struct.LazyMap.html#tymethod.get_data_key\" class=\"fn\">get_data_key</a>(&amp;self, key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>) -&gt; <a class=\"struct\" href=\"namada_proof_of_stake/struct.Key.html\" title=\"struct namada_proof_of_stake::Key\">Key</a></h4></section></summary><div class=\"docblock\"><p>Get the sub-key of a given element</p>\n</div></details></div></details>",0,"namada_proof_of_stake::types::ValidatorPositionAddresses","namada_proof_of_stake::types::IncomingRedelegations","namada_proof_of_stake::types::LivenessSumMissedVotes","namada_proof_of_stake::types::DelegationTargets","namada_proof_of_stake::types::RewardsProducts","namada_proof_of_stake::types::RewardsAccumulator","namada_proof_of_stake::NestedMap"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[79751]}