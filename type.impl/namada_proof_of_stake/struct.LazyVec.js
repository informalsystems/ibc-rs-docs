(function() {
    var type_impls = Object.fromEntries([["namada_proof_of_stake",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-LazyVec%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_vec.rs.html#29\">source</a><a href=\"#impl-Clone-for-LazyVec%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyVec.html\" title=\"struct namada_proof_of_stake::LazyVec\">LazyVec</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_vec.rs.html#29\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyVec.html\" title=\"struct namada_proof_of_stake::LazyVec\">LazyVec</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","namada_proof_of_stake::types::Slashes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-LazyVec%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_vec.rs.html#29\">source</a><a href=\"#impl-Debug-for-LazyVec%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyVec.html\" title=\"struct namada_proof_of_stake::LazyVec\">LazyVec</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_vec.rs.html#29\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","namada_proof_of_stake::types::Slashes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LazyCollection-for-LazyVec%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_vec.rs.html#77-79\">source</a><a href=\"#impl-LazyCollection-for-LazyVec%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"namada_proof_of_stake/trait.LazyCollection.html\" title=\"trait namada_proof_of_stake::LazyCollection\">LazyCollection</a> for <a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyVec.html\" title=\"struct namada_proof_of_stake::LazyVec\">LazyVec</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"borsh/ser/trait.BorshSerialize.html\" title=\"trait borsh::ser::BorshSerialize\">BorshSerialize</a> + <a class=\"trait\" href=\"borsh/de/trait.BorshDeserialize.html\" title=\"trait borsh::de::BorshDeserialize\">BorshDeserialize</a> + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.open\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_vec.rs.html#85\">source</a><a href=\"#method.open\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_proof_of_stake/trait.LazyCollection.html#tymethod.open\" class=\"fn\">open</a>(key: <a class=\"struct\" href=\"namada_proof_of_stake/struct.Key.html\" title=\"struct namada_proof_of_stake::Key\">Key</a>) -&gt; <a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyVec.html\" title=\"struct namada_proof_of_stake::LazyVec\">LazyVec</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Create or use an existing vector with the given storage <code>key</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_valid_sub_key\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_vec.rs.html#94-97\">source</a><a href=\"#method.is_valid_sub_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_proof_of_stake/trait.LazyCollection.html#tymethod.is_valid_sub_key\" class=\"fn\">is_valid_sub_key</a>(&amp;self, key: &amp;<a class=\"struct\" href=\"namada_proof_of_stake/struct.Key.html\" title=\"struct namada_proof_of_stake::Key\">Key</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"namada_proof_of_stake/lazy_vec/enum.SubKey.html\" title=\"enum namada_proof_of_stake::lazy_vec::SubKey\">SubKey</a>&gt;, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Check if the given storage key is a valid LazyVec sub-key and if so\nreturn which one</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.SubKey\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_vec.rs.html#81\">source</a><a href=\"#associatedtype.SubKey\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_proof_of_stake/trait.LazyCollection.html#associatedtype.SubKey\" class=\"associatedtype\">SubKey</a> = <a class=\"enum\" href=\"namada_proof_of_stake/lazy_vec/enum.SubKey.html\" title=\"enum namada_proof_of_stake::lazy_vec::SubKey\">SubKey</a></h4></section></summary><div class='docblock'>Possible sub-keys in the collection</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Value\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_vec.rs.html#82\">source</a><a href=\"#associatedtype.Value\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_proof_of_stake/trait.LazyCollection.html#associatedtype.Value\" class=\"associatedtype\">Value</a> = T</h4></section></summary><div class='docblock'>A type of a value in the inner-most collection</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_data_sub_key\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_vec.rs.html#141\">source</a><a href=\"#method.is_data_sub_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_proof_of_stake/trait.LazyCollection.html#tymethod.is_data_sub_key\" class=\"fn\">is_data_sub_key</a>(&amp;self, key: &amp;<a class=\"struct\" href=\"namada_proof_of_stake/struct.Key.html\" title=\"struct namada_proof_of_stake::Key\">Key</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Check if the given storage key is a valid data key. <a href=\"namada_proof_of_stake/trait.LazyCollection.html#tymethod.is_data_sub_key\">Read more</a></div></details></div></details>","LazyCollection","namada_proof_of_stake::types::Slashes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LazyCollectionExt-for-LazyVec%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/namada_vp_env/collection_validation/lazy_vec.rs.html#46-48\">source</a><a href=\"#impl-LazyCollectionExt-for-LazyVec%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html\" title=\"trait namada_vp_env::collection_validation::LazyCollectionExt\">LazyCollectionExt</a> for <a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyVec.html\" title=\"struct namada_proof_of_stake::LazyVec\">LazyVec</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"borsh/ser/trait.BorshSerialize.html\" title=\"trait borsh::ser::BorshSerialize\">BorshSerialize</a> + <a class=\"trait\" href=\"borsh/de/trait.BorshDeserialize.html\" title=\"trait borsh::de::BorshDeserialize\">BorshDeserialize</a> + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate_changed_sub_keys\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_vp_env/collection_validation/lazy_vec.rs.html#82-84\">source</a><a href=\"#method.validate_changed_sub_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#tymethod.validate_changed_sub_keys\" class=\"fn\">validate_changed_sub_keys</a>(\n    keys: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;<a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyVec.html\" title=\"struct namada_proof_of_stake::LazyVec\">LazyVec</a>&lt;T&gt; as <a class=\"trait\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html\" title=\"trait namada_vp_env::collection_validation::LazyCollectionExt\">LazyCollectionExt</a>&gt;::<a class=\"associatedtype\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#associatedtype.SubKeyWithData\" title=\"type namada_vp_env::collection_validation::LazyCollectionExt::SubKeyWithData\">SubKeyWithData</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;<a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyVec.html\" title=\"struct namada_proof_of_stake::LazyVec\">LazyVec</a>&lt;T&gt; as <a class=\"trait\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html\" title=\"trait namada_vp_env::collection_validation::LazyCollectionExt\">LazyCollectionExt</a>&gt;::<a class=\"associatedtype\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#associatedtype.Action\" title=\"type namada_vp_env::collection_validation::LazyCollectionExt::Action\">Action</a>&gt;, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>The validation rules for a <a href=\"namada_proof_of_stake/struct.LazyVec.html\" title=\"struct namada_proof_of_stake::LazyVec\"><code>LazyVec</code></a> are:</p>\n<ul>\n<li>A difference in the vector’s length must correspond to the\ndifference in how many elements were pushed versus how many elements\nwere popped.</li>\n<li>An empty vector must be deleted from storage</li>\n<li>In addition, we check that indices of any changes are within an\nexpected range (i.e. the vectors indices should always be\nmonotonically increasing from zero)</li>\n</ul>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Action\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/namada_vp_env/collection_validation/lazy_vec.rs.html#50\">source</a><a href=\"#associatedtype.Action\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#associatedtype.Action\" class=\"associatedtype\">Action</a> = <a class=\"enum\" href=\"namada_vp_env/collection_validation/lazy_vec/enum.Action.html\" title=\"enum namada_vp_env::collection_validation::lazy_vec::Action\">Action</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Actions on the collection determined from changed storage keys by\n<code>Self::validate</code></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.SubKeyWithData\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/namada_vp_env/collection_validation/lazy_vec.rs.html#51\">source</a><a href=\"#associatedtype.SubKeyWithData\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#associatedtype.SubKeyWithData\" class=\"associatedtype\">SubKeyWithData</a> = <a class=\"enum\" href=\"namada_vp_env/collection_validation/lazy_vec/enum.SubKeyWithData.html\" title=\"enum namada_vp_env::collection_validation::lazy_vec::SubKeyWithData\">SubKeyWithData</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Possible sub-keys together with the data read from storage</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_sub_key_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_vp_env/collection_validation/lazy_vec.rs.html#53-59\">source</a><a href=\"#method.read_sub_key_data\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#tymethod.read_sub_key_data\" class=\"fn\">read_sub_key_data</a>&lt;ENV&gt;(\n    env: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;ENV</a>,\n    storage_key: &amp;<a class=\"struct\" href=\"namada_proof_of_stake/struct.Key.html\" title=\"struct namada_proof_of_stake::Key\">Key</a>,\n    sub_key: &lt;<a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyVec.html\" title=\"struct namada_proof_of_stake::LazyVec\">LazyVec</a>&lt;T&gt; as <a class=\"trait\" href=\"namada_proof_of_stake/trait.LazyCollection.html\" title=\"trait namada_proof_of_stake::LazyCollection\">LazyCollection</a>&gt;::<a class=\"associatedtype\" href=\"namada_proof_of_stake/trait.LazyCollection.html#associatedtype.SubKey\" title=\"type namada_proof_of_stake::LazyCollection::SubKey\">SubKey</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyVec.html\" title=\"struct namada_proof_of_stake::LazyVec\">LazyVec</a>&lt;T&gt; as <a class=\"trait\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html\" title=\"trait namada_vp_env::collection_validation::LazyCollectionExt\">LazyCollectionExt</a>&gt;::<a class=\"associatedtype\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#associatedtype.SubKeyWithData\" title=\"type namada_vp_env::collection_validation::LazyCollectionExt::SubKeyWithData\">SubKeyWithData</a>&gt;, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    ENV: for&lt;'a&gt; <a class=\"trait\" href=\"namada_vp_env/trait.VpEnv.html\" title=\"trait namada_vp_env::VpEnv\">VpEnv</a>&lt;'a&gt;,</div></h4></section></summary><div class='docblock'>Try to read and decode the data for each change storage key in prior and\nposterior state. If there is no value in neither prior or posterior\nstate (which is a possible state when transaction e.g. writes and then\ndeletes one storage key, but it is treated as a no-op as it doesn’t\naffect result of validation), returns <code>Ok(None)</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.accumulate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_vp_env/collection_validation/mod.rs.html#110-117\">source</a><a href=\"#method.accumulate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#method.accumulate\" class=\"fn\">accumulate</a>&lt;ENV&gt;(\n    &amp;self,\n    env: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;ENV</a>,\n    builder: &amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"namada_vp_env/collection_validation/struct.ValidationBuilder.html\" title=\"struct namada_vp_env::collection_validation::ValidationBuilder\">ValidationBuilder</a>&lt;Self::<a class=\"associatedtype\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#associatedtype.SubKeyWithData\" title=\"type namada_vp_env::collection_validation::LazyCollectionExt::SubKeyWithData\">SubKeyWithData</a>&gt;&gt;,\n    key_changed: &amp;<a class=\"struct\" href=\"namada_proof_of_stake/struct.Key.html\" title=\"struct namada_proof_of_stake::Key\">Key</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    ENV: for&lt;'a&gt; <a class=\"trait\" href=\"namada_vp_env/trait.VpEnv.html\" title=\"trait namada_vp_env::VpEnv\">VpEnv</a>&lt;'a&gt;,</div></h4></section></summary><div class='docblock'>Accumulate storage changes inside a <code>ValidationBuilder</code>. This is\ntypically done by the validity predicate while looping through the\nchanged keys. If the resulting <code>builder</code> is not <code>None</code>, one must\ncall <code>fn build()</code> on it to get the validation result.\nThis function will return <code>Ok(true)</code> if the storage key is a valid\nsub-key of this collection, <code>Ok(false)</code> if the storage key doesn’t match\nthe prefix of this collection, or error if the prefix matches this\ncollection, but the key itself is not recognized.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_vp_env/collection_validation/mod.rs.html#134-136\">source</a><a href=\"#method.validate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#method.validate\" class=\"fn\">validate</a>(\n    builder: <a class=\"struct\" href=\"namada_vp_env/collection_validation/struct.ValidationBuilder.html\" title=\"struct namada_vp_env::collection_validation::ValidationBuilder\">ValidationBuilder</a>&lt;Self::<a class=\"associatedtype\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#associatedtype.SubKeyWithData\" title=\"type namada_vp_env::collection_validation::LazyCollectionExt::SubKeyWithData\">SubKeyWithData</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Self::<a class=\"associatedtype\" href=\"namada_vp_env/collection_validation/trait.LazyCollectionExt.html#associatedtype.Action\" title=\"type namada_vp_env::collection_validation::LazyCollectionExt::Action\">Action</a>&gt;, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Execute validation on the validation builder, to be called when\n<code>accumulate</code> instantiates the builder to <code>Some(_)</code>, after all the\nchanges storage keys have been processed.</div></details></div></details>","LazyCollectionExt","namada_proof_of_stake::types::Slashes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LazyVec%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_vec.rs.html#149\">source</a><a href=\"#impl-LazyVec%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyVec.html\" title=\"struct namada_proof_of_stake::LazyVec\">LazyVec</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_vec.rs.html#152-154\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_proof_of_stake/struct.LazyVec.html#tymethod.len\" class=\"fn\">len</a>&lt;S&gt;(&amp;self, storage: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageRead.html\" title=\"trait namada_proof_of_stake::StorageRead\">StorageRead</a>,</div></h4></section></summary><div class=\"docblock\"><p>Reads the number of elements in the vector.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_vec.rs.html#161-163\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_proof_of_stake/struct.LazyVec.html#tymethod.is_empty\" class=\"fn\">is_empty</a>&lt;S&gt;(&amp;self, storage: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageRead.html\" title=\"trait namada_proof_of_stake::StorageRead\">StorageRead</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the vector contains no elements.</p>\n</div></details></div></details>",0,"namada_proof_of_stake::types::Slashes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LazyVec%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_vec.rs.html#185-187\">source</a><a href=\"#impl-LazyVec%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"namada_proof_of_stake/struct.LazyVec.html\" title=\"struct namada_proof_of_stake::LazyVec\">LazyVec</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"borsh/ser/trait.BorshSerialize.html\" title=\"trait borsh::ser::BorshSerialize\">BorshSerialize</a> + <a class=\"trait\" href=\"borsh/de/trait.BorshDeserialize.html\" title=\"trait borsh::de::BorshDeserialize\">BorshDeserialize</a> + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_vec.rs.html#190-192\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_proof_of_stake/struct.LazyVec.html#tymethod.push\" class=\"fn\">push</a>&lt;S&gt;(&amp;self, storage: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut S</a>, val: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageWrite.html\" title=\"trait namada_proof_of_stake::StorageWrite\">StorageWrite</a> + <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageRead.html\" title=\"trait namada_proof_of_stake::StorageRead\">StorageRead</a>,</div></h4></section></summary><div class=\"docblock\"><p>Appends an element to the back of a collection.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_vec.rs.html#204-206\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_proof_of_stake/struct.LazyVec.html#tymethod.pop\" class=\"fn\">pop</a>&lt;S&gt;(&amp;self, storage: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut S</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageWrite.html\" title=\"trait namada_proof_of_stake::StorageWrite\">StorageWrite</a> + <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageRead.html\" title=\"trait namada_proof_of_stake::StorageRead\">StorageRead</a>,</div></h4></section></summary><div class=\"docblock\"><p>Removes the last element from a vector and returns it, or <code>Ok(None)</code> if\nit is empty.</p>\n<p>Note that an empty vector is completely removed from storage.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_vec.rs.html#229-231\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_proof_of_stake/struct.LazyVec.html#tymethod.update\" class=\"fn\">update</a>&lt;S&gt;(\n    &amp;self,\n    storage: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut S</a>,\n    index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>,\n    val: T,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageWrite.html\" title=\"trait namada_proof_of_stake::StorageWrite\">StorageWrite</a> + <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageRead.html\" title=\"trait namada_proof_of_stake::StorageRead\">StorageRead</a>,</div></h4></section></summary><div class=\"docblock\"><p>Update an element at the given index.</p>\n<p>The index must be smaller than the length of the vector, otherwise this\nwill fail with <code>UpdateError::InvalidIndex</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_vec.rs.html#243-245\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_proof_of_stake/struct.LazyVec.html#tymethod.get\" class=\"fn\">get</a>&lt;S&gt;(&amp;self, storage: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a>, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageRead.html\" title=\"trait namada_proof_of_stake::StorageRead\">StorageRead</a>,</div></h4></section></summary><div class=\"docblock\"><p>Read an element at the index or <code>Ok(None)</code> if out of bounds.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.front\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_vec.rs.html#251-253\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_proof_of_stake/struct.LazyVec.html#tymethod.front\" class=\"fn\">front</a>&lt;S&gt;(&amp;self, storage: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageRead.html\" title=\"trait namada_proof_of_stake::StorageRead\">StorageRead</a>,</div></h4></section></summary><div class=\"docblock\"><p>Read the first element</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.back\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_vec.rs.html#259-261\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_proof_of_stake/struct.LazyVec.html#tymethod.back\" class=\"fn\">back</a>&lt;S&gt;(&amp;self, storage: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageRead.html\" title=\"trait namada_proof_of_stake::StorageRead\">StorageRead</a>,</div></h4></section></summary><div class=\"docblock\"><p>Read the last element</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"src/namada_storage/collections/lazy_vec.rs.html#274-277\">source</a><h4 class=\"code-header\">pub fn <a href=\"namada_proof_of_stake/struct.LazyVec.html#tymethod.iter\" class=\"fn\">iter</a>&lt;'iter&gt;(\n    &amp;self,\n    storage: &amp;'iter impl <a class=\"trait\" href=\"namada_proof_of_stake/trait.StorageRead.html\" title=\"trait namada_proof_of_stake::StorageRead\">StorageRead</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;&gt; + 'iter, <a class=\"enum\" href=\"namada_proof_of_stake/enum.Error.html\" title=\"enum namada_proof_of_stake::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>An iterator visiting all elements. The iterator element type is\n<code>Result&lt;T&gt;</code>, because iterator’s call to <code>next</code> may fail with e.g. out of\ngas or data decoding error.</p>\n<p>Note that this function shouldn’t be used in transactions and VPs code\non unbounded sets to avoid gas usage increasing with the length of the\nset.</p>\n</div></details></div></details>",0,"namada_proof_of_stake::types::Slashes"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[36010]}