(function() {var type_impls = {
"bitcoin":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin/consensus/encode.rs.html#808\">source</a><a href=\"#impl-Decodable-for-(T0,+T1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0: <a class=\"trait\" href=\"bitcoin/consensus/encode/trait.Decodable.html\" title=\"trait bitcoin::consensus::encode::Decodable\">Decodable</a>, T1: <a class=\"trait\" href=\"bitcoin/consensus/encode/trait.Decodable.html\" title=\"trait bitcoin::consensus::encode::Decodable\">Decodable</a>&gt; <a class=\"trait\" href=\"bitcoin/consensus/encode/trait.Decodable.html\" title=\"trait bitcoin::consensus::encode::Decodable\">Decodable</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.consensus_decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin/consensus/encode.rs.html#808\">source</a><a href=\"#method.consensus_decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bitcoin/consensus/encode/trait.Decodable.html#method.consensus_decode\" class=\"fn\">consensus_decode</a>&lt;R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt;(r: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut R</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"bitcoin/consensus/encode/enum.Error.html\" title=\"enum bitcoin::consensus::encode::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Decode an object with a well-defined format. <a href=\"bitcoin/consensus/encode/trait.Decodable.html#method.consensus_decode\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.consensus_decode_from_finite_reader\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin/consensus/encode.rs.html#304-311\">source</a><a href=\"#method.consensus_decode_from_finite_reader\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bitcoin/consensus/encode/trait.Decodable.html#method.consensus_decode_from_finite_reader\" class=\"fn\">consensus_decode_from_finite_reader</a>&lt;R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt;(\n    reader: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut R</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"bitcoin/consensus/encode/enum.Error.html\" title=\"enum bitcoin::consensus::encode::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Decode <code>Self</code> from a size-limited reader. <a href=\"bitcoin/consensus/encode/trait.Decodable.html#method.consensus_decode_from_finite_reader\">Read more</a></div></details></div></details>","Decodable","bitcoin::bip32::KeySource"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin/consensus/encode.rs.html#808\">source</a><a href=\"#impl-Encodable-for-(T0,+T1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0: <a class=\"trait\" href=\"bitcoin/consensus/encode/trait.Encodable.html\" title=\"trait bitcoin::consensus::encode::Encodable\">Encodable</a>, T1: <a class=\"trait\" href=\"bitcoin/consensus/encode/trait.Encodable.html\" title=\"trait bitcoin::consensus::encode::Encodable\">Encodable</a>&gt; <a class=\"trait\" href=\"bitcoin/consensus/encode/trait.Encodable.html\" title=\"trait bitcoin::consensus::encode::Encodable\">Encodable</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.consensus_encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin/consensus/encode.rs.html#808\">source</a><a href=\"#method.consensus_encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bitcoin/consensus/encode/trait.Encodable.html#tymethod.consensus_encode\" class=\"fn\">consensus_encode</a>&lt;W: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt;(&amp;self, w: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut W</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Encodes an object with a well-defined format. <a href=\"bitcoin/consensus/encode/trait.Encodable.html#tymethod.consensus_encode\">Read more</a></div></details></div></details>","Encodable","bitcoin::bip32::KeySource"]],
"elliptic_curve":[]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()