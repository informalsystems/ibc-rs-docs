(function() {
    var type_impls = Object.fromEntries([["borsh",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorshDeserialize-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/borsh/de/mod.rs.html#216\">source</a><a href=\"#impl-BorshDeserialize-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"borsh/de/trait.BorshDeserialize.html\" title=\"trait borsh::de::BorshDeserialize\">BorshDeserialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.deserialize_reader\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/borsh/de/mod.rs.html#216\">source</a><a href=\"#method.deserialize_reader\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"borsh/de/trait.BorshDeserialize.html#tymethod.deserialize_reader\" class=\"fn\">deserialize_reader</a>&lt;R: <a class=\"trait\" href=\"borsh/io/trait.Read.html\" title=\"trait borsh::io::Read\">Read</a>&gt;(reader: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut R</a>) -&gt; <a class=\"type\" href=\"borsh/io/type.Result.html\" title=\"type borsh::io::Result\">Result</a>&lt;Self&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/borsh/de/mod.rs.html#39-41\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"borsh/de/trait.BorshDeserialize.html#method.deserialize\" class=\"fn\">deserialize</a>(buf: &amp;mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"type\" href=\"borsh/io/type.Result.html\" title=\"type borsh::io::Result\">Result</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Deserializes this instance from a given slice of bytes.\nUpdates the buffer to point at the remaining bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/borsh/de/mod.rs.html#46-53\">source</a><a href=\"#method.try_from_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"borsh/de/trait.BorshDeserialize.html#method.try_from_slice\" class=\"fn\">try_from_slice</a>(v: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"type\" href=\"borsh/io/type.Result.html\" title=\"type borsh::io::Result\">Result</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Deserialize this instance from a slice of bytes.</div></details><section id=\"method.try_from_reader\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/borsh/de/mod.rs.html#55-62\">source</a><a href=\"#method.try_from_reader\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"borsh/de/trait.BorshDeserialize.html#method.try_from_reader\" class=\"fn\">try_from_reader</a>&lt;R: <a class=\"trait\" href=\"borsh/io/trait.Read.html\" title=\"trait borsh::io::Read\">Read</a>&gt;(reader: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut R</a>) -&gt; <a class=\"type\" href=\"borsh/io/type.Result.html\" title=\"type borsh::io::Result\">Result</a>&lt;Self&gt;</h4></section></div></details>","BorshDeserialize","borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorshSchema-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/borsh/schema.rs.html#436\">source</a><a href=\"#impl-BorshSchema-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"borsh/schema/trait.BorshSchema.html\" title=\"trait borsh::schema::BorshSchema\">BorshSchema</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_definitions_recursively\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/borsh/schema.rs.html#436\">source</a><a href=\"#method.add_definitions_recursively\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"borsh/schema/trait.BorshSchema.html#tymethod.add_definitions_recursively\" class=\"fn\">add_definitions_recursively</a>(\n    definitions: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/collections/btree/map/struct.BTreeMap.html\" title=\"struct alloc::collections::btree::map::BTreeMap\">BTreeMap</a>&lt;<a class=\"type\" href=\"borsh/schema/type.Declaration.html\" title=\"type borsh::schema::Declaration\">Declaration</a>, <a class=\"enum\" href=\"borsh/schema/enum.Definition.html\" title=\"enum borsh::schema::Definition\">Definition</a>&gt;,\n)</h4></section></summary><div class='docblock'>Recursively, using DFS, add type definitions required for this type.\nType definition partially explains how to serialize/deserialize a type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.declaration\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/borsh/schema.rs.html#436\">source</a><a href=\"#method.declaration\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"borsh/schema/trait.BorshSchema.html#tymethod.declaration\" class=\"fn\">declaration</a>() -&gt; <a class=\"type\" href=\"borsh/schema/type.Declaration.html\" title=\"type borsh::schema::Declaration\">Declaration</a></h4></section></summary><div class='docblock'>Get the name of the type without brackets.</div></details></div></details>","BorshSchema","borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorshSerialize-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/borsh/ser/mod.rs.html#92\">source</a><a href=\"#impl-BorshSerialize-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"borsh/ser/trait.BorshSerialize.html\" title=\"trait borsh::ser::BorshSerialize\">BorshSerialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/borsh/ser/mod.rs.html#92\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"borsh/ser/trait.BorshSerialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;W: <a class=\"trait\" href=\"borsh/io/trait.Write.html\" title=\"trait borsh::io::Write\">Write</a>&gt;(&amp;self, writer: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut W</a>) -&gt; <a class=\"type\" href=\"borsh/io/type.Result.html\" title=\"type borsh::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></div></details>","BorshSerialize","borsh::schema::DiscriminantValue"]]],["namada_core",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#179\">source</a></span><a href=\"#impl-Binary-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/tendermint/consensus/state/fmt/trait.Binary.html\" title=\"trait namada_core::tendermint::consensus::state::fmt::Binary\">Binary</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#179\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/tendermint/consensus/state/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"namada_core/tendermint/consensus/state/fmt/struct.Formatter.html\" title=\"struct namada_core::tendermint::consensus::state::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Result.html\" title=\"enum namada_core::ibc::primitives::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"namada_core/tendermint/consensus/state/fmt/struct.Error.html\" title=\"struct namada_core::tendermint::consensus::state::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"namada_core/tendermint/consensus/state/fmt/trait.Binary.html#tymethod.fmt\">Read more</a></div></details></div></details>","Binary","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorshDeserialize-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/borsh/de/mod.rs.html#216\">source</a><a href=\"#impl-BorshDeserialize-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/borsh/trait.BorshDeserialize.html\" title=\"trait namada_core::borsh::BorshDeserialize\">BorshDeserialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.deserialize_reader\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/borsh/de/mod.rs.html#216\">source</a><a href=\"#method.deserialize_reader\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/borsh/trait.BorshDeserialize.html#tymethod.deserialize_reader\" class=\"fn\">deserialize_reader</a>&lt;R&gt;(reader: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut R</a>) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Result.html\" title=\"enum namada_core::ibc::primitives::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, <a class=\"struct\" href=\"namada_core/borsh/io/struct.Error.html\" title=\"struct namada_core::borsh::io::Error\">Error</a>&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"namada_core/borsh/io/trait.Read.html\" title=\"trait namada_core::borsh::io::Read\">Read</a>,</div></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/borsh/de/mod.rs.html#39\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/borsh/trait.BorshDeserialize.html#method.deserialize\" class=\"fn\">deserialize</a>(buf: &amp;mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Result.html\" title=\"enum namada_core::ibc::primitives::prelude::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"namada_core/borsh/io/struct.Error.html\" title=\"struct namada_core::borsh::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Deserializes this instance from a given slice of bytes.\nUpdates the buffer to point at the remaining bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/borsh/de/mod.rs.html#46\">source</a><a href=\"#method.try_from_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/borsh/trait.BorshDeserialize.html#method.try_from_slice\" class=\"fn\">try_from_slice</a>(v: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Result.html\" title=\"enum namada_core::ibc::primitives::prelude::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"namada_core/borsh/io/struct.Error.html\" title=\"struct namada_core::borsh::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Deserialize this instance from a slice of bytes.</div></details><section id=\"method.try_from_reader\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/borsh/de/mod.rs.html#55\">source</a><a href=\"#method.try_from_reader\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/borsh/trait.BorshDeserialize.html#method.try_from_reader\" class=\"fn\">try_from_reader</a>&lt;R&gt;(reader: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut R</a>) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Result.html\" title=\"enum namada_core::ibc::primitives::prelude::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"namada_core/borsh/io/struct.Error.html\" title=\"struct namada_core::borsh::io::Error\">Error</a>&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"namada_core/borsh/io/trait.Read.html\" title=\"trait namada_core::borsh::io::Read\">Read</a>,</div></h4></section></div></details>","BorshDeserialize","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorshSchema-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/borsh/schema.rs.html#436\">source</a><a href=\"#impl-BorshSchema-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/borsh/trait.BorshSchema.html\" title=\"trait namada_core::borsh::BorshSchema\">BorshSchema</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_definitions_recursively\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/borsh/schema.rs.html#436\">source</a><a href=\"#method.add_definitions_recursively\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/borsh/trait.BorshSchema.html#tymethod.add_definitions_recursively\" class=\"fn\">add_definitions_recursively</a>(definitions: &amp;mut <a class=\"struct\" href=\"namada_core/ibc/primitives/prelude/struct.BTreeMap.html\" title=\"struct namada_core::ibc::primitives::prelude::BTreeMap\">BTreeMap</a>&lt;<a class=\"struct\" href=\"namada_core/ibc/primitives/prelude/struct.String.html\" title=\"struct namada_core::ibc::primitives::prelude::String\">String</a>, <a class=\"enum\" href=\"namada_core/borsh/schema/enum.Definition.html\" title=\"enum namada_core::borsh::schema::Definition\">Definition</a>&gt;)</h4></section></summary><div class='docblock'>Recursively, using DFS, add type definitions required for this type.\nType definition partially explains how to serialize/deserialize a type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.declaration\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/borsh/schema.rs.html#436\">source</a><a href=\"#method.declaration\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/borsh/trait.BorshSchema.html#tymethod.declaration\" class=\"fn\">declaration</a>() -&gt; <a class=\"struct\" href=\"namada_core/ibc/primitives/prelude/struct.String.html\" title=\"struct namada_core::ibc::primitives::prelude::String\">String</a></h4></section></summary><div class='docblock'>Get the name of the type without brackets.</div></details></div></details>","BorshSchema","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorshSerialize-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/borsh/ser/mod.rs.html#92\">source</a><a href=\"#impl-BorshSerialize-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/borsh/trait.BorshSerialize.html\" title=\"trait namada_core::borsh::BorshSerialize\">BorshSerialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/borsh/ser/mod.rs.html#92\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/borsh/trait.BorshSerialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;W&gt;(&amp;self, writer: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut W</a>) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Result.html\" title=\"enum namada_core::ibc::primitives::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"namada_core/borsh/io/struct.Error.html\" title=\"struct namada_core::borsh::io::Error\">Error</a>&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"namada_core/borsh/io/trait.Write.html\" title=\"trait namada_core::borsh::io::Write\">Write</a>,</div></h4></section></div></details>","BorshSerialize","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedAdd%3C%26i64%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#55\">source</a><a href=\"#impl-CheckedAdd%3C%26i64%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/arith/trait.CheckedAdd.html\" title=\"trait namada_core::arith::CheckedAdd\">CheckedAdd</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#55\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_core/arith/trait.CheckedAdd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#55\">source</a><a href=\"#method.checked_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/arith/trait.CheckedAdd.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Option.html\" title=\"enum namada_core::ibc::primitives::prelude::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Adds two numbers, checking for overflow. If overflow happens, <code>None</code> is\nreturned.</div></details></div></details>","CheckedAdd<&i64>","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedAdd-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#55\">source</a><a href=\"#impl-CheckedAdd-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/arith/trait.CheckedAdd.html\" title=\"trait namada_core::arith::CheckedAdd\">CheckedAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#55\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_core/arith/trait.CheckedAdd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#55\">source</a><a href=\"#method.checked_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/arith/trait.CheckedAdd.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Option.html\" title=\"enum namada_core::ibc::primitives::prelude::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Adds two numbers, checking for overflow. If overflow happens, <code>None</code> is\nreturned.</div></details></div></details>","CheckedAdd","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedDiv%3C%26i64%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#122\">source</a><a href=\"#impl-CheckedDiv%3C%26i64%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/arith/trait.CheckedDiv.html\" title=\"trait namada_core::arith::CheckedDiv\">CheckedDiv</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#122\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_core/arith/trait.CheckedDiv.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#122\">source</a><a href=\"#method.checked_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/arith/trait.CheckedDiv.html#tymethod.checked_div\" class=\"fn\">checked_div</a>(self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Option.html\" title=\"enum namada_core::ibc::primitives::prelude::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Divides two numbers, checking for overflow and division by\nzero. If any of that happens, <code>None</code> is returned.</div></details></div></details>","CheckedDiv<&i64>","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedDiv-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#122\">source</a><a href=\"#impl-CheckedDiv-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/arith/trait.CheckedDiv.html\" title=\"trait namada_core::arith::CheckedDiv\">CheckedDiv</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#122\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_core/arith/trait.CheckedDiv.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#122\">source</a><a href=\"#method.checked_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/arith/trait.CheckedDiv.html#tymethod.checked_div\" class=\"fn\">checked_div</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Option.html\" title=\"enum namada_core::ibc::primitives::prelude::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Divides two numbers, checking for overflow and division by\nzero. If any of that happens, <code>None</code> is returned.</div></details></div></details>","CheckedDiv","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedMul%3C%26i64%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#99\">source</a><a href=\"#impl-CheckedMul%3C%26i64%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/arith/trait.CheckedMul.html\" title=\"trait namada_core::arith::CheckedMul\">CheckedMul</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#99\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_core/arith/trait.CheckedMul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#99\">source</a><a href=\"#method.checked_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/arith/trait.CheckedMul.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Option.html\" title=\"enum namada_core::ibc::primitives::prelude::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Multiplies two numbers, checking for overflow. If overflow happens,\n<code>None</code> is returned.</div></details></div></details>","CheckedMul<&i64>","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedMul-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#99\">source</a><a href=\"#impl-CheckedMul-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/arith/trait.CheckedMul.html\" title=\"trait namada_core::arith::CheckedMul\">CheckedMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#99\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_core/arith/trait.CheckedMul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#99\">source</a><a href=\"#method.checked_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/arith/trait.CheckedMul.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Option.html\" title=\"enum namada_core::ibc::primitives::prelude::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Multiplies two numbers, checking for overflow. If overflow happens,\n<code>None</code> is returned.</div></details></div></details>","CheckedMul","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedNeg-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#218\">source</a><a href=\"#impl-CheckedNeg-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/arith/trait.CheckedNeg.html\" title=\"trait namada_core::arith::CheckedNeg\">CheckedNeg</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#218\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_core/arith/trait.CheckedNeg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#218\">source</a><a href=\"#method.checked_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/arith/trait.CheckedNeg.html#tymethod.checked_neg\" class=\"fn\">checked_neg</a>(self) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Option.html\" title=\"enum namada_core::ibc::primitives::prelude::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Negates a number, returning <code>None</code> for results that can’t be represented, like signed <code>MIN</code>\nvalues that can’t be positive, or non-zero unsigned values that can’t be negative. <a href=\"namada_core/arith/trait.CheckedNeg.html#tymethod.checked_neg\">Read more</a></div></details></div></details>","CheckedNeg","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedRem%3C%26i64%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#162\">source</a><a href=\"#impl-CheckedRem%3C%26i64%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/arith/trait.CheckedRem.html\" title=\"trait namada_core::arith::CheckedRem\">CheckedRem</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#162\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_core/arith/trait.CheckedRem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#162\">source</a><a href=\"#method.checked_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/arith/trait.CheckedRem.html#tymethod.checked_rem\" class=\"fn\">checked_rem</a>(self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Option.html\" title=\"enum namada_core::ibc::primitives::prelude::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Finds the remainder of dividing two numbers, checking for overflow and\ndivision by zero. If any of that happens, <code>None</code> is returned. <a href=\"namada_core/arith/trait.CheckedRem.html#tymethod.checked_rem\">Read more</a></div></details></div></details>","CheckedRem<&i64>","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedRem-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#162\">source</a><a href=\"#impl-CheckedRem-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/arith/trait.CheckedRem.html\" title=\"trait namada_core::arith::CheckedRem\">CheckedRem</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#162\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_core/arith/trait.CheckedRem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#162\">source</a><a href=\"#method.checked_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/arith/trait.CheckedRem.html#tymethod.checked_rem\" class=\"fn\">checked_rem</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Option.html\" title=\"enum namada_core::ibc::primitives::prelude::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Finds the remainder of dividing two numbers, checking for overflow and\ndivision by zero. If any of that happens, <code>None</code> is returned. <a href=\"namada_core/arith/trait.CheckedRem.html#tymethod.checked_rem\">Read more</a></div></details></div></details>","CheckedRem","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedSub%3C%26i64%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#77\">source</a><a href=\"#impl-CheckedSub%3C%26i64%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/arith/trait.CheckedSub.html\" title=\"trait namada_core::arith::CheckedSub\">CheckedSub</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#77\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_core/arith/trait.CheckedSub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#77\">source</a><a href=\"#method.checked_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/arith/trait.CheckedSub.html#tymethod.checked_sub\" class=\"fn\">checked_sub</a>(self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Option.html\" title=\"enum namada_core::ibc::primitives::prelude::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Subtracts two numbers, checking for underflow. If underflow happens,\n<code>None</code> is returned.</div></details></div></details>","CheckedSub<&i64>","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedSub-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#77\">source</a><a href=\"#impl-CheckedSub-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/arith/trait.CheckedSub.html\" title=\"trait namada_core::arith::CheckedSub\">CheckedSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#77\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_core/arith/trait.CheckedSub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#77\">source</a><a href=\"#method.checked_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/arith/trait.CheckedSub.html#tymethod.checked_sub\" class=\"fn\">checked_sub</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Option.html\" title=\"enum namada_core::ibc::primitives::prelude::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Subtracts two numbers, checking for underflow. If underflow happens,\n<code>None</code> is returned.</div></details></div></details>","CheckedSub","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#333-338\">source</a></span><a href=\"#impl-Clone-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/trait.Clone.html\" title=\"trait namada_core::ibc::primitives::prelude::Clone\">Clone</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#333-338\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"namada_core/ibc/primitives/prelude/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"namada_core/ibc/primitives/prelude/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#198-201\">source</a></span><a href=\"#impl-Debug-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/tendermint/consensus/state/fmt/trait.Debug.html\" title=\"trait namada_core::tendermint::consensus::state::fmt::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#198-201\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/tendermint/consensus/state/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"namada_core/tendermint/consensus/state/fmt/struct.Formatter.html\" title=\"struct namada_core::tendermint::consensus::state::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Result.html\" title=\"enum namada_core::ibc::primitives::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"namada_core/tendermint/consensus/state/fmt/struct.Error.html\" title=\"struct namada_core::tendermint::consensus::state::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"namada_core/tendermint/consensus/state/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/default.rs.html#179\">source</a></span><a href=\"#impl-Default-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/trait.Default.html\" title=\"trait namada_core::ibc::primitives::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/default.rs.html#179\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class=\"docblock\"><p>Returns the default value of <code>0</code></p>\n</div></details></div></details>","Default","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#529-541\">source</a></span><a href=\"#impl-Display-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/tendermint/consensus/state/fmt/trait.Display.html\" title=\"trait namada_core::tendermint::consensus::state::fmt::Display\">Display</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#529-541\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/tendermint/consensus/state/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"namada_core/tendermint/consensus/state/fmt/struct.Formatter.html\" title=\"struct namada_core::tendermint::consensus::state::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Result.html\" title=\"enum namada_core::ibc::primitives::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"namada_core/tendermint/consensus/state/fmt/struct.Error.html\" title=\"struct namada_core::tendermint::consensus::state::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"namada_core/tendermint/consensus/state/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBlockHeight%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/masp_primitives/consensus.rs.html#93\">source</a><a href=\"#impl-From%3CBlockHeight%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/trait.From.html\" title=\"trait namada_core::ibc::primitives::prelude::From\">From</a>&lt;<a class=\"struct\" href=\"masp_primitives/consensus/struct.BlockHeight.html\" title=\"struct masp_primitives::consensus::BlockHeight\">BlockHeight</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/masp_primitives/consensus.rs.html#94\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"masp_primitives/consensus/struct.BlockHeight.html\" title=\"struct masp_primitives::consensus::BlockHeight\">BlockHeight</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BlockHeight>","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CHeight%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/tendermint/block/height.rs.html#28\">source</a><a href=\"#impl-From%3CHeight%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/trait.From.html\" title=\"trait namada_core::ibc::primitives::prelude::From\">From</a>&lt;<a class=\"struct\" href=\"namada_core/tendermint/block/struct.Height.html\" title=\"struct namada_core::tendermint::block::Height\">Height</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tendermint/block/height.rs.html#29\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"namada_core/tendermint/block/struct.Height.html\" title=\"struct namada_core::tendermint::block::Height\">Height</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Height>","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CI16%3CO%3E%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerocopy/byteorder.rs.html#508-521\">source</a><a href=\"#impl-From%3CI16%3CO%3E%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/trait.From.html\" title=\"trait namada_core::ibc::primitives::prelude::From\">From</a>&lt;<a class=\"struct\" href=\"zerocopy/byteorder/struct.I16.html\" title=\"struct zerocopy::byteorder::I16\">I16</a>&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a><div class=\"where\">where\n    O: <a class=\"trait\" href=\"byteorder/trait.ByteOrder.html\" title=\"trait byteorder::ByteOrder\">ByteOrder</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/byteorder.rs.html#508-521\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"zerocopy/byteorder/struct.I16.html\" title=\"struct zerocopy::byteorder::I16\">I16</a>&lt;O&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<I16<O>>","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CI32%3CO%3E%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerocopy/byteorder.rs.html#522-535\">source</a><a href=\"#impl-From%3CI32%3CO%3E%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/trait.From.html\" title=\"trait namada_core::ibc::primitives::prelude::From\">From</a>&lt;<a class=\"struct\" href=\"zerocopy/byteorder/struct.I32.html\" title=\"struct zerocopy::byteorder::I32\">I32</a>&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a><div class=\"where\">where\n    O: <a class=\"trait\" href=\"byteorder/trait.ByteOrder.html\" title=\"trait byteorder::ByteOrder\">ByteOrder</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/byteorder.rs.html#522-535\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"zerocopy/byteorder/struct.I32.html\" title=\"struct zerocopy::byteorder::I32\">I32</a>&lt;O&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<I32<O>>","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CI64%3CO%3E%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerocopy/byteorder.rs.html#536-549\">source</a><a href=\"#impl-From%3CI64%3CO%3E%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/trait.From.html\" title=\"trait namada_core::ibc::primitives::prelude::From\">From</a>&lt;<a class=\"struct\" href=\"zerocopy/byteorder/struct.I64.html\" title=\"struct zerocopy::byteorder::I64\">I64</a>&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a><div class=\"where\">where\n    O: <a class=\"trait\" href=\"byteorder/trait.ByteOrder.html\" title=\"trait byteorder::ByteOrder\">ByteOrder</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/byteorder.rs.html#536-549\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"zerocopy/byteorder/struct.I64.html\" title=\"struct zerocopy::byteorder::I64\">I64</a>&lt;O&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<I64<O>>","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPower%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/tendermint/vote/power.rs.html#27\">source</a><a href=\"#impl-From%3CPower%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/trait.From.html\" title=\"trait namada_core::ibc::primitives::prelude::From\">From</a>&lt;<a class=\"struct\" href=\"namada_core/tendermint/vote/struct.Power.html\" title=\"struct namada_core::tendermint::vote::Power\">Power</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tendermint/vote/power.rs.html#28\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"namada_core/tendermint/vote/struct.Power.html\" title=\"struct namada_core::tendermint::vote::Power\">Power</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Power>","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CProposerPriority%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/tendermint/validator.rs.html#239\">source</a><a href=\"#impl-From%3CProposerPriority%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/trait.From.html\" title=\"trait namada_core::ibc::primitives::prelude::From\">From</a>&lt;<a class=\"struct\" href=\"namada_core/tendermint/validator/struct.ProposerPriority.html\" title=\"struct namada_core::tendermint::validator::ProposerPriority\">ProposerPriority</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tendermint/validator.rs.html#240\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(priority: <a class=\"struct\" href=\"namada_core/tendermint/validator/struct.ProposerPriority.html\" title=\"struct namada_core::tendermint::validator::ProposerPriority\">ProposerPriority</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ProposerPriority>","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRangedI64%3CMIN,+MAX%3E%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#impl-From%3CRangedI64%3CMIN,+MAX%3E%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MIN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, const MAX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/trait.From.html\" title=\"trait namada_core::ibc::primitives::prelude::From\">From</a>&lt;<a class=\"struct\" href=\"deranged/struct.RangedI64.html\" title=\"struct deranged::RangedI64\">RangedI64</a>&lt;MIN, MAX&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"deranged/struct.RangedI64.html\" title=\"struct deranged::RangedI64\">RangedI64</a>&lt;MIN, MAX&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<RangedI64<MIN, MAX>>","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cbool%3E-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#94\">source</a></span><a href=\"#impl-From%3Cbool%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/trait.From.html\" title=\"trait namada_core::ibc::primitives::prelude::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#94\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> to <a href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a> losslessly.\nThe resulting value is <code>0</code> for <code>false</code> and <code>1</code> for <code>true</code> values.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(i64::from(<span class=\"bool-val\">true</span>), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(i64::from(<span class=\"bool-val\">false</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details></div></details>","From<bool>","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci16%3E-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#118\">source</a></span><a href=\"#impl-From%3Ci16%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/trait.From.html\" title=\"trait namada_core::ibc::primitives::prelude::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#118\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class=\"docblock\"><p>Converts <a href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\" title=\"primitive i16\"><code>i16</code></a> to <a href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a> losslessly.</p>\n</div></details></div></details>","From<i16>","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci32%3E-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#120\">source</a></span><a href=\"#impl-From%3Ci32%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/trait.From.html\" title=\"trait namada_core::ibc::primitives::prelude::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#120\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class=\"docblock\"><p>Converts <a href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\" title=\"primitive i32\"><code>i32</code></a> to <a href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a> losslessly.</p>\n</div></details></div></details>","From<i32>","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci8%3E-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#114\">source</a></span><a href=\"#impl-From%3Ci8%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/trait.From.html\" title=\"trait namada_core::ibc::primitives::prelude::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#114\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class=\"docblock\"><p>Converts <a href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\" title=\"primitive i8\"><code>i8</code></a> to <a href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a> losslessly.</p>\n</div></details></div></details>","From<i8>","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu16%3E-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#130\">source</a></span><a href=\"#impl-From%3Cu16%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/trait.From.html\" title=\"trait namada_core::ibc::primitives::prelude::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#130\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class=\"docblock\"><p>Converts <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\" title=\"primitive u16\"><code>u16</code></a> to <a href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a> losslessly.</p>\n</div></details></div></details>","From<u16>","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu32%3E-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#132\">source</a></span><a href=\"#impl-From%3Cu32%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/trait.From.html\" title=\"trait namada_core::ibc::primitives::prelude::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#132\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class=\"docblock\"><p>Converts <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a> to <a href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a> losslessly.</p>\n</div></details></div></details>","From<u32>","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu8%3E-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#127\">source</a></span><a href=\"#impl-From%3Cu8%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/trait.From.html\" title=\"trait namada_core::ibc::primitives::prelude::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#127\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class=\"docblock\"><p>Converts <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a> to <a href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a> losslessly.</p>\n</div></details></div></details>","From<u8>","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#1391\">source</a></span><a href=\"#impl-FromStr-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/str/trait.FromStr.html\" title=\"trait namada_core::ibc::primitives::prelude::str::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#1391\">source</a><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_core/ibc/primitives/prelude/str/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#1391\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/str/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Result.html\" title=\"enum namada_core::ibc::primitives::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"namada_core/ibc/primitives/prelude/str/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-KeySeg-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/namada_core/storage.rs.html#916\">source</a><a href=\"#impl-KeySeg-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/storage/trait.KeySeg.html\" title=\"trait namada_core::storage::KeySeg\">KeySeg</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_core/storage.rs.html#916\">source</a><a href=\"#method.parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/storage/trait.KeySeg.html#tymethod.parse\" class=\"fn\">parse</a>(string: <a class=\"struct\" href=\"namada_core/ibc/primitives/prelude/struct.String.html\" title=\"struct namada_core::ibc::primitives::prelude::String\">String</a>) -&gt; <a class=\"type\" href=\"namada_core/storage/type.Result.html\" title=\"type namada_core::storage::Result\">Result</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Reverse of <code>into_string</code>. Convert key segment to <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.raw\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_core/storage.rs.html#916\">source</a><a href=\"#method.raw\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/storage/trait.KeySeg.html#tymethod.raw\" class=\"fn\">raw</a>(&amp;self) -&gt; <a class=\"struct\" href=\"namada_core/ibc/primitives/prelude/struct.String.html\" title=\"struct namada_core::ibc::primitives::prelude::String\">String</a></h4></section></summary><div class='docblock'>Convert <code>Self</code> to a string.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_db_key\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_core/storage.rs.html#916\">source</a><a href=\"#method.to_db_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/storage/trait.KeySeg.html#tymethod.to_db_key\" class=\"fn\">to_db_key</a>(&amp;self) -&gt; <a class=\"enum\" href=\"namada_core/storage/enum.DbKeySeg.html\" title=\"enum namada_core::storage::DbKeySeg\">DbKeySeg</a></h4></section></summary><div class='docblock'>Convert <code>Self</code> to a key segment. This mapping should preserve the\nordering of <code>Self</code></div></details></div></details>","KeySeg","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerExp-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.42.0\">1.42.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#542-545\">source</a></span><a href=\"#impl-LowerExp-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/tendermint/consensus/state/fmt/trait.LowerExp.html\" title=\"trait namada_core::tendermint::consensus::state::fmt::LowerExp\">LowerExp</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#542-545\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/tendermint/consensus/state/fmt/trait.LowerExp.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"namada_core/tendermint/consensus/state/fmt/struct.Formatter.html\" title=\"struct namada_core::tendermint::consensus::state::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Result.html\" title=\"enum namada_core::ibc::primitives::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"namada_core/tendermint/consensus/state/fmt/struct.Error.html\" title=\"struct namada_core::tendermint::consensus::state::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"namada_core/tendermint/consensus/state/fmt/trait.LowerExp.html#tymethod.fmt\">Read more</a></div></details></div></details>","LowerExp","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#179\">source</a></span><a href=\"#impl-LowerHex-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/tendermint/consensus/state/fmt/trait.LowerHex.html\" title=\"trait namada_core::tendermint::consensus::state::fmt::LowerHex\">LowerHex</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#179\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/tendermint/consensus/state/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"namada_core/tendermint/consensus/state/fmt/struct.Formatter.html\" title=\"struct namada_core::tendermint::consensus::state::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Result.html\" title=\"enum namada_core::ibc::primitives::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"namada_core/tendermint/consensus/state/fmt/struct.Error.html\" title=\"struct namada_core::tendermint::consensus::state::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"namada_core/tendermint/consensus/state/fmt/trait.LowerHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","LowerHex","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#179\">source</a></span><a href=\"#impl-Octal-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/tendermint/consensus/state/fmt/trait.Octal.html\" title=\"trait namada_core::tendermint::consensus::state::fmt::Octal\">Octal</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#179\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/tendermint/consensus/state/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"namada_core/tendermint/consensus/state/fmt/struct.Formatter.html\" title=\"struct namada_core::tendermint::consensus::state::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Result.html\" title=\"enum namada_core::ibc::primitives::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"namada_core/tendermint/consensus/state/fmt/struct.Error.html\" title=\"struct namada_core::tendermint::consensus::state::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"namada_core/tendermint/consensus/state/fmt/trait.Octal.html#tymethod.fmt\">Read more</a></div></details></div></details>","Octal","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1780\">source</a></span><a href=\"#impl-Ord-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/trait.Ord.html\" title=\"trait namada_core::ibc::primitives::prelude::Ord\">Ord</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1780\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"namada_core/tendermint/consensus/state/enum.Ordering.html\" title=\"enum namada_core::tendermint::consensus::state::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"namada_core/tendermint/consensus/state/enum.Ordering.html\" title=\"enum namada_core::tendermint::consensus::state::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"namada_core/ibc/primitives/prelude/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#980-982\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/trait.Sized.html\" title=\"trait namada_core::ibc::primitives::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"namada_core/ibc/primitives/prelude/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1001-1003\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/trait.Sized.html\" title=\"trait namada_core::ibc::primitives::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"namada_core/ibc/primitives/prelude/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1027-1029\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/trait.Sized.html\" title=\"trait namada_core::ibc::primitives::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"namada_core/ibc/primitives/prelude/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingAdd%3C%26i64%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#58\">source</a><a href=\"#impl-OverflowingAdd%3C%26i64%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/arith/trait.OverflowingAdd.html\" title=\"trait namada_core::arith::OverflowingAdd\">OverflowingAdd</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#58\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_core/arith/trait.OverflowingAdd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#58\">source</a><a href=\"#method.overflowing_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/arith/trait.OverflowingAdd.html#tymethod.overflowing_add\" class=\"fn\">overflowing_add</a>(self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the sum along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingAdd<&i64>","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingAdd-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#58\">source</a><a href=\"#impl-OverflowingAdd-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/arith/trait.OverflowingAdd.html\" title=\"trait namada_core::arith::OverflowingAdd\">OverflowingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#58\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_core/arith/trait.OverflowingAdd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#58\">source</a><a href=\"#method.overflowing_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/arith/trait.OverflowingAdd.html#tymethod.overflowing_add\" class=\"fn\">overflowing_add</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the sum along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingAdd","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingSub%3C%26i64%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#80\">source</a><a href=\"#impl-OverflowingSub%3C%26i64%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/arith/trait.OverflowingSub.html\" title=\"trait namada_core::arith::OverflowingSub\">OverflowingSub</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#80\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_core/arith/trait.OverflowingSub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#80\">source</a><a href=\"#method.overflowing_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/arith/trait.OverflowingSub.html#tymethod.overflowing_sub\" class=\"fn\">overflowing_sub</a>(self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the difference along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingSub<&i64>","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingSub-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#80\">source</a><a href=\"#impl-OverflowingSub-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/arith/trait.OverflowingSub.html\" title=\"trait namada_core::arith::OverflowingSub\">OverflowingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#80\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_core/arith/trait.OverflowingSub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#80\">source</a><a href=\"#method.overflowing_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/arith/trait.OverflowingSub.html#tymethod.overflowing_sub\" class=\"fn\">overflowing_sub</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the difference along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingSub","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CValue%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde_json/value/partial_eq.rs.html#97-103\">source</a><a href=\"#impl-PartialEq%3CValue%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/trait.PartialEq.html\" title=\"trait namada_core::ibc::primitives::prelude::PartialEq\">PartialEq</a>&lt;<a class=\"enum\" href=\"serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde_json/value/partial_eq.rs.html#97-103\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#261\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Value>","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1655-1657\">source</a></span><a href=\"#impl-PartialEq-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/trait.PartialEq.html\" title=\"trait namada_core::ibc::primitives::prelude::PartialEq\">PartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1655-1657\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1655-1657\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1780\">source</a></span><a href=\"#impl-PartialOrd-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/trait.PartialOrd.html\" title=\"trait namada_core::ibc::primitives::prelude::PartialOrd\">PartialOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1780\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Option.html\" title=\"enum namada_core::ibc::primitives::prelude::Option\">Option</a>&lt;<a class=\"enum\" href=\"namada_core/tendermint/consensus/state/enum.Ordering.html\" title=\"enum namada_core::tendermint::consensus::state::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"namada_core/ibc/primitives/prelude/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1780\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"namada_core/ibc/primitives/prelude/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1780\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"namada_core/ibc/primitives/prelude/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1780\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"namada_core/ibc/primitives/prelude/trait.PartialOrd.html#method.ge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1780\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/ibc/primitives/prelude/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"namada_core/ibc/primitives/prelude/trait.PartialOrd.html#method.gt\">Read more</a></div></details></div></details>","PartialOrd","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CUint%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/namada_core/uint.rs.html#307-319\">source</a><a href=\"#impl-TryFrom%3CUint%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"namada_core/uint/struct.Uint.html\" title=\"struct namada_core::uint::Uint\">Uint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/namada_core/uint.rs.html#307-319\">source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_core/uint.rs.html#307-319\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"struct\" href=\"namada_core/uint/struct.Uint.html\" title=\"struct namada_core::uint::Uint\">Uint</a>) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Result.html\" title=\"enum namada_core::ibc::primitives::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<Uint>","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperExp-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.42.0\">1.42.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#542-545\">source</a></span><a href=\"#impl-UpperExp-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/tendermint/consensus/state/fmt/trait.UpperExp.html\" title=\"trait namada_core::tendermint::consensus::state::fmt::UpperExp\">UpperExp</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#542-545\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/tendermint/consensus/state/fmt/trait.UpperExp.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"namada_core/tendermint/consensus/state/fmt/struct.Formatter.html\" title=\"struct namada_core::tendermint::consensus::state::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Result.html\" title=\"enum namada_core::ibc::primitives::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"namada_core/tendermint/consensus/state/fmt/struct.Error.html\" title=\"struct namada_core::tendermint::consensus::state::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"namada_core/tendermint/consensus/state/fmt/trait.UpperExp.html#tymethod.fmt\">Read more</a></div></details></div></details>","UpperExp","namada_core::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#179\">source</a></span><a href=\"#impl-UpperHex-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/tendermint/consensus/state/fmt/trait.UpperHex.html\" title=\"trait namada_core::tendermint::consensus::state::fmt::UpperHex\">UpperHex</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#179\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/tendermint/consensus/state/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"namada_core/tendermint/consensus/state/fmt/struct.Formatter.html\" title=\"struct namada_core::tendermint::consensus::state::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"namada_core/ibc/primitives/prelude/enum.Result.html\" title=\"enum namada_core::ibc::primitives::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"namada_core/tendermint/consensus/state/fmt/struct.Error.html\" title=\"struct namada_core::tendermint::consensus::state::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"namada_core/tendermint/consensus/state/fmt/trait.UpperHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","UpperHex","namada_core::borsh::schema::DiscriminantValue"],["<section id=\"impl-Copy-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/marker.rs.html#433-443\">source</a></span><a href=\"#impl-Copy-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/trait.Copy.html\" title=\"trait namada_core::ibc::primitives::prelude::Copy\">Copy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section>","Copy","namada_core::borsh::schema::DiscriminantValue"],["<section id=\"impl-Eq-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1666\">source</a></span><a href=\"#impl-Eq-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/ibc/primitives/prelude/trait.Eq.html\" title=\"trait namada_core::ibc::primitives::prelude::Eq\">Eq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section>","Eq","namada_core::borsh::schema::DiscriminantValue"]]],["namada_sdk",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cf32%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#impl-AsPrimitive%3Cf32%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html\" title=\"trait namada_sdk::masp_primitives::num_traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<f32>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cf64%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#impl-AsPrimitive%3Cf64%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html\" title=\"trait namada_sdk::masp_primitives::num_traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<f64>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci128%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#impl-AsPrimitive%3Ci128%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html\" title=\"trait namada_sdk::masp_primitives::num_traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i128>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci16%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#impl-AsPrimitive%3Ci16%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html\" title=\"trait namada_sdk::masp_primitives::num_traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i16>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci32%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#impl-AsPrimitive%3Ci32%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html\" title=\"trait namada_sdk::masp_primitives::num_traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i32>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci64%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#impl-AsPrimitive%3Ci64%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html\" title=\"trait namada_sdk::masp_primitives::num_traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i64>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci8%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#impl-AsPrimitive%3Ci8%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html\" title=\"trait namada_sdk::masp_primitives::num_traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i8>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cisize%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#impl-AsPrimitive%3Cisize%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html\" title=\"trait namada_sdk::masp_primitives::num_traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<isize>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu128%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#impl-AsPrimitive%3Cu128%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html\" title=\"trait namada_sdk::masp_primitives::num_traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u128>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu16%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#impl-AsPrimitive%3Cu16%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html\" title=\"trait namada_sdk::masp_primitives::num_traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u16>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu32%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#impl-AsPrimitive%3Cu32%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html\" title=\"trait namada_sdk::masp_primitives::num_traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u32>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu64%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#impl-AsPrimitive%3Cu64%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html\" title=\"trait namada_sdk::masp_primitives::num_traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u64>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu8%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#impl-AsPrimitive%3Cu8%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html\" title=\"trait namada_sdk::masp_primitives::num_traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u8>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cusize%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#impl-AsPrimitive%3Cusize%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html\" title=\"trait namada_sdk::masp_primitives::num_traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#762\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<usize>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#179\">source</a></span><a href=\"#impl-Binary-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/tendermint/consensus/state/fmt/trait.Binary.html\" title=\"trait namada_sdk::tendermint::consensus::state::fmt::Binary\">Binary</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#179\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/tendermint/consensus/state/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"namada_sdk/tendermint/consensus/state/fmt/struct.Formatter.html\" title=\"struct namada_sdk::tendermint::consensus::state::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"namada_sdk/tendermint/consensus/state/fmt/struct.Error.html\" title=\"struct namada_sdk::tendermint::consensus::state::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"namada_sdk/tendermint/consensus/state/fmt/trait.Binary.html#tymethod.fmt\">Read more</a></div></details></div></details>","Binary","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorshDeserialize-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/borsh/de/mod.rs.html#216\">source</a><a href=\"#impl-BorshDeserialize-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/borsh/trait.BorshDeserialize.html\" title=\"trait namada_sdk::borsh::BorshDeserialize\">BorshDeserialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.deserialize_reader\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/borsh/de/mod.rs.html#216\">source</a><a href=\"#method.deserialize_reader\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/borsh/trait.BorshDeserialize.html#tymethod.deserialize_reader\" class=\"fn\">deserialize_reader</a>&lt;R&gt;(reader: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut R</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, <a class=\"struct\" href=\"namada_sdk/borsh/io/struct.Error.html\" title=\"struct namada_sdk::borsh::io::Error\">Error</a>&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"namada_sdk/borsh/io/trait.Read.html\" title=\"trait namada_sdk::borsh::io::Read\">Read</a>,</div></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/borsh/de/mod.rs.html#39\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/borsh/trait.BorshDeserialize.html#method.deserialize\" class=\"fn\">deserialize</a>(buf: &amp;mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"namada_sdk/borsh/io/struct.Error.html\" title=\"struct namada_sdk::borsh::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Deserializes this instance from a given slice of bytes.\nUpdates the buffer to point at the remaining bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/borsh/de/mod.rs.html#46\">source</a><a href=\"#method.try_from_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/borsh/trait.BorshDeserialize.html#method.try_from_slice\" class=\"fn\">try_from_slice</a>(v: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"namada_sdk/borsh/io/struct.Error.html\" title=\"struct namada_sdk::borsh::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Deserialize this instance from a slice of bytes.</div></details><section id=\"method.try_from_reader\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/borsh/de/mod.rs.html#55\">source</a><a href=\"#method.try_from_reader\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/borsh/trait.BorshDeserialize.html#method.try_from_reader\" class=\"fn\">try_from_reader</a>&lt;R&gt;(reader: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut R</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"namada_sdk/borsh/io/struct.Error.html\" title=\"struct namada_sdk::borsh::io::Error\">Error</a>&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"namada_sdk/borsh/io/trait.Read.html\" title=\"trait namada_sdk::borsh::io::Read\">Read</a>,</div></h4></section></div></details>","BorshDeserialize","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorshSchema-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/borsh/schema.rs.html#436\">source</a><a href=\"#impl-BorshSchema-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/borsh/trait.BorshSchema.html\" title=\"trait namada_sdk::borsh::BorshSchema\">BorshSchema</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_definitions_recursively\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/borsh/schema.rs.html#436\">source</a><a href=\"#method.add_definitions_recursively\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/borsh/trait.BorshSchema.html#tymethod.add_definitions_recursively\" class=\"fn\">add_definitions_recursively</a>(definitions: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/collections/btree/map/struct.BTreeMap.html\" title=\"struct alloc::collections::btree::map::BTreeMap\">BTreeMap</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"enum\" href=\"namada_sdk/borsh/schema/enum.Definition.html\" title=\"enum namada_sdk::borsh::schema::Definition\">Definition</a>&gt;)</h4></section></summary><div class='docblock'>Recursively, using DFS, add type definitions required for this type.\nType definition partially explains how to serialize/deserialize a type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.declaration\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/borsh/schema.rs.html#436\">source</a><a href=\"#method.declaration\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/borsh/trait.BorshSchema.html#tymethod.declaration\" class=\"fn\">declaration</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>Get the name of the type without brackets.</div></details></div></details>","BorshSchema","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorshSerialize-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/borsh/ser/mod.rs.html#92\">source</a><a href=\"#impl-BorshSerialize-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/borsh/trait.BorshSerialize.html\" title=\"trait namada_sdk::borsh::BorshSerialize\">BorshSerialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/borsh/ser/mod.rs.html#92\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/borsh/trait.BorshSerialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;W&gt;(&amp;self, writer: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut W</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"namada_sdk/borsh/io/struct.Error.html\" title=\"struct namada_sdk::borsh::io::Error\">Error</a>&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"namada_sdk/borsh/io/trait.Write.html\" title=\"trait namada_sdk::borsh::io::Write\">Write</a>,</div></h4></section></div></details>","BorshSerialize","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bounded-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/bounds.rs.html#68\">source</a><a href=\"#impl-Bounded-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.Bounded.html\" title=\"trait namada_sdk::masp_primitives::num_traits::Bounded\">Bounded</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/bounds.rs.html#68\">source</a><a href=\"#method.min_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.Bounded.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Returns the smallest finite number this type can represent</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/bounds.rs.html#68\">source</a><a href=\"#method.max_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.Bounded.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Returns the largest finite number this type can represent</div></details></div></details>","Bounded","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedAdd%3C%26i64%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#55\">source</a><a href=\"#impl-CheckedAdd%3C%26i64%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedAdd.html\" title=\"trait namada_sdk::masp_primitives::num_traits::CheckedAdd\">CheckedAdd</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#55\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedAdd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#55\">source</a><a href=\"#method.checked_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedAdd.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Adds two numbers, checking for overflow. If overflow happens, <code>None</code> is\nreturned.</div></details></div></details>","CheckedAdd<&i64>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedAdd-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#55\">source</a><a href=\"#impl-CheckedAdd-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedAdd.html\" title=\"trait namada_sdk::masp_primitives::num_traits::CheckedAdd\">CheckedAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#55\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedAdd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#55\">source</a><a href=\"#method.checked_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedAdd.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Adds two numbers, checking for overflow. If overflow happens, <code>None</code> is\nreturned.</div></details></div></details>","CheckedAdd","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedDiv%3C%26i64%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#122\">source</a><a href=\"#impl-CheckedDiv%3C%26i64%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedDiv.html\" title=\"trait namada_sdk::masp_primitives::num_traits::CheckedDiv\">CheckedDiv</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#122\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedDiv.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#122\">source</a><a href=\"#method.checked_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedDiv.html#tymethod.checked_div\" class=\"fn\">checked_div</a>(self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Divides two numbers, checking for overflow and division by\nzero. If any of that happens, <code>None</code> is returned.</div></details></div></details>","CheckedDiv<&i64>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedDiv-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#122\">source</a><a href=\"#impl-CheckedDiv-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedDiv.html\" title=\"trait namada_sdk::masp_primitives::num_traits::CheckedDiv\">CheckedDiv</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#122\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedDiv.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#122\">source</a><a href=\"#method.checked_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedDiv.html#tymethod.checked_div\" class=\"fn\">checked_div</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Divides two numbers, checking for overflow and division by\nzero. If any of that happens, <code>None</code> is returned.</div></details></div></details>","CheckedDiv","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedEuclid-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/euclid.rs.html#183\">source</a><a href=\"#impl-CheckedEuclid-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedEuclid.html\" title=\"trait namada_sdk::masp_primitives::num_traits::CheckedEuclid\">CheckedEuclid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/euclid.rs.html#183\">source</a><a href=\"#method.checked_div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedEuclid.html#tymethod.checked_div_euclid\" class=\"fn\">checked_div_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Performs euclid division, returning <code>None</code> on division by zero or if\noverflow occurred.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/euclid.rs.html#183\">source</a><a href=\"#method.checked_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedEuclid.html#tymethod.checked_rem_euclid\" class=\"fn\">checked_rem_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Finds the euclid remainder of dividing two numbers, returning <code>None</code> on\ndivision by zero or if overflow occurred.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/euclid.rs.html#162\">source</a><a href=\"#method.checked_div_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedEuclid.html#method.checked_div_rem_euclid\" class=\"fn\">checked_div_rem_euclid</a>(&amp;self, v: &amp;Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(Self, Self)&gt;</h4></section></summary><div class='docblock'>Returns both the quotient and remainder from checked Euclidean division,\nreturning <code>None</code> on division by zero or if overflow occurred. <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedEuclid.html#method.checked_div_rem_euclid\">Read more</a></div></details></div></details>","CheckedEuclid","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedMul%3C%26i64%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#99\">source</a><a href=\"#impl-CheckedMul%3C%26i64%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedMul.html\" title=\"trait namada_sdk::masp_primitives::num_traits::CheckedMul\">CheckedMul</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#99\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedMul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#99\">source</a><a href=\"#method.checked_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedMul.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Multiplies two numbers, checking for overflow. If overflow happens,\n<code>None</code> is returned.</div></details></div></details>","CheckedMul<&i64>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedMul-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#99\">source</a><a href=\"#impl-CheckedMul-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedMul.html\" title=\"trait namada_sdk::masp_primitives::num_traits::CheckedMul\">CheckedMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#99\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedMul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#99\">source</a><a href=\"#method.checked_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedMul.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Multiplies two numbers, checking for overflow. If overflow happens,\n<code>None</code> is returned.</div></details></div></details>","CheckedMul","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedNeg-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#218\">source</a><a href=\"#impl-CheckedNeg-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedNeg.html\" title=\"trait namada_sdk::masp_primitives::num_traits::CheckedNeg\">CheckedNeg</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#218\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedNeg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#218\">source</a><a href=\"#method.checked_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedNeg.html#tymethod.checked_neg\" class=\"fn\">checked_neg</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Negates a number, returning <code>None</code> for results that can’t be represented, like signed <code>MIN</code>\nvalues that can’t be positive, or non-zero unsigned values that can’t be negative. <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedNeg.html#tymethod.checked_neg\">Read more</a></div></details></div></details>","CheckedNeg","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedRem%3C%26i64%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#162\">source</a><a href=\"#impl-CheckedRem%3C%26i64%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedRem.html\" title=\"trait namada_sdk::masp_primitives::num_traits::CheckedRem\">CheckedRem</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#162\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedRem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#162\">source</a><a href=\"#method.checked_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedRem.html#tymethod.checked_rem\" class=\"fn\">checked_rem</a>(self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Finds the remainder of dividing two numbers, checking for overflow and\ndivision by zero. If any of that happens, <code>None</code> is returned. <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedRem.html#tymethod.checked_rem\">Read more</a></div></details></div></details>","CheckedRem<&i64>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedRem-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#162\">source</a><a href=\"#impl-CheckedRem-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedRem.html\" title=\"trait namada_sdk::masp_primitives::num_traits::CheckedRem\">CheckedRem</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#162\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedRem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#162\">source</a><a href=\"#method.checked_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedRem.html#tymethod.checked_rem\" class=\"fn\">checked_rem</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Finds the remainder of dividing two numbers, checking for overflow and\ndivision by zero. If any of that happens, <code>None</code> is returned. <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedRem.html#tymethod.checked_rem\">Read more</a></div></details></div></details>","CheckedRem","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedShl-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#272\">source</a><a href=\"#impl-CheckedShl-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedShl.html\" title=\"trait namada_sdk::masp_primitives::num_traits::CheckedShl\">CheckedShl</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#272\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedShl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#272\">source</a><a href=\"#method.checked_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedShl.html#tymethod.checked_shl\" class=\"fn\">checked_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>. <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedShl.html#tymethod.checked_shl\">Read more</a></div></details></div></details>","CheckedShl","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedShr-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#306\">source</a><a href=\"#impl-CheckedShr-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedShr.html\" title=\"trait namada_sdk::masp_primitives::num_traits::CheckedShr\">CheckedShr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#306\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedShr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#306\">source</a><a href=\"#method.checked_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedShr.html#tymethod.checked_shr\" class=\"fn\">checked_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>. <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedShr.html#tymethod.checked_shr\">Read more</a></div></details></div></details>","CheckedShr","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedSub%3C%26i64%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#77\">source</a><a href=\"#impl-CheckedSub%3C%26i64%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedSub.html\" title=\"trait namada_sdk::masp_primitives::num_traits::CheckedSub\">CheckedSub</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#77\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedSub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#77\">source</a><a href=\"#method.checked_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedSub.html#tymethod.checked_sub\" class=\"fn\">checked_sub</a>(self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Subtracts two numbers, checking for underflow. If underflow happens,\n<code>None</code> is returned.</div></details></div></details>","CheckedSub<&i64>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedSub-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#77\">source</a><a href=\"#impl-CheckedSub-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedSub.html\" title=\"trait namada_sdk::masp_primitives::num_traits::CheckedSub\">CheckedSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#77\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedSub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/checked.rs.html#77\">source</a><a href=\"#method.checked_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.CheckedSub.html#tymethod.checked_sub\" class=\"fn\">checked_sub</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Subtracts two numbers, checking for underflow. If underflow happens,\n<code>None</code> is returned.</div></details></div></details>","CheckedSub","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstOne-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/identities.rs.html#173\">source</a><a href=\"#impl-ConstOne-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.ConstOne.html\" title=\"trait namada_sdk::masp_primitives::num_traits::ConstOne\">ConstOne</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ONE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/identities.rs.html#173\">source</a><a href=\"#associatedconstant.ONE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"namada_sdk/masp_primitives/num_traits/trait.ConstOne.html#associatedconstant.ONE\" class=\"constant\">ONE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a> = 1i64</h4></section></summary><div class='docblock'>The multiplicative identity element of <code>Self</code>, <code>1</code>.</div></details></div></details>","ConstOne","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstZero-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/identities.rs.html#68\">source</a><a href=\"#impl-ConstZero-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.ConstZero.html\" title=\"trait namada_sdk::masp_primitives::num_traits::ConstZero\">ConstZero</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ZERO\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/identities.rs.html#68\">source</a><a href=\"#associatedconstant.ZERO\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"namada_sdk/masp_primitives/num_traits/trait.ConstZero.html#associatedconstant.ZERO\" class=\"constant\">ZERO</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a> = 0i64</h4></section></summary><div class='docblock'>The additive identity element of <code>Self</code>, <code>0</code>.</div></details></div></details>","ConstZero","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#198-201\">source</a></span><a href=\"#impl-Debug-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/tendermint/consensus/state/fmt/trait.Debug.html\" title=\"trait namada_sdk::tendermint::consensus::state::fmt::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#198-201\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/tendermint/consensus/state/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"namada_sdk/tendermint/consensus/state/fmt/struct.Formatter.html\" title=\"struct namada_sdk::tendermint::consensus::state::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"namada_sdk/tendermint/consensus/state/fmt/struct.Error.html\" title=\"struct namada_sdk::tendermint::consensus::state::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"namada_sdk/tendermint/consensus/state/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#529-541\">source</a></span><a href=\"#impl-Display-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/tendermint/consensus/state/fmt/trait.Display.html\" title=\"trait namada_sdk::tendermint::consensus::state::fmt::Display\">Display</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#529-541\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/tendermint/consensus/state/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"namada_sdk/tendermint/consensus/state/fmt/struct.Formatter.html\" title=\"struct namada_sdk::tendermint::consensus::state::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"namada_sdk/tendermint/consensus/state/fmt/struct.Error.html\" title=\"struct namada_sdk::tendermint::consensus::state::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"namada_sdk/tendermint/consensus/state/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Euclid-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/euclid.rs.html#86\">source</a><a href=\"#impl-Euclid-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.Euclid.html\" title=\"trait namada_sdk::masp_primitives::num_traits::Euclid\">Euclid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/euclid.rs.html#86\">source</a><a href=\"#method.div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.Euclid.html#tymethod.div_euclid\" class=\"fn\">div_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Calculates Euclidean division, the matching method for <code>rem_euclid</code>. <a href=\"namada_sdk/masp_primitives/num_traits/trait.Euclid.html#tymethod.div_euclid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/euclid.rs.html#86\">source</a><a href=\"#method.rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.Euclid.html#tymethod.rem_euclid\" class=\"fn\">rem_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Calculates the least nonnegative remainder of <code>self (mod v)</code>. <a href=\"namada_sdk/masp_primitives/num_traits/trait.Euclid.html#tymethod.rem_euclid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/euclid.rs.html#65\">source</a><a href=\"#method.div_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.Euclid.html#method.div_rem_euclid\" class=\"fn\">div_rem_euclid</a>(&amp;self, v: &amp;Self) -&gt; (Self, Self)</h4></section></summary><div class='docblock'>Returns both the quotient and remainder from Euclidean division. <a href=\"namada_sdk/masp_primitives/num_traits/trait.Euclid.html#method.div_rem_euclid\">Read more</a></div></details></div></details>","Euclid","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromBytes-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/bytes.rs.html#248\">source</a><a href=\"#impl-FromBytes-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.FromBytes.html\" title=\"trait namada_sdk::masp_primitives::num_traits::FromBytes\">FromBytes</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/bytes.rs.html#248\">source</a><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/trait.FromBytes.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">8</a>]</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/bytes.rs.html#248\">source</a><a href=\"#method.from_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.FromBytes.html#tymethod.from_be_bytes\" class=\"fn\">from_be_bytes</a>(bytes: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a> as <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.FromBytes.html\" title=\"trait namada_sdk::masp_primitives::num_traits::FromBytes\">FromBytes</a>&gt;::<a class=\"associatedtype\" href=\"namada_sdk/masp_primitives/num_traits/trait.FromBytes.html#associatedtype.Bytes\" title=\"type namada_sdk::masp_primitives::num_traits::FromBytes::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Create a number from its representation as a byte array in big endian. <a href=\"namada_sdk/masp_primitives/num_traits/trait.FromBytes.html#tymethod.from_be_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/bytes.rs.html#248\">source</a><a href=\"#method.from_le_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.FromBytes.html#tymethod.from_le_bytes\" class=\"fn\">from_le_bytes</a>(bytes: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a> as <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.FromBytes.html\" title=\"trait namada_sdk::masp_primitives::num_traits::FromBytes\">FromBytes</a>&gt;::<a class=\"associatedtype\" href=\"namada_sdk/masp_primitives/num_traits/trait.FromBytes.html#associatedtype.Bytes\" title=\"type namada_sdk::masp_primitives::num_traits::FromBytes::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Create a number from its representation as a byte array in little endian. <a href=\"namada_sdk/masp_primitives/num_traits/trait.FromBytes.html#tymethod.from_le_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ne_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/bytes.rs.html#248\">source</a><a href=\"#method.from_ne_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.FromBytes.html#method.from_ne_bytes\" class=\"fn\">from_ne_bytes</a>(bytes: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a> as <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.FromBytes.html\" title=\"trait namada_sdk::masp_primitives::num_traits::FromBytes\">FromBytes</a>&gt;::<a class=\"associatedtype\" href=\"namada_sdk/masp_primitives/num_traits/trait.FromBytes.html#associatedtype.Bytes\" title=\"type namada_sdk::masp_primitives::num_traits::FromBytes::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Create a number from its memory representation as a byte array in native endianness. <a href=\"namada_sdk/masp_primitives/num_traits/trait.FromBytes.html#method.from_ne_bytes\">Read more</a></div></details></div></details>","FromBytes","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromPrimitive-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#564\">source</a><a href=\"#impl-FromPrimitive-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.FromPrimitive.html\" title=\"trait namada_sdk::masp_primitives::num_traits::FromPrimitive\">FromPrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#564\">source</a><a href=\"#method.from_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.FromPrimitive.html#method.from_isize\" class=\"fn\">from_isize</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>isize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#564\">source</a><a href=\"#method.from_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.FromPrimitive.html#method.from_i8\" class=\"fn\">from_i8</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#564\">source</a><a href=\"#method.from_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.FromPrimitive.html#method.from_i16\" class=\"fn\">from_i16</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#564\">source</a><a href=\"#method.from_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.FromPrimitive.html#method.from_i32\" class=\"fn\">from_i32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#564\">source</a><a href=\"#method.from_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.FromPrimitive.html#tymethod.from_i64\" class=\"fn\">from_i64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#564\">source</a><a href=\"#method.from_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.FromPrimitive.html#method.from_i128\" class=\"fn\">from_i128</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"namada_sdk/masp_primitives/num_traits/trait.FromPrimitive.html#method.from_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#564\">source</a><a href=\"#method.from_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.FromPrimitive.html#method.from_usize\" class=\"fn\">from_usize</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>usize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#564\">source</a><a href=\"#method.from_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.FromPrimitive.html#method.from_u8\" class=\"fn\">from_u8</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#564\">source</a><a href=\"#method.from_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.FromPrimitive.html#method.from_u16\" class=\"fn\">from_u16</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#564\">source</a><a href=\"#method.from_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.FromPrimitive.html#method.from_u32\" class=\"fn\">from_u32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#564\">source</a><a href=\"#method.from_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.FromPrimitive.html#tymethod.from_u64\" class=\"fn\">from_u64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#564\">source</a><a href=\"#method.from_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.FromPrimitive.html#method.from_u128\" class=\"fn\">from_u128</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"namada_sdk/masp_primitives/num_traits/trait.FromPrimitive.html#method.from_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#564\">source</a><a href=\"#method.from_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.FromPrimitive.html#method.from_f32\" class=\"fn\">from_f32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>f32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#564\">source</a><a href=\"#method.from_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.FromPrimitive.html#method.from_f64\" class=\"fn\">from_f64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>f64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"namada_sdk/masp_primitives/num_traits/trait.FromPrimitive.html#method.from_f64\">Read more</a></div></details></div></details>","FromPrimitive","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerExp-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.42.0\">1.42.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#542-545\">source</a></span><a href=\"#impl-LowerExp-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/tendermint/consensus/state/fmt/trait.LowerExp.html\" title=\"trait namada_sdk::tendermint::consensus::state::fmt::LowerExp\">LowerExp</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#542-545\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/tendermint/consensus/state/fmt/trait.LowerExp.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"namada_sdk/tendermint/consensus/state/fmt/struct.Formatter.html\" title=\"struct namada_sdk::tendermint::consensus::state::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"namada_sdk/tendermint/consensus/state/fmt/struct.Error.html\" title=\"struct namada_sdk::tendermint::consensus::state::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"namada_sdk/tendermint/consensus/state/fmt/trait.LowerExp.html#tymethod.fmt\">Read more</a></div></details></div></details>","LowerExp","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#179\">source</a></span><a href=\"#impl-LowerHex-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/tendermint/consensus/state/fmt/trait.LowerHex.html\" title=\"trait namada_sdk::tendermint::consensus::state::fmt::LowerHex\">LowerHex</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#179\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/tendermint/consensus/state/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"namada_sdk/tendermint/consensus/state/fmt/struct.Formatter.html\" title=\"struct namada_sdk::tendermint::consensus::state::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"namada_sdk/tendermint/consensus/state/fmt/struct.Error.html\" title=\"struct namada_sdk::tendermint::consensus::state::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"namada_sdk/tendermint/consensus/state/fmt/trait.LowerHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","LowerHex","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAdd-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/mul_add.rs.html#70\">source</a><a href=\"#impl-MulAdd-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.MulAdd.html\" title=\"trait namada_sdk::masp_primitives::num_traits::MulAdd\">MulAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/mul_add.rs.html#70\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/trait.MulAdd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>The resulting type after applying the fused multiply-add.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/mul_add.rs.html#70\">source</a><a href=\"#method.mul_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.MulAdd.html#tymethod.mul_add\" class=\"fn\">mul_add</a>(self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a> as <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.MulAdd.html\" title=\"trait namada_sdk::masp_primitives::num_traits::MulAdd\">MulAdd</a>&gt;::<a class=\"associatedtype\" href=\"namada_sdk/masp_primitives/num_traits/trait.MulAdd.html#associatedtype.Output\" title=\"type namada_sdk::masp_primitives::num_traits::MulAdd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the fused multiply-add operation <code>(self * a) + b</code></div></details></div></details>","MulAdd","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAddAssign-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/mul_add.rs.html#100\">source</a><a href=\"#impl-MulAddAssign-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.MulAddAssign.html\" title=\"trait namada_sdk::masp_primitives::num_traits::MulAddAssign\">MulAddAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/mul_add.rs.html#100\">source</a><a href=\"#method.mul_add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.MulAddAssign.html#tymethod.mul_add_assign\" class=\"fn\">mul_add_assign</a>(&amp;mut self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Performs the fused multiply-add assignment operation <code>*self = (*self * a) + b</code></div></details></div></details>","MulAddAssign","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Num-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/lib.rs.html#175\">source</a><a href=\"#impl-Num-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.Num.html\" title=\"trait namada_sdk::masp_primitives::num_traits::Num\">Num</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.FromStrRadixErr\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/lib.rs.html#175\">source</a><a href=\"#associatedtype.FromStrRadixErr\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/trait.Num.html#associatedtype.FromStrRadixErr\" class=\"associatedtype\">FromStrRadixErr</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_radix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/lib.rs.html#175\">source</a><a href=\"#method.from_str_radix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.Num.html#tymethod.from_str_radix\" class=\"fn\">from_str_radix</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, radix: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a>&gt;</h4></section></summary><div class='docblock'>Convert from a string and radix (typically <code>2..=36</code>). <a href=\"namada_sdk/masp_primitives/num_traits/trait.Num.html#tymethod.from_str_radix\">Read more</a></div></details></div></details>","Num","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumCast-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#692\">source</a><a href=\"#impl-NumCast-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.NumCast.html\" title=\"trait namada_sdk::masp_primitives::num_traits::NumCast\">NumCast</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#692\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.NumCast.html#tymethod.from\" class=\"fn\">from</a>&lt;N&gt;(n: N) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;<div class=\"where\">where\n    N: <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.ToPrimitive.html\" title=\"trait namada_sdk::masp_primitives::num_traits::ToPrimitive\">ToPrimitive</a>,</div></h4></section></summary><div class='docblock'>Creates a number from another value that can be converted into\na primitive via the <code>ToPrimitive</code> trait. If the source value cannot be\nrepresented by the target type, then <code>None</code> is returned. <a href=\"namada_sdk/masp_primitives/num_traits/trait.NumCast.html#tymethod.from\">Read more</a></div></details></div></details>","NumCast","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#179\">source</a></span><a href=\"#impl-Octal-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/tendermint/consensus/state/fmt/trait.Octal.html\" title=\"trait namada_sdk::tendermint::consensus::state::fmt::Octal\">Octal</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#179\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/tendermint/consensus/state/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"namada_sdk/tendermint/consensus/state/fmt/struct.Formatter.html\" title=\"struct namada_sdk::tendermint::consensus::state::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"namada_sdk/tendermint/consensus/state/fmt/struct.Error.html\" title=\"struct namada_sdk::tendermint::consensus::state::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"namada_sdk/tendermint/consensus/state/fmt/trait.Octal.html#tymethod.fmt\">Read more</a></div></details></div></details>","Octal","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-One-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/identities.rs.html#173\">source</a><a href=\"#impl-One-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.One.html\" title=\"trait namada_sdk::masp_primitives::num_traits::One\">One</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/identities.rs.html#173\">source</a><a href=\"#method.one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.One.html#tymethod.one\" class=\"fn\">one</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Returns the multiplicative identity element of <code>Self</code>, <code>1</code>. <a href=\"namada_sdk/masp_primitives/num_traits/trait.One.html#tymethod.one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/identities.rs.html#173\">source</a><a href=\"#method.is_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.One.html#method.is_one\" class=\"fn\">is_one</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the multiplicative identity. <a href=\"namada_sdk/masp_primitives/num_traits/trait.One.html#method.is_one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/identities.rs.html#118\">source</a><a href=\"#method.set_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.One.html#method.set_one\" class=\"fn\">set_one</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>.</div></details></div></details>","One","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingAdd%3C%26i64%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#58\">source</a><a href=\"#impl-OverflowingAdd%3C%26i64%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/ops/overflowing/trait.OverflowingAdd.html\" title=\"trait namada_sdk::masp_primitives::num_traits::ops::overflowing::OverflowingAdd\">OverflowingAdd</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#58\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/ops/overflowing/trait.OverflowingAdd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#58\">source</a><a href=\"#method.overflowing_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/ops/overflowing/trait.OverflowingAdd.html#tymethod.overflowing_add\" class=\"fn\">overflowing_add</a>(self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the sum along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingAdd<&i64>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingAdd-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#58\">source</a><a href=\"#impl-OverflowingAdd-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/ops/overflowing/trait.OverflowingAdd.html\" title=\"trait namada_sdk::masp_primitives::num_traits::ops::overflowing::OverflowingAdd\">OverflowingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#58\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/ops/overflowing/trait.OverflowingAdd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#58\">source</a><a href=\"#method.overflowing_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/ops/overflowing/trait.OverflowingAdd.html#tymethod.overflowing_add\" class=\"fn\">overflowing_add</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the sum along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingAdd","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingMul%3C%26i64%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#102\">source</a><a href=\"#impl-OverflowingMul%3C%26i64%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/ops/overflowing/trait.OverflowingMul.html\" title=\"trait namada_sdk::masp_primitives::num_traits::ops::overflowing::OverflowingMul\">OverflowingMul</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#102\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/ops/overflowing/trait.OverflowingMul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#102\">source</a><a href=\"#method.overflowing_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/ops/overflowing/trait.OverflowingMul.html#tymethod.overflowing_mul\" class=\"fn\">overflowing_mul</a>(self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the product along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingMul<&i64>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingMul-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#102\">source</a><a href=\"#impl-OverflowingMul-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/ops/overflowing/trait.OverflowingMul.html\" title=\"trait namada_sdk::masp_primitives::num_traits::ops::overflowing::OverflowingMul\">OverflowingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#102\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/ops/overflowing/trait.OverflowingMul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#102\">source</a><a href=\"#method.overflowing_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/ops/overflowing/trait.OverflowingMul.html#tymethod.overflowing_mul\" class=\"fn\">overflowing_mul</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the product along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingMul","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingSub%3C%26i64%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#80\">source</a><a href=\"#impl-OverflowingSub%3C%26i64%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/ops/overflowing/trait.OverflowingSub.html\" title=\"trait namada_sdk::masp_primitives::num_traits::ops::overflowing::OverflowingSub\">OverflowingSub</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#80\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/ops/overflowing/trait.OverflowingSub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#80\">source</a><a href=\"#method.overflowing_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/ops/overflowing/trait.OverflowingSub.html#tymethod.overflowing_sub\" class=\"fn\">overflowing_sub</a>(self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the difference along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingSub<&i64>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingSub-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#80\">source</a><a href=\"#impl-OverflowingSub-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/ops/overflowing/trait.OverflowingSub.html\" title=\"trait namada_sdk::masp_primitives::num_traits::ops::overflowing::OverflowingSub\">OverflowingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#80\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/ops/overflowing/trait.OverflowingSub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/overflowing.rs.html#80\">source</a><a href=\"#method.overflowing_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/ops/overflowing/trait.OverflowingSub.html#tymethod.overflowing_sub\" class=\"fn\">overflowing_sub</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the difference along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingSub","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u16%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/pow.rs.html#98\">source</a><a href=\"#impl-Pow%3C%26u16%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html\" title=\"trait namada_sdk::masp_primitives::num_traits::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/pow.rs.html#98\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/pow.rs.html#98\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u16>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u32%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/pow.rs.html#99\">source</a><a href=\"#impl-Pow%3C%26u32%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html\" title=\"trait namada_sdk::masp_primitives::num_traits::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/pow.rs.html#99\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/pow.rs.html#99\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u32>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u8%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/pow.rs.html#97\">source</a><a href=\"#impl-Pow%3C%26u8%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html\" title=\"trait namada_sdk::masp_primitives::num_traits::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/pow.rs.html#97\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/pow.rs.html#97\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u8>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26usize%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/pow.rs.html#100\">source</a><a href=\"#impl-Pow%3C%26usize%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html\" title=\"trait namada_sdk::masp_primitives::num_traits::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/pow.rs.html#100\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/pow.rs.html#100\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a usize>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu16%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/pow.rs.html#98\">source</a><a href=\"#impl-Pow%3Cu16%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html\" title=\"trait namada_sdk::masp_primitives::num_traits::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/pow.rs.html#98\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/pow.rs.html#98\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u16>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu32%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/pow.rs.html#99\">source</a><a href=\"#impl-Pow%3Cu32%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html\" title=\"trait namada_sdk::masp_primitives::num_traits::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/pow.rs.html#99\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/pow.rs.html#99\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u32>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu8%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/pow.rs.html#97\">source</a><a href=\"#impl-Pow%3Cu8%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html\" title=\"trait namada_sdk::masp_primitives::num_traits::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/pow.rs.html#97\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/pow.rs.html#97\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u8>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cusize%3E-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/pow.rs.html#100\">source</a><a href=\"#impl-Pow%3Cusize%3E-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html\" title=\"trait namada_sdk::masp_primitives::num_traits::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/pow.rs.html#100\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/pow.rs.html#100\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"namada_sdk/masp_primitives/num_traits/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<usize>","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PrimInt-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/int.rs.html#505\">source</a><a href=\"#impl-PrimInt-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html\" title=\"trait namada_sdk::masp_primitives::num_traits::PrimInt\">PrimInt</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/int.rs.html#505\">source</a><a href=\"#method.count_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of ones in the binary representation of <code>self</code>. <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.count_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/int.rs.html#505\">source</a><a href=\"#method.count_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.count_zeros\" class=\"fn\">count_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of zeros in the binary representation of <code>self</code>. <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.count_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/int.rs.html#505\">source</a><a href=\"#method.leading_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#method.leading_ones\" class=\"fn\">leading_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of leading ones in the binary representation\nof <code>self</code>. <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#method.leading_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/int.rs.html#505\">source</a><a href=\"#method.leading_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of leading zeros in the binary representation\nof <code>self</code>. <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.leading_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/int.rs.html#505\">source</a><a href=\"#method.trailing_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#method.trailing_ones\" class=\"fn\">trailing_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of trailing ones in the binary representation\nof <code>self</code>. <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#method.trailing_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/int.rs.html#505\">source</a><a href=\"#method.trailing_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of trailing zeros in the binary representation\nof <code>self</code>. <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.trailing_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_left\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/int.rs.html#505\">source</a><a href=\"#method.rotate_left\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.rotate_left\" class=\"fn\">rotate_left</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, wrapping\nthe truncated bits to the end of the resulting integer. <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.rotate_left\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_right\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/int.rs.html#505\">source</a><a href=\"#method.rotate_right\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.rotate_right\" class=\"fn\">rotate_right</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, wrapping\nthe truncated bits to the beginning of the resulting integer. <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.rotate_right\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signed_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/int.rs.html#505\">source</a><a href=\"#method.signed_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.signed_shl\" class=\"fn\">signed_shl</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, filling\nzeros in the least significant bits. <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.signed_shl\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signed_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/int.rs.html#505\">source</a><a href=\"#method.signed_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.signed_shr\" class=\"fn\">signed_shr</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, copying\nthe “sign bit” in the most significant bits even for unsigned types. <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.signed_shr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unsigned_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/int.rs.html#505\">source</a><a href=\"#method.unsigned_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.unsigned_shl\" class=\"fn\">unsigned_shl</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, filling\nzeros in the least significant bits. <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.unsigned_shl\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unsigned_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/int.rs.html#505\">source</a><a href=\"#method.unsigned_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.unsigned_shr\" class=\"fn\">unsigned_shr</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, filling\nzeros in the most significant bits. <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.unsigned_shr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/int.rs.html#505\">source</a><a href=\"#method.swap_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.swap_bytes\" class=\"fn\">swap_bytes</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Reverses the byte order of the integer. <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.swap_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse_bits\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/int.rs.html#505\">source</a><a href=\"#method.reverse_bits\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#method.reverse_bits\" class=\"fn\">reverse_bits</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Reverses the order of bits in the integer. <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#method.reverse_bits\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/int.rs.html#505\">source</a><a href=\"#method.from_be\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.from_be\" class=\"fn\">from_be</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Convert an integer from big endian to the target’s endianness. <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.from_be\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/int.rs.html#505\">source</a><a href=\"#method.from_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.from_le\" class=\"fn\">from_le</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Convert an integer from little endian to the target’s endianness. <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.from_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/int.rs.html#505\">source</a><a href=\"#method.to_be\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.to_be\" class=\"fn\">to_be</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Convert <code>self</code> to big endian from the target’s endianness. <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.to_be\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/int.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.to_le\" class=\"fn\">to_le</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Convert <code>self</code> to little endian from the target’s endianness. <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.to_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/int.rs.html#505\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.pow\" class=\"fn\">pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Raises self to the power of <code>exp</code>, using exponentiation by squaring. <a href=\"namada_sdk/masp_primitives/num_traits/trait.PrimInt.html#tymethod.pow\">Read more</a></div></details></div></details>","PrimInt","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Saturating-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/saturating.rs.html#29\">source</a><a href=\"#impl-Saturating-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.Saturating.html\" title=\"trait namada_sdk::masp_primitives::num_traits::Saturating\">Saturating</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/saturating.rs.html#29\">source</a><a href=\"#method.saturating_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.Saturating.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/saturating.rs.html#29\">source</a><a href=\"#method.saturating_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.Saturating.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.</div></details></div></details>","Saturating","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingAdd-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/saturating.rs.html#60\">source</a><a href=\"#impl-SaturatingAdd-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.SaturatingAdd.html\" title=\"trait namada_sdk::masp_primitives::num_traits::SaturatingAdd\">SaturatingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/saturating.rs.html#60\">source</a><a href=\"#method.saturating_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.SaturatingAdd.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Saturating addition. Computes <code>self + other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingAdd","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingMul-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/saturating.rs.html#102\">source</a><a href=\"#impl-SaturatingMul-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.SaturatingMul.html\" title=\"trait namada_sdk::masp_primitives::num_traits::SaturatingMul\">SaturatingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/saturating.rs.html#102\">source</a><a href=\"#method.saturating_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.SaturatingMul.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Saturating multiplication. Computes <code>self * other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingMul","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingSub-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/saturating.rs.html#81\">source</a><a href=\"#impl-SaturatingSub-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.SaturatingSub.html\" title=\"trait namada_sdk::masp_primitives::num_traits::SaturatingSub\">SaturatingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/saturating.rs.html#81\">source</a><a href=\"#method.saturating_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.SaturatingSub.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Saturating subtraction. Computes <code>self - other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingSub","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Signed-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/sign.rs.html#75\">source</a><a href=\"#impl-Signed-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.Signed.html\" title=\"trait namada_sdk::masp_primitives::num_traits::Signed\">Signed</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/sign.rs.html#75\">source</a><a href=\"#method.abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.Signed.html#tymethod.abs\" class=\"fn\">abs</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Computes the absolute value. <a href=\"namada_sdk/masp_primitives/num_traits/trait.Signed.html#tymethod.abs\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/sign.rs.html#75\">source</a><a href=\"#method.abs_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.Signed.html#tymethod.abs_sub\" class=\"fn\">abs_sub</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>The positive difference of two numbers. <a href=\"namada_sdk/masp_primitives/num_traits/trait.Signed.html#tymethod.abs_sub\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/sign.rs.html#75\">source</a><a href=\"#method.signum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.Signed.html#tymethod.signum\" class=\"fn\">signum</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Returns the sign of the number. <a href=\"namada_sdk/masp_primitives/num_traits/trait.Signed.html#tymethod.signum\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_positive\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/sign.rs.html#75\">source</a><a href=\"#method.is_positive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.Signed.html#tymethod.is_positive\" class=\"fn\">is_positive</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if the number is positive and false if the number is zero or negative.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_negative\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/sign.rs.html#75\">source</a><a href=\"#method.is_negative\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.Signed.html#tymethod.is_negative\" class=\"fn\">is_negative</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if the number is negative and false if the number is zero or positive.</div></details></div></details>","Signed","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToBytes-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/bytes.rs.html#248\">source</a><a href=\"#impl-ToBytes-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.ToBytes.html\" title=\"trait namada_sdk::masp_primitives::num_traits::ToBytes\">ToBytes</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/bytes.rs.html#248\">source</a><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"namada_sdk/masp_primitives/num_traits/trait.ToBytes.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">8</a>]</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/bytes.rs.html#248\">source</a><a href=\"#method.to_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.ToBytes.html#tymethod.to_be_bytes\" class=\"fn\">to_be_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a> as <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.ToBytes.html\" title=\"trait namada_sdk::masp_primitives::num_traits::ToBytes\">ToBytes</a>&gt;::<a class=\"associatedtype\" href=\"namada_sdk/masp_primitives/num_traits/trait.ToBytes.html#associatedtype.Bytes\" title=\"type namada_sdk::masp_primitives::num_traits::ToBytes::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in big-endian byte order. <a href=\"namada_sdk/masp_primitives/num_traits/trait.ToBytes.html#tymethod.to_be_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/bytes.rs.html#248\">source</a><a href=\"#method.to_le_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.ToBytes.html#tymethod.to_le_bytes\" class=\"fn\">to_le_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a> as <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.ToBytes.html\" title=\"trait namada_sdk::masp_primitives::num_traits::ToBytes\">ToBytes</a>&gt;::<a class=\"associatedtype\" href=\"namada_sdk/masp_primitives/num_traits/trait.ToBytes.html#associatedtype.Bytes\" title=\"type namada_sdk::masp_primitives::num_traits::ToBytes::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in little-endian byte order. <a href=\"namada_sdk/masp_primitives/num_traits/trait.ToBytes.html#tymethod.to_le_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ne_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/bytes.rs.html#248\">source</a><a href=\"#method.to_ne_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.ToBytes.html#method.to_ne_bytes\" class=\"fn\">to_ne_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a> as <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.ToBytes.html\" title=\"trait namada_sdk::masp_primitives::num_traits::ToBytes\">ToBytes</a>&gt;::<a class=\"associatedtype\" href=\"namada_sdk/masp_primitives/num_traits/trait.ToBytes.html#associatedtype.Bytes\" title=\"type namada_sdk::masp_primitives::num_traits::ToBytes::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in native byte order. <a href=\"namada_sdk/masp_primitives/num_traits/trait.ToBytes.html#method.to_ne_bytes\">Read more</a></div></details></div></details>","ToBytes","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToPrimitive-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#196\">source</a><a href=\"#impl-ToPrimitive-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.ToPrimitive.html\" title=\"trait namada_sdk::masp_primitives::num_traits::ToPrimitive\">ToPrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#196\">source</a><a href=\"#method.to_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.ToPrimitive.html#method.to_isize\" class=\"fn\">to_isize</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>isize</code>. If the value cannot be\nrepresented by an <code>isize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#196\">source</a><a href=\"#method.to_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.ToPrimitive.html#method.to_i8\" class=\"fn\">to_i8</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be\nrepresented by an <code>i8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#196\">source</a><a href=\"#method.to_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.ToPrimitive.html#method.to_i16\" class=\"fn\">to_i16</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot be\nrepresented by an <code>i16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#196\">source</a><a href=\"#method.to_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.ToPrimitive.html#method.to_i32\" class=\"fn\">to_i32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot be\nrepresented by an <code>i32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#196\">source</a><a href=\"#method.to_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.ToPrimitive.html#tymethod.to_i64\" class=\"fn\">to_i64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot be\nrepresented by an <code>i64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#196\">source</a><a href=\"#method.to_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.ToPrimitive.html#method.to_i128\" class=\"fn\">to_i128</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot be\nrepresented by an <code>i128</code> (<code>i64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"namada_sdk/masp_primitives/num_traits/trait.ToPrimitive.html#method.to_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#196\">source</a><a href=\"#method.to_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.ToPrimitive.html#method.to_usize\" class=\"fn\">to_usize</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot be\nrepresented by a <code>usize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#196\">source</a><a href=\"#method.to_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.ToPrimitive.html#method.to_u8\" class=\"fn\">to_u8</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be\nrepresented by a <code>u8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#196\">source</a><a href=\"#method.to_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.ToPrimitive.html#method.to_u16\" class=\"fn\">to_u16</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be\nrepresented by a <code>u16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#196\">source</a><a href=\"#method.to_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.ToPrimitive.html#method.to_u32\" class=\"fn\">to_u32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be\nrepresented by a <code>u32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#196\">source</a><a href=\"#method.to_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.ToPrimitive.html#tymethod.to_u64\" class=\"fn\">to_u64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be\nrepresented by a <code>u64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#196\">source</a><a href=\"#method.to_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.ToPrimitive.html#method.to_u128\" class=\"fn\">to_u128</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot be\nrepresented by a <code>u128</code> (<code>u64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"namada_sdk/masp_primitives/num_traits/trait.ToPrimitive.html#method.to_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#196\">source</a><a href=\"#method.to_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.ToPrimitive.html#method.to_f32\" class=\"fn\">to_f32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f32</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/cast.rs.html#196\">source</a><a href=\"#method.to_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.ToPrimitive.html#method.to_f64\" class=\"fn\">to_f64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f64</code>. <a href=\"namada_sdk/masp_primitives/num_traits/trait.ToPrimitive.html#method.to_f64\">Read more</a></div></details></div></details>","ToPrimitive","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperExp-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.42.0\">1.42.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#542-545\">source</a></span><a href=\"#impl-UpperExp-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/tendermint/consensus/state/fmt/trait.UpperExp.html\" title=\"trait namada_sdk::tendermint::consensus::state::fmt::UpperExp\">UpperExp</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#542-545\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/tendermint/consensus/state/fmt/trait.UpperExp.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"namada_sdk/tendermint/consensus/state/fmt/struct.Formatter.html\" title=\"struct namada_sdk::tendermint::consensus::state::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"namada_sdk/tendermint/consensus/state/fmt/struct.Error.html\" title=\"struct namada_sdk::tendermint::consensus::state::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"namada_sdk/tendermint/consensus/state/fmt/trait.UpperExp.html#tymethod.fmt\">Read more</a></div></details></div></details>","UpperExp","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#179\">source</a></span><a href=\"#impl-UpperHex-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/tendermint/consensus/state/fmt/trait.UpperHex.html\" title=\"trait namada_sdk::tendermint::consensus::state::fmt::UpperHex\">UpperHex</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#179\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/tendermint/consensus/state/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"namada_sdk/tendermint/consensus/state/fmt/struct.Formatter.html\" title=\"struct namada_sdk::tendermint::consensus::state::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"namada_sdk/tendermint/consensus/state/fmt/struct.Error.html\" title=\"struct namada_sdk::tendermint::consensus::state::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"namada_sdk/tendermint/consensus/state/fmt/trait.UpperHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","UpperHex","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingAdd-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/wrapping.rs.html#40\">source</a><a href=\"#impl-WrappingAdd-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.WrappingAdd.html\" title=\"trait namada_sdk::masp_primitives::num_traits::WrappingAdd\">WrappingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/wrapping.rs.html#40\">source</a><a href=\"#method.wrapping_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.WrappingAdd.html#tymethod.wrapping_add\" class=\"fn\">wrapping_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Wrapping (modular) addition. Computes <code>self + other</code>, wrapping around at the boundary of\nthe type.</div></details></div></details>","WrappingAdd","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingMul-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/wrapping.rs.html#82\">source</a><a href=\"#impl-WrappingMul-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.WrappingMul.html\" title=\"trait namada_sdk::masp_primitives::num_traits::WrappingMul\">WrappingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/wrapping.rs.html#82\">source</a><a href=\"#method.wrapping_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.WrappingMul.html#tymethod.wrapping_mul\" class=\"fn\">wrapping_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Wrapping (modular) multiplication. Computes <code>self * other</code>, wrapping around at the boundary\nof the type.</div></details></div></details>","WrappingMul","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingNeg-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/wrapping.rs.html#128\">source</a><a href=\"#impl-WrappingNeg-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.WrappingNeg.html\" title=\"trait namada_sdk::masp_primitives::num_traits::WrappingNeg\">WrappingNeg</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/wrapping.rs.html#128\">source</a><a href=\"#method.wrapping_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.WrappingNeg.html#tymethod.wrapping_neg\" class=\"fn\">wrapping_neg</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Wrapping (modular) negation. Computes <code>-self</code>,\nwrapping around at the boundary of the type. <a href=\"namada_sdk/masp_primitives/num_traits/trait.WrappingNeg.html#tymethod.wrapping_neg\">Read more</a></div></details></div></details>","WrappingNeg","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingShl-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/wrapping.rs.html#172\">source</a><a href=\"#impl-WrappingShl-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.WrappingShl.html\" title=\"trait namada_sdk::masp_primitives::num_traits::WrappingShl\">WrappingShl</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/wrapping.rs.html#172\">source</a><a href=\"#method.wrapping_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.WrappingShl.html#tymethod.wrapping_shl\" class=\"fn\">wrapping_shl</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high order bits of <code>rhs</code> that would\ncause the shift to exceed the bitwidth of the type. <a href=\"namada_sdk/masp_primitives/num_traits/trait.WrappingShl.html#tymethod.wrapping_shl\">Read more</a></div></details></div></details>","WrappingShl","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingShr-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/wrapping.rs.html#205\">source</a><a href=\"#impl-WrappingShr-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.WrappingShr.html\" title=\"trait namada_sdk::masp_primitives::num_traits::WrappingShr\">WrappingShr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/wrapping.rs.html#205\">source</a><a href=\"#method.wrapping_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.WrappingShr.html#tymethod.wrapping_shr\" class=\"fn\">wrapping_shr</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high order bits of <code>rhs</code> that would\ncause the shift to exceed the bitwidth of the type. <a href=\"namada_sdk/masp_primitives/num_traits/trait.WrappingShr.html#tymethod.wrapping_shr\">Read more</a></div></details></div></details>","WrappingShr","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingSub-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/wrapping.rs.html#61\">source</a><a href=\"#impl-WrappingSub-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.WrappingSub.html\" title=\"trait namada_sdk::masp_primitives::num_traits::WrappingSub\">WrappingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/ops/wrapping.rs.html#61\">source</a><a href=\"#method.wrapping_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.WrappingSub.html#tymethod.wrapping_sub\" class=\"fn\">wrapping_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Wrapping (modular) subtraction. Computes <code>self - other</code>, wrapping around at the boundary\nof the type.</div></details></div></details>","WrappingSub","namada_sdk::borsh::schema::DiscriminantValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/identities.rs.html#68\">source</a><a href=\"#impl-Zero-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_sdk/masp_primitives/num_traits/trait.Zero.html\" title=\"trait namada_sdk::masp_primitives::num_traits::Zero\">Zero</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/identities.rs.html#68\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Returns the additive identity element of <code>Self</code>, <code>0</code>. <a href=\"namada_sdk/masp_primitives/num_traits/trait.Zero.html#tymethod.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/identities.rs.html#68\">source</a><a href=\"#method.is_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.Zero.html#tymethod.is_zero\" class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the additive identity.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nam_num_traits/identities.rs.html#23\">source</a><a href=\"#method.set_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_sdk/masp_primitives/num_traits/trait.Zero.html#method.set_zero\" class=\"fn\">set_zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.</div></details></div></details>","Zero","namada_sdk::borsh::schema::DiscriminantValue"]]],["rustix",[]],["serde",[]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[7288,112438,204941,14,13]}