(function() {
    var type_impls = Object.fromEntries([["masp_proofs",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/mod.rs.html#4827\">source</a></span><a href=\"#impl-Default-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/mod.rs.html#4829\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Creates an empty slice.</p>\n</div></details></div></details>","Default","masp_proofs::constants::FixedGenerator"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/iter.rs.html#21\">source</a></span><a href=\"#impl-IntoIterator-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/iter.rs.html#22\">source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a></h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/iter.rs.html#23\">source</a><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/iter.rs.html#25\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","masp_proofs::constants::FixedGenerator"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5BU;+N%5D%3E-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/array/equality.rs.html#80-82\">source</a></span><a href=\"#impl-PartialEq%3C%5BU;+N%5D%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[U; N]</a>&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;U&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/array/equality.rs.html#85\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[U; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/array/equality.rs.html#89\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[U; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<[U; N]>","masp_proofs::constants::FixedGenerator"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/vec/partial_eq.rs.html#25\">source</a></span><a href=\"#impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U, A&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;U&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/vec/partial_eq.rs.html#25\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/vec/partial_eq.rs.html#25\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Vec<U, A>>","masp_proofs::constants::FixedGenerator"]]],["namada_merkle_tree",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arg-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustix/path/arg.rs.html#860\">source</a><a href=\"#impl-Arg-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustix/path/arg/trait.Arg.html\" title=\"trait rustix::path::arg::Arg\">Arg</a> for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustix/path/arg.rs.html#862\">source</a><a href=\"#method.as_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustix/path/arg/trait.Arg.html#tymethod.as_str\" class=\"fn\">as_str</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, <a class=\"struct\" href=\"rustix/backend/io/errno/struct.Errno.html\" title=\"struct rustix::backend::io::errno::Errno\">Errno</a>&gt;</h4></section></summary><div class='docblock'>Returns a view of this string as a string slice.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_string_lossy\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustix/path/arg.rs.html#868\">source</a><a href=\"#method.to_string_lossy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustix/path/arg/trait.Arg.html#tymethod.to_string_lossy\" class=\"fn\">to_string_lossy</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns a potentially-lossy rendering of this string as a\n<code>Cow&lt;'_, str&gt;</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_cow_c_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustix/path/arg.rs.html#874\">source</a><a href=\"#method.as_cow_c_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustix/path/arg/trait.Arg.html#tymethod.as_cow_c_str\" class=\"fn\">as_cow_c_str</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'_, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ffi/c_str/struct.CStr.html\" title=\"struct core::ffi::c_str::CStr\">CStr</a>&gt;, <a class=\"struct\" href=\"rustix/backend/io/errno/struct.Errno.html\" title=\"struct rustix::backend::io::errno::Errno\">Errno</a>&gt;</h4></section></summary><div class='docblock'>Returns a view of this string as a maybe-owned <a href=\"https://doc.rust-lang.org/nightly/core/ffi/c_str/struct.CStr.html\" title=\"struct core::ffi::c_str::CStr\"><code>CStr</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_c_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustix/path/arg.rs.html#882-884\">source</a><a href=\"#method.into_c_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustix/path/arg/trait.Arg.html#tymethod.into_c_str\" class=\"fn\">into_c_str</a>&lt;'b&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'b, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ffi/c_str/struct.CStr.html\" title=\"struct core::ffi::c_str::CStr\">CStr</a>&gt;, <a class=\"struct\" href=\"rustix/backend/io/errno/struct.Errno.html\" title=\"struct rustix::backend::io::errno::Errno\">Errno</a>&gt;<div class=\"where\">where\n    &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]: 'b,</div></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns a view of this string as a maybe-owned\n<a href=\"https://doc.rust-lang.org/nightly/core/ffi/c_str/struct.CStr.html\" title=\"struct core::ffi::c_str::CStr\"><code>CStr</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_with_c_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustix/path/arg.rs.html#892-895\">source</a><a href=\"#method.into_with_c_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustix/path/arg/trait.Arg.html#tymethod.into_with_c_str\" class=\"fn\">into_with_c_str</a>&lt;T, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, <a class=\"struct\" href=\"rustix/backend/io/errno/struct.Errno.html\" title=\"struct rustix::backend::io::errno::Errno\">Errno</a>&gt;<div class=\"where\">where\n    &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ffi/c_str/struct.CStr.html\" title=\"struct core::ffi::c_str::CStr\">CStr</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, <a class=\"struct\" href=\"rustix/backend/io/errno/struct.Errno.html\" title=\"struct rustix::backend::io::errno::Errno\">Errno</a>&gt;,</div></h4></section></summary><div class='docblock'>Runs a closure with <code>self</code> passed in as a <code>&amp;CStr</code>.</div></details></div></details>","Arg","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsBStr-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#822\">source</a><a href=\"#impl-AsBStr-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"winnow/stream/trait.AsBStr.html\" title=\"trait winnow::stream::AsBStr\">AsBStr</a> for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bstr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#824\">source</a><a href=\"#method.as_bstr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.AsBStr.html#tymethod.as_bstr\" class=\"fn\">as_bstr</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Casts the input type to a byte slice</div></details></div></details>","AsBStr","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsBytes-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#809\">source</a><a href=\"#impl-AsBytes-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"winnow/stream/trait.AsBytes.html\" title=\"trait winnow::stream::AsBytes\">AsBytes</a> for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#811\">source</a><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.AsBytes.html#tymethod.as_bytes\" class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Casts the input type to a byte slice</div></details></div></details>","AsBytes","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CZeroSlice%3CT%3E%3E-for-%26%5B%3CT+as+AsULE%3E::ULE%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerovec/zerovec/slice.rs.html#552\">source</a><a href=\"#impl-AsRef%3CZeroSlice%3CT%3E%3E-for-%26%5B%3CT+as+AsULE%3E::ULE%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"zerovec/zerovec/slice/struct.ZeroSlice.html\" title=\"struct zerovec::zerovec::slice::ZeroSlice\">ZeroSlice</a>&lt;T&gt;&gt; for &amp;[&lt;T as <a class=\"trait\" href=\"zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a>&gt;::<a class=\"associatedtype\" href=\"zerovec/ule/trait.AsULE.html#associatedtype.ULE\" title=\"type zerovec::ule::AsULE::ULE\">ULE</a>]<div class=\"where\">where\n    T: <a class=\"trait\" href=\"zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerovec/zerovec/slice.rs.html#553\">source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"zerovec/zerovec/slice/struct.ZeroSlice.html\" title=\"struct zerovec::zerovec::slice::ZeroSlice\">ZeroSlice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<ZeroSlice<T>>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncBufRead-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_io/lib.rs.html#555\">source</a><a href=\"#impl-AsyncBufRead-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncBufRead.html\" title=\"trait futures_io::if_std::AsyncBufRead\">AsyncBufRead</a> for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_fill_buf\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_io/lib.rs.html#556\">source</a><a href=\"#method.poll_fill_buf\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"futures_io/if_std/trait.AsyncBufRead.html#tymethod.poll_fill_buf\" class=\"fn\">poll_fill_buf</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;,\n    _: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to return the contents of the internal buffer, filling it with more data\nfrom the inner reader if it is empty. <a href=\"futures_io/if_std/trait.AsyncBufRead.html#tymethod.poll_fill_buf\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.consume\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_io/lib.rs.html#556\">source</a><a href=\"#method.consume\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"futures_io/if_std/trait.AsyncBufRead.html#tymethod.consume\" class=\"fn\">consume</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;, amt: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Tells this buffer that <code>amt</code> bytes have been consumed from the buffer,\nso they should no longer be returned in calls to <a href=\"futures_io/if_std/trait.AsyncRead.html#tymethod.poll_read\" title=\"method futures_io::if_std::AsyncRead::poll_read\"><code>poll_read</code></a>. <a href=\"futures_io/if_std/trait.AsyncBufRead.html#tymethod.consume\">Read more</a></div></details></div></details>","AsyncBufRead","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncBufRead-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/tokio/io/async_buf_read.rs.html#99\">source</a><a href=\"#impl-AsyncBufRead-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"tokio/io/async_buf_read/trait.AsyncBufRead.html\" title=\"trait tokio::io::async_buf_read::AsyncBufRead\">AsyncBufRead</a> for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_fill_buf\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tokio/io/async_buf_read.rs.html#100\">source</a><a href=\"#method.poll_fill_buf\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"tokio/io/async_buf_read/trait.AsyncBufRead.html#tymethod.poll_fill_buf\" class=\"fn\">poll_fill_buf</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;,\n    _cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempts to return the contents of the internal buffer, filling it with more data\nfrom the inner reader if it is empty. <a href=\"tokio/io/async_buf_read/trait.AsyncBufRead.html#tymethod.poll_fill_buf\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.consume\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tokio/io/async_buf_read.rs.html#104\">source</a><a href=\"#method.consume\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"tokio/io/async_buf_read/trait.AsyncBufRead.html#tymethod.consume\" class=\"fn\">consume</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;, amt: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Tells this buffer that <code>amt</code> bytes have been consumed from the buffer,\nso they should no longer be returned in calls to <a href=\"tokio/io/async_read/trait.AsyncRead.html#tymethod.poll_read\" title=\"method tokio::io::async_read::AsyncRead::poll_read\"><code>poll_read</code></a>. <a href=\"tokio/io/async_buf_read/trait.AsyncBufRead.html#tymethod.consume\">Read more</a></div></details></div></details>","AsyncBufRead","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncRead-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_io/lib.rs.html#373\">source</a><a href=\"#impl-AsyncRead-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncRead.html\" title=\"trait futures_io::if_std::AsyncRead\">AsyncRead</a> for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_io/lib.rs.html#374\">source</a><a href=\"#method.poll_read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"futures_io/if_std/trait.AsyncRead.html#tymethod.poll_read\" class=\"fn\">poll_read</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;,\n    _: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n    buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to read from the <code>AsyncRead</code> into <code>buf</code>. <a href=\"futures_io/if_std/trait.AsyncRead.html#tymethod.poll_read\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_read_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_io/lib.rs.html#374\">source</a><a href=\"#method.poll_read_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"futures_io/if_std/trait.AsyncRead.html#method.poll_read_vectored\" class=\"fn\">poll_read_vectored</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;,\n    _: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n    bufs: &amp;mut [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/struct.IoSliceMut.html\" title=\"struct std::io::IoSliceMut\">IoSliceMut</a>&lt;'_&gt;],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored\nIO operations. <a href=\"futures_io/if_std/trait.AsyncRead.html#method.poll_read_vectored\">Read more</a></div></details></div></details>","AsyncRead","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncRead-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/tokio/io/async_read.rs.html#95\">source</a><a href=\"#impl-AsyncRead-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"tokio/io/async_read/trait.AsyncRead.html\" title=\"trait tokio::io::async_read::AsyncRead\">AsyncRead</a> for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tokio/io/async_read.rs.html#96-100\">source</a><a href=\"#method.poll_read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"tokio/io/async_read/trait.AsyncRead.html#tymethod.poll_read\" class=\"fn\">poll_read</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;,\n    _cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n    buf: &amp;mut <a class=\"struct\" href=\"tokio/io/read_buf/struct.ReadBuf.html\" title=\"struct tokio::io::read_buf::ReadBuf\">ReadBuf</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempts to read from the <code>AsyncRead</code> into <code>buf</code>. <a href=\"tokio/io/async_read/trait.AsyncRead.html#tymethod.poll_read\">Read more</a></div></details></div></details>","AsyncRead","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BatchInvert%3C%5BT%5D%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/ops.rs.html#71-77\">source</a><a href=\"#impl-BatchInvert%3C%5BT%5D%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"elliptic_curve/ops/trait.BatchInvert.html\" title=\"trait elliptic_curve::ops::BatchInvert\">BatchInvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>&gt; for T<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"elliptic_curve/ops/trait.Invert.html\" title=\"trait elliptic_curve::ops::Invert\">Invert</a>&lt;Output = <a class=\"struct\" href=\"subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;T&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"subtle/trait.ConditionallySelectable.html\" title=\"trait subtle::ConditionallySelectable\">ConditionallySelectable</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/ops.rs.html#79\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"elliptic_curve/ops/trait.BatchInvert.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The output of batch inversion. A container of field elements.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.batch_invert\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/ops.rs.html#81\">source</a><a href=\"#method.batch_invert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"elliptic_curve/ops/trait.BatchInvert.html#tymethod.batch_invert\" class=\"fn\">batch_invert</a>(field_elements: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>) -&gt; <a class=\"struct\" href=\"subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Invert a batch of field elements.</div></details></div></details>","BatchInvert<[T]>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Buf-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#2889\">source</a><a href=\"#impl-Buf-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bytes/buf/buf_impl/trait.Buf.html\" title=\"trait bytes::buf::buf_impl::Buf\">Buf</a> for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.remaining\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#2891\">source</a><a href=\"#method.remaining\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#tymethod.remaining\" class=\"fn\">remaining</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the number of bytes between the current position and the end of\nthe buffer. <a href=\"bytes/buf/buf_impl/trait.Buf.html#tymethod.remaining\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chunk\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#2896\">source</a><a href=\"#method.chunk\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#tymethod.chunk\" class=\"fn\">chunk</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Returns a slice starting at the current position and of length between 0\nand <code>Buf::remaining()</code>. Note that this <em>can</em> return a shorter slice (this\nallows non-continuous internal representation). <a href=\"bytes/buf/buf_impl/trait.Buf.html#tymethod.chunk\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.advance\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#2901\">source</a><a href=\"#method.advance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#tymethod.advance\" class=\"fn\">advance</a>(&amp;mut self, cnt: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Advance the internal cursor of the Buf <a href=\"bytes/buf/buf_impl/trait.Buf.html#tymethod.advance\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copy_to_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#2913\">source</a><a href=\"#method.copy_to_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.copy_to_slice\" class=\"fn\">copy_to_slice</a>(&amp;mut self, dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Copies bytes from <code>self</code> into <code>dst</code>. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.copy_to_slice\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chunks_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#207\">source</a><a href=\"#method.chunks_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.chunks_vectored\" class=\"fn\">chunks_vectored</a>&lt;'a&gt;(&amp;'a self, dst: &amp;mut [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/struct.IoSlice.html\" title=\"struct std::io::IoSlice\">IoSlice</a>&lt;'a&gt;]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Fills <code>dst</code> with potentially multiple slices starting at <code>self</code>’s\ncurrent position. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.chunks_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_remaining\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#269\">source</a><a href=\"#method.has_remaining\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.has_remaining\" class=\"fn\">has_remaining</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if there are any more bytes to consume <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.has_remaining\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#315\">source</a><a href=\"#method.get_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_u8\" class=\"fn\">get_u8</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Gets an unsigned 8 bit integer from <code>self</code>. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_u8\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#343\">source</a><a href=\"#method.get_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_i8\" class=\"fn\">get_i8</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Gets a signed 8 bit integer from <code>self</code>. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_i8\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#371\">source</a><a href=\"#method.get_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_u16\" class=\"fn\">get_u16</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Gets an unsigned 16 bit integer from <code>self</code> in big-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_u16\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u16_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#391\">source</a><a href=\"#method.get_u16_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_u16_le\" class=\"fn\">get_u16_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Gets an unsigned 16 bit integer from <code>self</code> in little-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_u16_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u16_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#414\">source</a><a href=\"#method.get_u16_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_u16_ne\" class=\"fn\">get_u16_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Gets an unsigned 16 bit integer from <code>self</code> in native-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_u16_ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#434\">source</a><a href=\"#method.get_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_i16\" class=\"fn\">get_i16</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Gets a signed 16 bit integer from <code>self</code> in big-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_i16\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i16_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#454\">source</a><a href=\"#method.get_i16_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_i16_le\" class=\"fn\">get_i16_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Gets a signed 16 bit integer from <code>self</code> in little-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_i16_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i16_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#477\">source</a><a href=\"#method.get_i16_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_i16_ne\" class=\"fn\">get_i16_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Gets a signed 16 bit integer from <code>self</code> in native-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_i16_ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#497\">source</a><a href=\"#method.get_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_u32\" class=\"fn\">get_u32</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Gets an unsigned 32 bit integer from <code>self</code> in the big-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_u32\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u32_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#517\">source</a><a href=\"#method.get_u32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_u32_le\" class=\"fn\">get_u32_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Gets an unsigned 32 bit integer from <code>self</code> in the little-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_u32_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u32_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#540\">source</a><a href=\"#method.get_u32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_u32_ne\" class=\"fn\">get_u32_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Gets an unsigned 32 bit integer from <code>self</code> in native-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_u32_ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#560\">source</a><a href=\"#method.get_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_i32\" class=\"fn\">get_i32</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Gets a signed 32 bit integer from <code>self</code> in big-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_i32\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i32_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#580\">source</a><a href=\"#method.get_i32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_i32_le\" class=\"fn\">get_i32_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Gets a signed 32 bit integer from <code>self</code> in little-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_i32_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i32_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#603\">source</a><a href=\"#method.get_i32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_i32_ne\" class=\"fn\">get_i32_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Gets a signed 32 bit integer from <code>self</code> in native-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_i32_ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#623\">source</a><a href=\"#method.get_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_u64\" class=\"fn\">get_u64</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Gets an unsigned 64 bit integer from <code>self</code> in big-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_u64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u64_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#643\">source</a><a href=\"#method.get_u64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_u64_le\" class=\"fn\">get_u64_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Gets an unsigned 64 bit integer from <code>self</code> in little-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_u64_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u64_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#666\">source</a><a href=\"#method.get_u64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_u64_ne\" class=\"fn\">get_u64_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Gets an unsigned 64 bit integer from <code>self</code> in native-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_u64_ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#686\">source</a><a href=\"#method.get_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_i64\" class=\"fn\">get_i64</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Gets a signed 64 bit integer from <code>self</code> in big-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_i64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i64_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#706\">source</a><a href=\"#method.get_i64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_i64_le\" class=\"fn\">get_i64_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Gets a signed 64 bit integer from <code>self</code> in little-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_i64_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i64_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#729\">source</a><a href=\"#method.get_i64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_i64_ne\" class=\"fn\">get_i64_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Gets a signed 64 bit integer from <code>self</code> in native-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_i64_ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#749\">source</a><a href=\"#method.get_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_u128\" class=\"fn\">get_u128</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Gets an unsigned 128 bit integer from <code>self</code> in big-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u128_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#769\">source</a><a href=\"#method.get_u128_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_u128_le\" class=\"fn\">get_u128_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Gets an unsigned 128 bit integer from <code>self</code> in little-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_u128_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u128_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#792\">source</a><a href=\"#method.get_u128_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_u128_ne\" class=\"fn\">get_u128_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Gets an unsigned 128 bit integer from <code>self</code> in native-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_u128_ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#812\">source</a><a href=\"#method.get_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_i128\" class=\"fn\">get_i128</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Gets a signed 128 bit integer from <code>self</code> in big-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i128_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#832\">source</a><a href=\"#method.get_i128_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_i128_le\" class=\"fn\">get_i128_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Gets a signed 128 bit integer from <code>self</code> in little-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_i128_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i128_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#855\">source</a><a href=\"#method.get_i128_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_i128_ne\" class=\"fn\">get_i128_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Gets a signed 128 bit integer from <code>self</code> in native-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_i128_ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_uint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#876\">source</a><a href=\"#method.get_uint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_uint\" class=\"fn\">get_uint</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Gets an unsigned n-byte integer from <code>self</code> in big-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_uint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_uint_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#897\">source</a><a href=\"#method.get_uint_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_uint_le\" class=\"fn\">get_uint_le</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Gets an unsigned n-byte integer from <code>self</code> in little-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_uint_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_uint_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#921\">source</a><a href=\"#method.get_uint_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_uint_ne\" class=\"fn\">get_uint_ne</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Gets an unsigned n-byte integer from <code>self</code> in native-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_uint_ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#946\">source</a><a href=\"#method.get_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_int\" class=\"fn\">get_int</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Gets a signed n-byte integer from <code>self</code> in big-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_int_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#967\">source</a><a href=\"#method.get_int_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_int_le\" class=\"fn\">get_int_le</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Gets a signed n-byte integer from <code>self</code> in little-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_int_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_int_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#991\">source</a><a href=\"#method.get_int_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_int_ne\" class=\"fn\">get_int_ne</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Gets a signed n-byte integer from <code>self</code> in native-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_int_ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1016\">source</a><a href=\"#method.get_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_f32\" class=\"fn\">get_f32</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Gets an IEEE754 single-precision (4 bytes) floating point number from\n<code>self</code> in big-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_f32\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_f32_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1037\">source</a><a href=\"#method.get_f32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_f32_le\" class=\"fn\">get_f32_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Gets an IEEE754 single-precision (4 bytes) floating point number from\n<code>self</code> in little-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_f32_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_f32_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1061\">source</a><a href=\"#method.get_f32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_f32_ne\" class=\"fn\">get_f32_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Gets an IEEE754 single-precision (4 bytes) floating point number from\n<code>self</code> in native-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_f32_ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1082\">source</a><a href=\"#method.get_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_f64\" class=\"fn\">get_f64</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Gets an IEEE754 double-precision (8 bytes) floating point number from\n<code>self</code> in big-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_f64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_f64_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1103\">source</a><a href=\"#method.get_f64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_f64_le\" class=\"fn\">get_f64_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Gets an IEEE754 double-precision (8 bytes) floating point number from\n<code>self</code> in little-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_f64_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_f64_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1127\">source</a><a href=\"#method.get_f64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_f64_ne\" class=\"fn\">get_f64_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Gets an IEEE754 double-precision (8 bytes) floating point number from\n<code>self</code> in native-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.get_f64_ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_copy_to_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1161\">source</a><a href=\"#method.try_copy_to_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_copy_to_slice\" class=\"fn\">try_copy_to_slice</a>(&amp;mut self, dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Copies bytes from <code>self</code> into <code>dst</code>. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_copy_to_slice\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1204\">source</a><a href=\"#method.try_get_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_u8\" class=\"fn\">try_get_u8</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 8 bit integer from <code>self</code>. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_u8\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1239\">source</a><a href=\"#method.try_get_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_i8\" class=\"fn\">try_get_i8</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets a signed 8 bit integer from <code>self</code>. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_i8\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1275\">source</a><a href=\"#method.try_get_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_u16\" class=\"fn\">try_get_u16</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 16 bit integer from <code>self</code> in big-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_u16\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u16_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1303\">source</a><a href=\"#method.try_get_u16_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_u16_le\" class=\"fn\">try_get_u16_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 16 bit integer from <code>self</code> in little-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_u16_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u16_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1334\">source</a><a href=\"#method.try_get_u16_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_u16_ne\" class=\"fn\">try_get_u16_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 16 bit integer from <code>self</code> in native-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_u16_ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1362\">source</a><a href=\"#method.try_get_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_i16\" class=\"fn\">try_get_i16</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets a signed 16 bit integer from <code>self</code> in big-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_i16\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i16_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1390\">source</a><a href=\"#method.try_get_i16_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_i16_le\" class=\"fn\">try_get_i16_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets an signed 16 bit integer from <code>self</code> in little-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_i16_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i16_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1421\">source</a><a href=\"#method.try_get_i16_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_i16_ne\" class=\"fn\">try_get_i16_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets a signed 16 bit integer from <code>self</code> in native-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_i16_ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1449\">source</a><a href=\"#method.try_get_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_u32\" class=\"fn\">try_get_u32</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 32 bit integer from <code>self</code> in big-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_u32\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u32_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1477\">source</a><a href=\"#method.try_get_u32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_u32_le\" class=\"fn\">try_get_u32_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 32 bit integer from <code>self</code> in little-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_u32_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u32_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1508\">source</a><a href=\"#method.try_get_u32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_u32_ne\" class=\"fn\">try_get_u32_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 32 bit integer from <code>self</code> in native-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_u32_ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1536\">source</a><a href=\"#method.try_get_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_i32\" class=\"fn\">try_get_i32</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets a signed 32 bit integer from <code>self</code> in big-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_i32\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i32_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1564\">source</a><a href=\"#method.try_get_i32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_i32_le\" class=\"fn\">try_get_i32_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets a signed 32 bit integer from <code>self</code> in little-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_i32_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i32_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1595\">source</a><a href=\"#method.try_get_i32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_i32_ne\" class=\"fn\">try_get_i32_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets a signed 32 bit integer from <code>self</code> in native-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_i32_ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1623\">source</a><a href=\"#method.try_get_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_u64\" class=\"fn\">try_get_u64</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 64 bit integer from <code>self</code> in big-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_u64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u64_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1651\">source</a><a href=\"#method.try_get_u64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_u64_le\" class=\"fn\">try_get_u64_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 64 bit integer from <code>self</code> in little-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_u64_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u64_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1682\">source</a><a href=\"#method.try_get_u64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_u64_ne\" class=\"fn\">try_get_u64_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 64 bit integer from <code>self</code> in native-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_u64_ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1710\">source</a><a href=\"#method.try_get_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_i64\" class=\"fn\">try_get_i64</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets a signed 64 bit integer from <code>self</code> in big-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_i64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i64_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1738\">source</a><a href=\"#method.try_get_i64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_i64_le\" class=\"fn\">try_get_i64_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets a signed 64 bit integer from <code>self</code> in little-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_i64_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i64_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1769\">source</a><a href=\"#method.try_get_i64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_i64_ne\" class=\"fn\">try_get_i64_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets a signed 64 bit integer from <code>self</code> in native-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_i64_ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1797\">source</a><a href=\"#method.try_get_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_u128\" class=\"fn\">try_get_u128</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 128 bit integer from <code>self</code> in big-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u128_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1825\">source</a><a href=\"#method.try_get_u128_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_u128_le\" class=\"fn\">try_get_u128_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 128 bit integer from <code>self</code> in little-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_u128_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u128_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1856\">source</a><a href=\"#method.try_get_u128_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_u128_ne\" class=\"fn\">try_get_u128_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 128 bit integer from <code>self</code> in native-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_u128_ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1884\">source</a><a href=\"#method.try_get_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_i128\" class=\"fn\">try_get_i128</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets a signed 128 bit integer from <code>self</code> in big-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i128_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1912\">source</a><a href=\"#method.try_get_i128_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_i128_le\" class=\"fn\">try_get_i128_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets a signed 128 bit integer from <code>self</code> in little-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_i128_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i128_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1943\">source</a><a href=\"#method.try_get_i128_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_i128_ne\" class=\"fn\">try_get_i128_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets a signed 128 bit integer from <code>self</code> in native-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_i128_ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_uint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#1975\">source</a><a href=\"#method.try_get_uint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_uint\" class=\"fn\">try_get_uint</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets an unsigned n-byte integer from <code>self</code> in big-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_uint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_uint_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#2007\">source</a><a href=\"#method.try_get_uint_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_uint_le\" class=\"fn\">try_get_uint_le</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets an unsigned n-byte integer from <code>self</code> in little-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_uint_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_uint_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#2045\">source</a><a href=\"#method.try_get_uint_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_uint_ne\" class=\"fn\">try_get_uint_ne</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets an unsigned n-byte integer from <code>self</code> in native-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_uint_ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#2081\">source</a><a href=\"#method.try_get_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_int\" class=\"fn\">try_get_int</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets a signed n-byte integer from <code>self</code> in big-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_int_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#2113\">source</a><a href=\"#method.try_get_int_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_int_le\" class=\"fn\">try_get_int_le</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets a signed n-byte integer from <code>self</code> in little-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_int_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_int_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#2151\">source</a><a href=\"#method.try_get_int_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_int_ne\" class=\"fn\">try_get_int_ne</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets a signed n-byte integer from <code>self</code> in native-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_int_ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#2184\">source</a><a href=\"#method.try_get_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_f32\" class=\"fn\">try_get_f32</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets an IEEE754 single-precision (4 bytes) floating point number from\n<code>self</code> in big-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_f32\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_f32_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#2213\">source</a><a href=\"#method.try_get_f32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_f32_le\" class=\"fn\">try_get_f32_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets an IEEE754 single-precision (4 bytes) floating point number from\n<code>self</code> in little-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_f32_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_f32_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#2245\">source</a><a href=\"#method.try_get_f32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_f32_ne\" class=\"fn\">try_get_f32_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets an IEEE754 single-precision (4 bytes) floating point number from\n<code>self</code> in native-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_f32_ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#2274\">source</a><a href=\"#method.try_get_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_f64\" class=\"fn\">try_get_f64</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets an IEEE754 double-precision (8 bytes) floating point number from\n<code>self</code> in big-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_f64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_f64_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#2303\">source</a><a href=\"#method.try_get_f64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_f64_le\" class=\"fn\">try_get_f64_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets an IEEE754 double-precision (8 bytes) floating point number from\n<code>self</code> in little-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_f64_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_f64_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#2335\">source</a><a href=\"#method.try_get_f64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_f64_ne\" class=\"fn\">try_get_f64_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>, <a class=\"struct\" href=\"bytes/struct.TryGetError.html\" title=\"struct bytes::TryGetError\">TryGetError</a>&gt;</h4></section></summary><div class='docblock'>Gets an IEEE754 double-precision (8 bytes) floating point number from\n<code>self</code> in native-endian byte order. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.try_get_f64_ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copy_to_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#2358\">source</a><a href=\"#method.copy_to_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.copy_to_bytes\" class=\"fn\">copy_to_bytes</a>(&amp;mut self, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"bytes/bytes/struct.Bytes.html\" title=\"struct bytes::bytes::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Consumes <code>len</code> bytes inside self and returns new instance of <code>Bytes</code>\nwith this data. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.copy_to_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#2394-2396\">source</a><a href=\"#method.take\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.take\" class=\"fn\">take</a>(self, limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"bytes/buf/take/struct.Take.html\" title=\"struct bytes::buf::take::Take\">Take</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adaptor which will read at most <code>limit</code> bytes from <code>self</code>. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.take\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#2416-2418\">source</a><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.chain\" class=\"fn\">chain</a>&lt;U&gt;(self, next: U) -&gt; <a class=\"struct\" href=\"bytes/buf/chain/struct.Chain.html\" title=\"struct bytes::buf::chain::Chain\">Chain</a>&lt;Self, U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"bytes/buf/buf_impl/trait.Buf.html\" title=\"trait bytes::buf::buf_impl::Buf\">Buf</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adaptor which will chain this buffer with another. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.chain\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reader\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/buf/buf_impl.rs.html#2448-2450\">source</a><a href=\"#method.reader\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.reader\" class=\"fn\">reader</a>(self) -&gt; <a class=\"struct\" href=\"bytes/buf/reader/struct.Reader.html\" title=\"struct bytes::buf::reader::Reader\">Reader</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adaptor which implements the <code>Read</code> trait for <code>self</code>. <a href=\"bytes/buf/buf_impl/trait.Buf.html#method.reader\">Read more</a></div></details></div></details>","Buf","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BufRead-for-%26%5Bu8%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/io/impls.rs.html#344\">source</a></span><a href=\"#impl-BufRead-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.BufRead.html\" title=\"trait std::io::BufRead\">BufRead</a> for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fill_buf\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/io/impls.rs.html#346\">source</a><a href=\"#method.fill_buf\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.BufRead.html#tymethod.fill_buf\" class=\"fn\">fill_buf</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Returns the contents of the internal buffer, filling it with more data\nfrom the inner reader if it is empty. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.BufRead.html#tymethod.fill_buf\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.consume\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/io/impls.rs.html#351\">source</a><a href=\"#method.consume\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.BufRead.html#tymethod.consume\" class=\"fn\">consume</a>(&amp;mut self, amt: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Tells this buffer that <code>amt</code> bytes have been consumed from the buffer,\nso they should no longer be returned in calls to <code>read</code>. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.BufRead.html#tymethod.consume\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_data_left\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#2290\">source</a><a href=\"#method.has_data_left\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.BufRead.html#method.has_data_left\" class=\"fn\">has_data_left</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>buf_read_has_data_left</code>)</span></div></span><div class='docblock'>Checks if the underlying <code>Read</code> has any data left to be read. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.BufRead.html#method.has_data_left\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_until\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#2349\">source</a></span><a href=\"#method.read_until\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.BufRead.html#method.read_until\" class=\"fn\">read_until</a>(&amp;mut self, byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF is reached. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.BufRead.html#method.read_until\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_until\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.84.0\">1.84.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#2409\">source</a></span><a href=\"#method.skip_until\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.BufRead.html#method.skip_until\" class=\"fn\">skip_until</a>(&amp;mut self, byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Skips all bytes until the delimiter <code>byte</code> or EOF is reached. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.BufRead.html#method.skip_until\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_line\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#2477\">source</a></span><a href=\"#method.read_line\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.BufRead.html#method.read_line\" class=\"fn\">read_line</a>(&amp;mut self, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads all bytes until a newline (the <code>0xA</code> byte) is reached, and append\nthem to the provided <code>String</code> buffer. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.BufRead.html#method.read_line\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#2515-2517\">source</a></span><a href=\"#method.split\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.BufRead.html#method.split\" class=\"fn\">split</a>(self, byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/struct.Split.html\" title=\"struct std::io::Split\">Split</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator over the contents of this reader split on the byte\n<code>byte</code>. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.BufRead.html#method.split\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lines\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#2552-2554\">source</a></span><a href=\"#method.lines\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.BufRead.html#method.lines\" class=\"fn\">lines</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/struct.Lines.html\" title=\"struct std::io::Lines\">Lines</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator over the lines of this reader. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.BufRead.html#method.lines\">Read more</a></div></details></div></details>","BufRead","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ByteSlice-for-%26%5Bu8%5D\" class=\"impl\"><a href=\"#impl-ByteSlice-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; ByteSlice for &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.split_at\" class=\"method trait-impl\"><a href=\"#method.split_at\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">split_at</a>(self, mid: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; (&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Splits the slice at the midpoint. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method trait-impl\"><a href=\"#method.as_ptr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Gets a raw pointer to the first byte in the slice.</div></details></div></details>","ByteSlice","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compare%3C%26%5Bu8%5D%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#857\">source</a><a href=\"#impl-Compare%3C%26%5Bu8%5D%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b&gt; <a class=\"trait\" href=\"winnow/stream/trait.Compare.html\" title=\"trait winnow::stream::Compare\">Compare</a>&lt;&amp;'b [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#859\">source</a><a href=\"#method.compare\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare\" class=\"fn\">compare</a>(&amp;self, t: &amp;'b [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><div class='docblock'>Compares self to another value for equality</div></details></div></details>","Compare<&'b [u8]>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compare%3C%26%5Bu8;+LEN%5D%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#901\">source</a><a href=\"#impl-Compare%3C%26%5Bu8;+LEN%5D%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, const LEN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"winnow/stream/trait.Compare.html\" title=\"trait winnow::stream::Compare\">Compare</a>&lt;&amp;'b [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">LEN</a>]&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#903\">source</a><a href=\"#method.compare\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare\" class=\"fn\">compare</a>(&amp;self, t: &amp;'b [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">LEN</a>]) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><div class='docblock'>Compares self to another value for equality</div></details></div></details>","Compare<&'b [u8; LEN]>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compare%3C%26str%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#915\">source</a><a href=\"#impl-Compare%3C%26str%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b&gt; <a class=\"trait\" href=\"winnow/stream/trait.Compare.html\" title=\"trait winnow::stream::Compare\">Compare</a>&lt;&amp;'b <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#917\">source</a><a href=\"#method.compare\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare\" class=\"fn\">compare</a>(&amp;self, t: &amp;'b <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><div class='docblock'>Compares self to another value for equality</div></details></div></details>","Compare<&'b str>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compare%3C%5Bu8;+LEN%5D%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#887\">source</a><a href=\"#impl-Compare%3C%5Bu8;+LEN%5D%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const LEN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"winnow/stream/trait.Compare.html\" title=\"trait winnow::stream::Compare\">Compare</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">LEN</a>]&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#889\">source</a><a href=\"#method.compare\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare\" class=\"fn\">compare</a>(&amp;self, t: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">LEN</a>]) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><div class='docblock'>Compares self to another value for equality</div></details></div></details>","Compare<[u8; LEN]>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compare%3CCaseless%3C%26%5Bu8%5D%3E%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#870\">source</a><a href=\"#impl-Compare%3CCaseless%3C%26%5Bu8%5D%3E%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b&gt; <a class=\"trait\" href=\"winnow/stream/trait.Compare.html\" title=\"trait winnow::stream::Compare\">Compare</a>&lt;<a class=\"struct\" href=\"winnow/ascii/struct.Caseless.html\" title=\"struct winnow::ascii::Caseless\">Caseless</a>&lt;&amp;'b [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#872\">source</a><a href=\"#method.compare\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare\" class=\"fn\">compare</a>(&amp;self, t: <a class=\"struct\" href=\"winnow/ascii/struct.Caseless.html\" title=\"struct winnow::ascii::Caseless\">Caseless</a>&lt;&amp;'b [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><div class='docblock'>Compares self to another value for equality</div></details></div></details>","Compare<Caseless<&'b [u8]>>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compare%3CCaseless%3C%26%5Bu8;+LEN%5D%3E%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#908\">source</a><a href=\"#impl-Compare%3CCaseless%3C%26%5Bu8;+LEN%5D%3E%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, const LEN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"winnow/stream/trait.Compare.html\" title=\"trait winnow::stream::Compare\">Compare</a>&lt;<a class=\"struct\" href=\"winnow/ascii/struct.Caseless.html\" title=\"struct winnow::ascii::Caseless\">Caseless</a>&lt;&amp;'b [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">LEN</a>]&gt;&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#910\">source</a><a href=\"#method.compare\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare\" class=\"fn\">compare</a>(&amp;self, t: <a class=\"struct\" href=\"winnow/ascii/struct.Caseless.html\" title=\"struct winnow::ascii::Caseless\">Caseless</a>&lt;&amp;'b [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">LEN</a>]&gt;) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><div class='docblock'>Compares self to another value for equality</div></details></div></details>","Compare<Caseless<&'b [u8; LEN]>>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compare%3CCaseless%3C%26str%3E%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#922\">source</a><a href=\"#impl-Compare%3CCaseless%3C%26str%3E%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b&gt; <a class=\"trait\" href=\"winnow/stream/trait.Compare.html\" title=\"trait winnow::stream::Compare\">Compare</a>&lt;<a class=\"struct\" href=\"winnow/ascii/struct.Caseless.html\" title=\"struct winnow::ascii::Caseless\">Caseless</a>&lt;&amp;'b <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#924\">source</a><a href=\"#method.compare\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare\" class=\"fn\">compare</a>(&amp;self, t: <a class=\"struct\" href=\"winnow/ascii/struct.Caseless.html\" title=\"struct winnow::ascii::Caseless\">Caseless</a>&lt;&amp;'b <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><div class='docblock'>Compares self to another value for equality</div></details></div></details>","Compare<Caseless<&'b str>>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compare%3CCaseless%3C%5Bu8;+LEN%5D%3E%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#894\">source</a><a href=\"#impl-Compare%3CCaseless%3C%5Bu8;+LEN%5D%3E%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const LEN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"winnow/stream/trait.Compare.html\" title=\"trait winnow::stream::Compare\">Compare</a>&lt;<a class=\"struct\" href=\"winnow/ascii/struct.Caseless.html\" title=\"struct winnow::ascii::Caseless\">Caseless</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">LEN</a>]&gt;&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#896\">source</a><a href=\"#method.compare\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare\" class=\"fn\">compare</a>(&amp;self, t: <a class=\"struct\" href=\"winnow/ascii/struct.Caseless.html\" title=\"struct winnow::ascii::Caseless\">Caseless</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">LEN</a>]&gt;) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><div class='docblock'>Compares self to another value for equality</div></details></div></details>","Compare<Caseless<[u8; LEN]>>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compare%3CCaseless%3Cchar%3E%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#958\">source</a><a href=\"#impl-Compare%3CCaseless%3Cchar%3E%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"winnow/stream/trait.Compare.html\" title=\"trait winnow::stream::Compare\">Compare</a>&lt;<a class=\"struct\" href=\"winnow/ascii/struct.Caseless.html\" title=\"struct winnow::ascii::Caseless\">Caseless</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>&gt;&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#960\">source</a><a href=\"#method.compare\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare\" class=\"fn\">compare</a>(&amp;self, t: <a class=\"struct\" href=\"winnow/ascii/struct.Caseless.html\" title=\"struct winnow::ascii::Caseless\">Caseless</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>&gt;) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><div class='docblock'>Compares self to another value for equality</div></details></div></details>","Compare<Caseless<char>>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compare%3CCaseless%3Cu8%3E%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#940\">source</a><a href=\"#impl-Compare%3CCaseless%3Cu8%3E%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"winnow/stream/trait.Compare.html\" title=\"trait winnow::stream::Compare\">Compare</a>&lt;<a class=\"struct\" href=\"winnow/ascii/struct.Caseless.html\" title=\"struct winnow::ascii::Caseless\">Caseless</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#942\">source</a><a href=\"#method.compare\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare\" class=\"fn\">compare</a>(&amp;self, t: <a class=\"struct\" href=\"winnow/ascii/struct.Caseless.html\" title=\"struct winnow::ascii::Caseless\">Caseless</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><div class='docblock'>Compares self to another value for equality</div></details></div></details>","Compare<Caseless<u8>>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compare%3Cchar%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#951\">source</a><a href=\"#impl-Compare%3Cchar%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"winnow/stream/trait.Compare.html\" title=\"trait winnow::stream::Compare\">Compare</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#953\">source</a><a href=\"#method.compare\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare\" class=\"fn\">compare</a>(&amp;self, t: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><div class='docblock'>Compares self to another value for equality</div></details></div></details>","Compare<char>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compare%3Cu8%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#929\">source</a><a href=\"#impl-Compare%3Cu8%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"winnow/stream/trait.Compare.html\" title=\"trait winnow::stream::Compare\">Compare</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#931\">source</a><a href=\"#method.compare\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare\" class=\"fn\">compare</a>(&amp;self, t: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><div class='docblock'>Compares self to another value for equality</div></details></div></details>","Compare<u8>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ContainsToken%3CC%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1851\">source</a><a href=\"#impl-ContainsToken%3CC%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"winnow/stream/trait.ContainsToken.html\" title=\"trait winnow::stream::ContainsToken\">ContainsToken</a>&lt;C&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]<div class=\"where\">where\n    C: <a class=\"trait\" href=\"winnow/stream/trait.AsChar.html\" title=\"trait winnow::stream::AsChar\">AsChar</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_token\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1853\">source</a><a href=\"#method.contains_token\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.ContainsToken.html#tymethod.contains_token\" class=\"fn\">contains_token</a>(&amp;self, token: C) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if self contains the token</div></details></div></details>","ContainsToken<C>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/mod.rs.html#4827\">source</a></span><a href=\"#impl-Default-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/mod.rs.html#4829\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Creates an empty slice.</p>\n</div></details></div></details>","Default","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#776\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, 'a&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]<div class=\"where\">where\n    'de: 'a,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#777-779\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/open_fastrlp/encode.rs.html#81\">source</a><a href=\"#impl-Encodable-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"open_fastrlp/encode/trait.Encodable.html\" title=\"trait open_fastrlp::encode::Encodable\">Encodable</a> for &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><section id=\"method.length\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/open_fastrlp/encode.rs.html#82\">source</a><a href=\"#method.length\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"open_fastrlp/encode/trait.Encodable.html#method.length\" class=\"fn\">length</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/open_fastrlp/encode.rs.html#90\">source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"open_fastrlp/encode/trait.Encodable.html#tymethod.encode\" class=\"fn\">encode</a>(&amp;self, out: &amp;mut dyn <a class=\"trait\" href=\"bytes/buf/buf_mut/trait.BufMut.html\" title=\"trait bytes::buf::buf_mut::BufMut\">BufMut</a>)</h4></section></div></details>","Encodable","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/rlp/impls.rs.html#71\">source</a><a href=\"#impl-Encodable-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"rlp/traits/trait.Encodable.html\" title=\"trait rlp::traits::Encodable\">Encodable</a> for &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rlp/impls.rs.html#72\">source</a><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rlp/traits/trait.Encodable.html#tymethod.rlp_append\" class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut <a class=\"struct\" href=\"rlp/stream/struct.RlpStream.html\" title=\"struct rlp::stream::RlpStream\">RlpStream</a>)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rlp/traits.rs.html#26\">source</a><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rlp/traits/trait.Encodable.html#method.rlp_bytes\" class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bytes/bytes_mut/struct.BytesMut.html\" title=\"struct bytes::bytes_mut::BytesMut\">BytesMut</a></h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EncodeAsVarULE%3CVarZeroSlice%3CT,+F%3E%3E-for-%26%5BE%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerovec/ule/encode.rs.html#208-212\">source</a><a href=\"#impl-EncodeAsVarULE%3CVarZeroSlice%3CT,+F%3E%3E-for-%26%5BE%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, E, F&gt; <a class=\"trait\" href=\"zerovec/ule/encode/trait.EncodeAsVarULE.html\" title=\"trait zerovec::ule::encode::EncodeAsVarULE\">EncodeAsVarULE</a>&lt;<a class=\"struct\" href=\"zerovec/varzerovec/slice/struct.VarZeroSlice.html\" title=\"struct zerovec::varzerovec::slice::VarZeroSlice\">VarZeroSlice</a>&lt;T, F&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[E]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"zerovec/ule/trait.VarULE.html\" title=\"trait zerovec::ule::VarULE\">VarULE</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    E: <a class=\"trait\" href=\"zerovec/ule/encode/trait.EncodeAsVarULE.html\" title=\"trait zerovec::ule::encode::EncodeAsVarULE\">EncodeAsVarULE</a>&lt;T&gt;,\n    F: <a class=\"trait\" href=\"zerovec/varzerovec/components/trait.VarZeroVecFormat.html\" title=\"trait zerovec::varzerovec::components::VarZeroVecFormat\">VarZeroVecFormat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_as_slices\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerovec/ule/encode.rs.html#214\">source</a><a href=\"#method.encode_var_ule_as_slices\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerovec/ule/encode/trait.EncodeAsVarULE.html#tymethod.encode_var_ule_as_slices\" class=\"fn\">encode_var_ule_as_slices</a>&lt;R&gt;(&amp;self, _: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]]) -&gt; R) -&gt; R</h4></section></summary><div class='docblock'>Calls <code>cb</code> with a piecewise list of byte slices that when concatenated\nproduce the memory pattern of the corresponding instance of <code>T</code>. <a href=\"zerovec/ule/encode/trait.EncodeAsVarULE.html#tymethod.encode_var_ule_as_slices\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerovec/ule/encode.rs.html#220\">source</a><a href=\"#method.encode_var_ule_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerovec/ule/encode/trait.EncodeAsVarULE.html#method.encode_var_ule_len\" class=\"fn\">encode_var_ule_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return the length, in bytes, of the corresponding <a href=\"zerovec/ule/trait.VarULE.html\" title=\"trait zerovec::ule::VarULE\"><code>VarULE</code></a> type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerovec/ule/encode.rs.html#224\">source</a><a href=\"#method.encode_var_ule_write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerovec/ule/encode/trait.EncodeAsVarULE.html#method.encode_var_ule_write\" class=\"fn\">encode_var_ule_write</a>(&amp;self, dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Write the corresponding <a href=\"zerovec/ule/trait.VarULE.html\" title=\"trait zerovec::ule::VarULE\"><code>VarULE</code></a> type to the <code>dst</code> buffer. <code>dst</code> should\nbe the size of <a href=\"zerovec/ule/encode/trait.EncodeAsVarULE.html#method.encode_var_ule_len\" title=\"method zerovec::ule::encode::EncodeAsVarULE::encode_var_ule_len::encode_var_ule_len\"><code>Self::encode_var_ule_len()</code></a></div></details></div></details>","EncodeAsVarULE<VarZeroSlice<T, F>>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EncodeAsVarULE%3CZeroSlice%3CT%3E%3E-for-%26%5BT%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerovec/ule/encode.rs.html#143-145\">source</a><a href=\"#impl-EncodeAsVarULE%3CZeroSlice%3CT%3E%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"zerovec/ule/encode/trait.EncodeAsVarULE.html\" title=\"trait zerovec::ule::encode::EncodeAsVarULE\">EncodeAsVarULE</a>&lt;<a class=\"struct\" href=\"zerovec/zerovec/slice/struct.ZeroSlice.html\" title=\"struct zerovec::zerovec::slice::ZeroSlice\">ZeroSlice</a>&lt;T&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_as_slices\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerovec/ule/encode.rs.html#147\">source</a><a href=\"#method.encode_var_ule_as_slices\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerovec/ule/encode/trait.EncodeAsVarULE.html#tymethod.encode_var_ule_as_slices\" class=\"fn\">encode_var_ule_as_slices</a>&lt;R&gt;(&amp;self, _: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]]) -&gt; R) -&gt; R</h4></section></summary><div class='docblock'>Calls <code>cb</code> with a piecewise list of byte slices that when concatenated\nproduce the memory pattern of the corresponding instance of <code>T</code>. <a href=\"zerovec/ule/encode/trait.EncodeAsVarULE.html#tymethod.encode_var_ule_as_slices\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerovec/ule/encode.rs.html#153\">source</a><a href=\"#method.encode_var_ule_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerovec/ule/encode/trait.EncodeAsVarULE.html#method.encode_var_ule_len\" class=\"fn\">encode_var_ule_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return the length, in bytes, of the corresponding <a href=\"zerovec/ule/trait.VarULE.html\" title=\"trait zerovec::ule::VarULE\"><code>VarULE</code></a> type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var_ule_write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerovec/ule/encode.rs.html#157\">source</a><a href=\"#method.encode_var_ule_write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerovec/ule/encode/trait.EncodeAsVarULE.html#method.encode_var_ule_write\" class=\"fn\">encode_var_ule_write</a>(&amp;self, dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Write the corresponding <a href=\"zerovec/ule/trait.VarULE.html\" title=\"trait zerovec::ule::VarULE\"><code>VarULE</code></a> type to the <code>dst</code> buffer. <code>dst</code> should\nbe the size of <a href=\"zerovec/ule/encode/trait.EncodeAsVarULE.html#method.encode_var_ule_len\" title=\"method zerovec::ule::encode::EncodeAsVarULE::encode_var_ule_len::encode_var_ule_len\"><code>Self::encode_var_ule_len()</code></a></div></details></div></details>","EncodeAsVarULE<ZeroSlice<T>>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C%26%5Bu8%5D%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#999\">source</a><a href=\"#impl-FindSlice%3C%26%5Bu8%5D%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s&gt; <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;&amp;'s [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1001\">source</a><a href=\"#method.find_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: &amp;'s [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<&'s [u8]>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C%26str%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1103\">source</a><a href=\"#impl-FindSlice%3C%26str%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s&gt; <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;&amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1105\">source</a><a href=\"#method.find_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: &amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<&'s str>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(%26%5Bu8%5D,)%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1006\">source</a><a href=\"#impl-FindSlice%3C(%26%5Bu8%5D,)%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s&gt; <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;(&amp;'s [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],)&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1008\">source</a><a href=\"#method.find_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: (&amp;'s [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(&'s [u8],)>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(%26%5Bu8%5D,+%26%5Bu8%5D)%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1013\">source</a><a href=\"#impl-FindSlice%3C(%26%5Bu8%5D,+%26%5Bu8%5D)%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s&gt; <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;(&amp;'s [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;'s [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1015-1018\">source</a><a href=\"#method.find_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: (&amp;'s [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;'s [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(&'s [u8], &'s [u8])>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(%26%5Bu8%5D,+%26%5Bu8%5D,+%26%5Bu8%5D)%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1023\">source</a><a href=\"#impl-FindSlice%3C(%26%5Bu8%5D,+%26%5Bu8%5D,+%26%5Bu8%5D)%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s&gt; <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;(&amp;'s [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;'s [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;'s [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1025-1028\">source</a><a href=\"#method.find_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(\n    &amp;self,\n    substr: (&amp;'s [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;'s [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], &amp;'s [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]),\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(&'s [u8], &'s [u8], &'s [u8])>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(%26str,)%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1110\">source</a><a href=\"#impl-FindSlice%3C(%26str,)%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s&gt; <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;(&amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,)&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1112\">source</a><a href=\"#method.find_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: (&amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(&'s str,)>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(%26str,+%26str)%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1117\">source</a><a href=\"#impl-FindSlice%3C(%26str,+%26str)%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s&gt; <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;(&amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, &amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>)&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1119\">source</a><a href=\"#method.find_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: (&amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, &amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(&'s str, &'s str)>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(%26str,+%26str,+%26str)%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1124\">source</a><a href=\"#impl-FindSlice%3C(%26str,+%26str,+%26str)%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s&gt; <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;(&amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, &amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, &amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>)&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1126-1129\">source</a><a href=\"#method.find_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(\n    &amp;self,\n    substr: (&amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, &amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, &amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>),\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(&'s str, &'s str, &'s str)>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(char,)%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1042\">source</a><a href=\"#impl-FindSlice%3C(char,)%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>,)&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1044\">source</a><a href=\"#method.find_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>,)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(char,)>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(char,+char)%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1051\">source</a><a href=\"#impl-FindSlice%3C(char,+char)%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>)&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1053\">source</a><a href=\"#method.find_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(char, char)>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(char,+char,+char)%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1062\">source</a><a href=\"#impl-FindSlice%3C(char,+char,+char)%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>)&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1064\">source</a><a href=\"#method.find_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(char, char, char)>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(u8,)%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1082\">source</a><a href=\"#impl-FindSlice%3C(u8,)%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>,)&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1084\">source</a><a href=\"#method.find_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>,)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(u8,)>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(u8,+u8)%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1089\">source</a><a href=\"#impl-FindSlice%3C(u8,+u8)%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1091\">source</a><a href=\"#method.find_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(u8, u8)>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(u8,+u8,+u8)%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1096\">source</a><a href=\"#impl-FindSlice%3C(u8,+u8,+u8)%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1098\">source</a><a href=\"#method.find_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(u8, u8, u8)>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3Cchar%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1033\">source</a><a href=\"#impl-FindSlice%3Cchar%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1035\">source</a><a href=\"#method.find_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<char>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3Cu8%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1075\">source</a><a href=\"#impl-FindSlice%3Cu8%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1077\">source</a><a href=\"#method.find_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<u8>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26BStr%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/bstr.rs.html#368\">source</a><a href=\"#impl-From%3C%26BStr%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"winnow/stream/bstr/struct.BStr.html\" title=\"struct winnow::stream::bstr::BStr\">BStr</a>&gt; for &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/bstr.rs.html#370\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(s: &amp;'a <a class=\"struct\" href=\"winnow/stream/bstr/struct.BStr.html\" title=\"struct winnow::stream::bstr::BStr\">BStr</a>) -&gt; &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;a [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&'a BStr>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26Bytes%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/bytes.rs.html#383\">source</a><a href=\"#impl-From%3C%26Bytes%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"winnow/stream/bytes/struct.Bytes.html\" title=\"struct winnow::stream::bytes::Bytes\">Bytes</a>&gt; for &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/bytes.rs.html#385\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(s: &amp;'a <a class=\"struct\" href=\"winnow/stream/bytes/struct.Bytes.html\" title=\"struct winnow::stream::bytes::Bytes\">Bytes</a>) -&gt; &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;a [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&'a Bytes>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CIpAddrRef%3C'a%3E%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/webpki/subject_name/ip_address.rs.html#190\">source</a><a href=\"#impl-From%3CIpAddrRef%3C'a%3E%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"webpki/subject_name/ip_address/enum.IpAddrRef.html\" title=\"enum webpki::subject_name::ip_address::IpAddrRef\">IpAddrRef</a>&lt;'a&gt;&gt; for &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/webpki/subject_name/ip_address.rs.html#191\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(ip_address: <a class=\"enum\" href=\"webpki/subject_name/ip_address/enum.IpAddrRef.html\" title=\"enum webpki::subject_name::ip_address::IpAddrRef\">IpAddrRef</a>&lt;'a&gt;) -&gt; &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;a [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<IpAddrRef<'a>>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMatch%3C'h%3E%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/regex/regex/bytes.rs.html#1569\">source</a><a href=\"#impl-From%3CMatch%3C'h%3E%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'h&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"regex/regex/bytes/struct.Match.html\" title=\"struct regex::regex::bytes::Match\">Match</a>&lt;'h&gt;&gt; for &amp;'h [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/regex/regex/bytes.rs.html#1570\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(m: <a class=\"struct\" href=\"regex/regex/bytes/struct.Match.html\" title=\"struct regex::regex::bytes::Match\">Match</a>&lt;'h&gt;) -&gt; &amp;'h [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;h [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Match<'h>>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3COctetStringRef%3C'a%3E%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/der/asn1/octet_string.rs.html#91\">source</a><a href=\"#impl-From%3COctetStringRef%3C'a%3E%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"der/asn1/octet_string/struct.OctetStringRef.html\" title=\"struct der::asn1::octet_string::OctetStringRef\">OctetStringRef</a>&lt;'a&gt;&gt; for &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/der/asn1/octet_string.rs.html#92\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(octet_string: <a class=\"struct\" href=\"der/asn1/octet_string/struct.OctetStringRef.html\" title=\"struct der::asn1::octet_string::OctetStringRef\">OctetStringRef</a>&lt;'a&gt;) -&gt; &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;a [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<OctetStringRef<'a>>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVideotexStringRef%3C'a%3E%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/der/asn1/videotex_string.rs.html#72\">source</a><a href=\"#impl-From%3CVideotexStringRef%3C'a%3E%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"der/asn1/videotex_string/struct.VideotexStringRef.html\" title=\"struct der::asn1::videotex_string::VideotexStringRef\">VideotexStringRef</a>&lt;'a&gt;&gt; for &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/der/asn1/videotex_string.rs.html#73\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(printable_string: <a class=\"struct\" href=\"der/asn1/videotex_string/struct.VideotexStringRef.html\" title=\"struct der::asn1::videotex_string::VideotexStringRef\">VideotexStringRef</a>&lt;'a&gt;) -&gt; &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;a [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<VideotexStringRef<'a>>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Input-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#113\">source</a><a href=\"#impl-Input-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"parity_scale_codec/codec/trait.Input.html\" title=\"trait parity_scale_codec::codec::Input\">Input</a> for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.remaining_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#114\">source</a><a href=\"#method.remaining_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parity_scale_codec/codec/trait.Input.html#tymethod.remaining_len\" class=\"fn\">remaining_len</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;, <a class=\"struct\" href=\"parity_scale_codec/error/struct.Error.html\" title=\"struct parity_scale_codec::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Should return the remaining length of the input data. If no information about the input\nlength is available, <code>None</code> should be returned. <a href=\"parity_scale_codec/codec/trait.Input.html#tymethod.remaining_len\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#118\">source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parity_scale_codec/codec/trait.Input.html#tymethod.read\" class=\"fn\">read</a>(&amp;mut self, into: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"parity_scale_codec/error/struct.Error.html\" title=\"struct parity_scale_codec::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Read the exact number of bytes required to fill the given buffer. <a href=\"parity_scale_codec/codec/trait.Input.html#tymethod.read\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_byte\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#71\">source</a><a href=\"#method.read_byte\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parity_scale_codec/codec/trait.Input.html#method.read_byte\" class=\"fn\">read_byte</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"struct\" href=\"parity_scale_codec/error/struct.Error.html\" title=\"struct parity_scale_codec::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Read a single byte from the input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.descend_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#81\">source</a><a href=\"#method.descend_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parity_scale_codec/codec/trait.Input.html#method.descend_ref\" class=\"fn\">descend_ref</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"parity_scale_codec/error/struct.Error.html\" title=\"struct parity_scale_codec::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Descend into nested reference when decoding.\nThis is called when decoding a new refence-based instance,\nsuch as <code>Vec</code> or <code>Box</code>. Currently, all such types are\nallocated on the heap.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ascend_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#87\">source</a><a href=\"#method.ascend_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parity_scale_codec/codec/trait.Input.html#method.ascend_ref\" class=\"fn\">ascend_ref</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Ascend to previous structure level when decoding.\nThis is called when decoding reference-based type is finished.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_before_alloc_mem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#96\">source</a><a href=\"#method.on_before_alloc_mem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parity_scale_codec/codec/trait.Input.html#method.on_before_alloc_mem\" class=\"fn\">on_before_alloc_mem</a>(&amp;mut self, _size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"parity_scale_codec/error/struct.Error.html\" title=\"struct parity_scale_codec::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Hook that is called before allocating memory on the heap. <a href=\"parity_scale_codec/codec/trait.Input.html#method.on_before_alloc_mem\">Read more</a></div></details></div></details>","Input","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoDeserializer%3C'de,+E%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/de/value.rs.html#888-890\">source</a><a href=\"#impl-IntoDeserializer%3C'de,+E%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, 'a, E&gt; <a class=\"trait\" href=\"serde/de/trait.IntoDeserializer.html\" title=\"trait serde::de::IntoDeserializer\">IntoDeserializer</a>&lt;'de, E&gt; for &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]<div class=\"where\">where\n    E: <a class=\"trait\" href=\"serde/de/trait.Error.html\" title=\"trait serde::de::Error\">Error</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Deserializer\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/serde/de/value.rs.html#892\">source</a><a href=\"#associatedtype.Deserializer\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"serde/de/trait.IntoDeserializer.html#associatedtype.Deserializer\" class=\"associatedtype\">Deserializer</a> = <a class=\"struct\" href=\"serde/de/value/struct.BytesDeserializer.html\" title=\"struct serde::de::value::BytesDeserializer\">BytesDeserializer</a>&lt;'a, E&gt;</h4></section></summary><div class='docblock'>The type of the deserializer being converted into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_deserializer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/de/value.rs.html#894\">source</a><a href=\"#method.into_deserializer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.IntoDeserializer.html#tymethod.into_deserializer\" class=\"fn\">into_deserializer</a>(self) -&gt; <a class=\"struct\" href=\"serde/de/value/struct.BytesDeserializer.html\" title=\"struct serde::de::value::BytesDeserializer\">BytesDeserializer</a>&lt;'a, E&gt;</h4></section></summary><div class='docblock'>Convert this value into a deserializer.</div></details></div></details>","IntoDeserializer<'de, E>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/iter.rs.html#21\">source</a></span><a href=\"#impl-IntoIterator-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/iter.rs.html#22\">source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a></h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/iter.rs.html#23\">source</a><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/iter.rs.html#25\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoParallelIterator-for-%26%5BT%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/rayon/slice/mod.rs.html#765\">source</a><a href=\"#impl-IntoParallelIterator-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'data, T&gt; <a class=\"trait\" href=\"rayon/iter/trait.IntoParallelIterator.html\" title=\"trait rayon::iter::IntoParallelIterator\">IntoParallelIterator</a> for &amp;'data <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'data,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/rayon/slice/mod.rs.html#766\">source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rayon/iter/trait.IntoParallelIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'data T</a></h4></section></summary><div class='docblock'>The type of item that the parallel iterator will produce.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Iter\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/rayon/slice/mod.rs.html#767\">source</a><a href=\"#associatedtype.Iter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rayon/iter/trait.IntoParallelIterator.html#associatedtype.Iter\" class=\"associatedtype\">Iter</a> = <a class=\"struct\" href=\"rayon/slice/struct.Iter.html\" title=\"struct rayon::slice::Iter\">Iter</a>&lt;'data, T&gt;</h4></section></summary><div class='docblock'>The parallel iterator type that will be created.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_par_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rayon/slice/mod.rs.html#769\">source</a><a href=\"#method.into_par_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\" class=\"fn\">into_par_iter</a>(self) -&gt; &lt;&amp;'data <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a> as <a class=\"trait\" href=\"rayon/iter/trait.IntoParallelIterator.html\" title=\"trait rayon::iter::IntoParallelIterator\">IntoParallelIterator</a>&gt;::<a class=\"associatedtype\" href=\"rayon/iter/trait.IntoParallelIterator.html#associatedtype.Iter\" title=\"type rayon::iter::IntoParallelIterator::Iter\">Iter</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&lt;&amp;&#39;data [T] as IntoParallelIterator&gt;::Iter\">ⓘ</a></h4></section></summary><div class='docblock'>Converts <code>self</code> into a parallel iterator. <a href=\"rayon/iter/trait.IntoParallelIterator.html#tymethod.into_par_iter\">Read more</a></div></details></div></details>","IntoParallelIterator","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoResponse-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/axum_core/response/into_response.rs.html#285\">source</a><a href=\"#impl-IntoResponse-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"axum_core/response/into_response/trait.IntoResponse.html\" title=\"trait axum_core::response::into_response::IntoResponse\">IntoResponse</a> for &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_response\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/axum_core/response/into_response.rs.html#286\">source</a><a href=\"#method.into_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"axum_core/response/into_response/trait.IntoResponse.html#tymethod.into_response\" class=\"fn\">into_response</a>(self) -&gt; <a class=\"struct\" href=\"http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"axum_core/body/struct.Body.html\" title=\"struct axum_core::body::Body\">Body</a>&gt;</h4></section></summary><div class='docblock'>Create a response.</div></details></div></details>","IntoResponse","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Offset%3C%3C%26%5BT%5D+as+Stream%3E::Checkpoint%3E-for-%26%5BT%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#749-751\">source</a><a href=\"#impl-Offset%3C%3C%26%5BT%5D+as+Stream%3E::Checkpoint%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"winnow/stream/trait.Offset.html\" title=\"trait winnow::stream::Offset\">Offset</a>&lt;&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a> as <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Checkpoint\" title=\"type winnow::stream::Stream::Checkpoint\">Checkpoint</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offset_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#754\">source</a><a href=\"#method.offset_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Offset.html#tymethod.offset_from\" class=\"fn\">offset_from</a>(&amp;self, other: &amp;&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a> as <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Checkpoint\" title=\"type winnow::stream::Stream::Checkpoint\">Checkpoint</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Offset between the first byte of <code>start</code> and the first byte of <code>self</code>a <a href=\"winnow/stream/trait.Offset.html#tymethod.offset_from\">Read more</a></div></details></div></details>","Offset<<&'a [T] as Stream>::Checkpoint>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Offset-for-%26%5BT%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#735\">source</a><a href=\"#impl-Offset-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"winnow/stream/trait.Offset.html\" title=\"trait winnow::stream::Offset\">Offset</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offset_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#737\">source</a><a href=\"#method.offset_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Offset.html#tymethod.offset_from\" class=\"fn\">offset_from</a>(&amp;self, start: &amp;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Offset between the first byte of <code>start</code> and the first byte of <code>self</code>a <a href=\"winnow/stream/trait.Offset.html#tymethod.offset_from\">Read more</a></div></details></div></details>","Offset","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ParseSlice%3CR%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1209\">source</a><a href=\"#impl-ParseSlice%3CR%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R&gt; <a class=\"trait\" href=\"winnow/stream/trait.ParseSlice.html\" title=\"trait winnow::stream::ParseSlice\">ParseSlice</a>&lt;R&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1211\">source</a><a href=\"#method.parse_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.ParseSlice.html#tymethod.parse_slice\" class=\"fn\">parse_slice</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;R&gt;</h4></section></summary><div class='docblock'>Succeeds if <code>parse()</code> succeeded <a href=\"winnow/stream/trait.ParseSlice.html#tymethod.parse_slice\">Read more</a></div></details></div></details>","ParseSlice<R>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Parser%3CI,+%3CI+as+Stream%3E::Slice,+E%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#950-953\">source</a><a href=\"#impl-Parser%3CI,+%3CI+as+Stream%3E::Slice,+E%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, I, E&gt; <a class=\"trait\" href=\"winnow/parser/trait.Parser.html\" title=\"trait winnow::parser::Parser\">Parser</a>&lt;I, &lt;I as <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Slice\" title=\"type winnow::stream::Stream::Slice\">Slice</a>, E&gt; for &amp;'s [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]<div class=\"where\">where\n    E: <a class=\"trait\" href=\"winnow/error/trait.ParserError.html\" title=\"trait winnow::error::ParserError\">ParserError</a>&lt;I&gt;,\n    I: <a class=\"trait\" href=\"winnow/stream/trait.Compare.html\" title=\"trait winnow::stream::Compare\">Compare</a>&lt;&amp;'s [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; + <a class=\"trait\" href=\"winnow/stream/trait.StreamIsPartial.html\" title=\"trait winnow::stream::StreamIsPartial\">StreamIsPartial</a> + <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>,</div></h3></section></summary><div class=\"docblock\"><p>This is a shortcut for <a href=\"winnow/token/fn.literal.html\" title=\"fn winnow::token::literal\"><code>literal</code></a>.</p>\n<h4 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">fn </span>parser&lt;<span class=\"lifetime\">'s</span>&gt;(s: <span class=\"kw-2\">&amp;mut &amp;</span><span class=\"lifetime\">'s </span>[u8]) -&gt; ModalResult&lt;<span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'s </span>[u8]&gt; {\n  alt((<span class=\"kw-2\">&amp;</span><span class=\"string\">\"Hello\"</span>[..], take(<span class=\"number\">5usize</span>))).parse_next(s)\n}\n\n<span class=\"macro\">assert_eq!</span>(parser.parse_peek(<span class=\"kw-2\">&amp;</span><span class=\"string\">b\"Hello, World!\"</span>[..]), <span class=\"prelude-val\">Ok</span>((<span class=\"kw-2\">&amp;</span><span class=\"string\">b\", World!\"</span>[..], <span class=\"kw-2\">&amp;</span><span class=\"string\">b\"Hello\"</span>[..])));\n<span class=\"macro\">assert_eq!</span>(parser.parse_peek(<span class=\"kw-2\">&amp;</span><span class=\"string\">b\"Something\"</span>[..]), <span class=\"prelude-val\">Ok</span>((<span class=\"kw-2\">&amp;</span><span class=\"string\">b\"hing\"</span>[..], <span class=\"kw-2\">&amp;</span><span class=\"string\">b\"Somet\"</span>[..])));\n<span class=\"macro\">assert!</span>(parser.parse_peek(<span class=\"kw-2\">&amp;</span><span class=\"string\">b\"Some\"</span>[..]).is_err());\n<span class=\"macro\">assert!</span>(parser.parse_peek(<span class=\"kw-2\">&amp;</span><span class=\"string\">b\"\"</span>[..]).is_err());</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_next\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#956\">source</a><a href=\"#method.parse_next\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/parser/trait.Parser.html#tymethod.parse_next\" class=\"fn\">parse_next</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;I as <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Slice\" title=\"type winnow::stream::Stream::Slice\">Slice</a>, E&gt;</h4></section></summary><div class='docblock'>Take tokens from the <a href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\"><code>Stream</code></a>, turning it into the output <a href=\"winnow/parser/trait.Parser.html#tymethod.parse_next\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_peek\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#99\">source</a><a href=\"#method.parse_peek\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/parser/trait.Parser.html#method.parse_peek\" class=\"fn\">parse_peek</a>(&amp;mut self, input: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(I, O)</a>, E&gt;</h4></section></summary><div class='docblock'>Take tokens from the <a href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\"><code>Stream</code></a>, turning it into the output <a href=\"winnow/parser/trait.Parser.html#method.parse_peek\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#150-152\">source</a><a href=\"#method.by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/parser/trait.Parser.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"winnow/combinator/impls/struct.ByRef.html\" title=\"struct winnow::combinator::impls::ByRef\">ByRef</a>&lt;'_, Self, I, O, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Treat <code>&amp;mut Self</code> as a parser <a href=\"winnow/parser/trait.Parser.html#method.by_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#182-185\">source</a><a href=\"#method.value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/parser/trait.Parser.html#method.value\" class=\"fn\">value</a>&lt;O2&gt;(self, val: O2) -&gt; <a class=\"struct\" href=\"winnow/combinator/impls/struct.Value.html\" title=\"struct winnow::combinator::impls::Value\">Value</a>&lt;Self, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    O2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Produce the provided value <a href=\"winnow/parser/trait.Parser.html#method.value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#215-218\">source</a><a href=\"#method.default_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/parser/trait.Parser.html#method.default_value\" class=\"fn\">default_value</a>&lt;O2&gt;(self) -&gt; <a class=\"struct\" href=\"winnow/combinator/impls/struct.DefaultValue.html\" title=\"struct winnow::combinator::impls::DefaultValue\">DefaultValue</a>&lt;Self, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    O2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class='docblock'>Produce a type’s default value <a href=\"winnow/parser/trait.Parser.html#method.default_value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.void\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#248-250\">source</a><a href=\"#method.void\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/parser/trait.Parser.html#method.void\" class=\"fn\">void</a>(self) -&gt; <a class=\"struct\" href=\"winnow/combinator/impls/struct.Void.html\" title=\"struct winnow::combinator::impls::Void\">Void</a>&lt;Self, I, O, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Discards the output of the <code>Parser</code> <a href=\"winnow/parser/trait.Parser.html#method.void\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.output_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#282-285\">source</a><a href=\"#method.output_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/parser/trait.Parser.html#method.output_into\" class=\"fn\">output_into</a>&lt;O2&gt;(self) -&gt; <a class=\"struct\" href=\"winnow/combinator/impls/struct.OutputInto.html\" title=\"struct winnow::combinator::impls::OutputInto\">OutputInto</a>&lt;Self, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    O: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;O2&gt;,</div></h4></section></summary><div class='docblock'>Convert the parser’s output to another type using <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\"><code>std::convert::From</code></a> <a href=\"winnow/parser/trait.Parser.html#method.output_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#318-321\">source</a><a href=\"#method.take\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/parser/trait.Parser.html#method.take\" class=\"fn\">take</a>(self) -&gt; <a class=\"struct\" href=\"winnow/combinator/impls/struct.Take.html\" title=\"struct winnow::combinator::impls::Take\">Take</a>&lt;Self, I, O, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>,</div></h4></section></summary><div class='docblock'>Produce the consumed input as produced value. <a href=\"winnow/parser/trait.Parser.html#method.take\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_taken\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#360-363\">source</a><a href=\"#method.with_taken\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/parser/trait.Parser.html#method.with_taken\" class=\"fn\">with_taken</a>(self) -&gt; <a class=\"struct\" href=\"winnow/combinator/impls/struct.WithTaken.html\" title=\"struct winnow::combinator::impls::WithTaken\">WithTaken</a>&lt;Self, I, O, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>,</div></h4></section></summary><div class='docblock'>Produce the consumed input with the output <a href=\"winnow/parser/trait.Parser.html#method.with_taken\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#470-473\">source</a><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/parser/trait.Parser.html#method.map\" class=\"fn\">map</a>&lt;G, O2&gt;(self, map: G) -&gt; <a class=\"struct\" href=\"winnow/combinator/impls/struct.Map.html\" title=\"struct winnow::combinator::impls::Map\">Map</a>&lt;Self, G, I, O, O2, E&gt;<div class=\"where\">where\n    G: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(O) -&gt; O2,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Maps a function over the output of a parser <a href=\"winnow/parser/trait.Parser.html#method.map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#510-516\">source</a><a href=\"#method.try_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/parser/trait.Parser.html#method.try_map\" class=\"fn\">try_map</a>&lt;G, O2, E2&gt;(self, map: G) -&gt; <a class=\"struct\" href=\"winnow/combinator/impls/struct.TryMap.html\" title=\"struct winnow::combinator::impls::TryMap\">TryMap</a>&lt;Self, G, I, O, O2, E, E2&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    G: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;O2, E2&gt;,\n    I: <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>,\n    E: <a class=\"trait\" href=\"winnow/error/trait.FromExternalError.html\" title=\"trait winnow::error::FromExternalError\">FromExternalError</a>&lt;I, E2&gt; + <a class=\"trait\" href=\"winnow/error/trait.ParserError.html\" title=\"trait winnow::error::ParserError\">ParserError</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>Applies a function returning a <code>Result</code> over the output of a parser. <a href=\"winnow/parser/trait.Parser.html#method.try_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#557-562\">source</a><a href=\"#method.verify_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/parser/trait.Parser.html#method.verify_map\" class=\"fn\">verify_map</a>&lt;G, O2&gt;(self, map: G) -&gt; <a class=\"struct\" href=\"winnow/combinator/impls/struct.VerifyMap.html\" title=\"struct winnow::combinator::impls::VerifyMap\">VerifyMap</a>&lt;Self, G, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    G: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O2&gt;,\n    I: <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>,\n    E: <a class=\"trait\" href=\"winnow/error/trait.ParserError.html\" title=\"trait winnow::error::ParserError\">ParserError</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>Apply both <a href=\"winnow/parser/trait.Parser.html#method.verify\" title=\"method winnow::parser::Parser::verify\"><code>Parser::verify</code></a> and <a href=\"winnow/parser/trait.Parser.html#method.map\" title=\"method winnow::parser::Parser::map\"><code>Parser::map</code></a>. <a href=\"winnow/parser/trait.Parser.html#method.verify_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flat_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#607-611\">source</a><a href=\"#method.flat_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/parser/trait.Parser.html#method.flat_map\" class=\"fn\">flat_map</a>&lt;G, H, O2&gt;(self, map: G) -&gt; <a class=\"struct\" href=\"winnow/combinator/impls/struct.FlatMap.html\" title=\"struct winnow::combinator::impls::FlatMap\">FlatMap</a>&lt;Self, G, H, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    G: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(O) -&gt; H,\n    H: <a class=\"trait\" href=\"winnow/parser/trait.Parser.html\" title=\"trait winnow::parser::Parser\">Parser</a>&lt;I, O2, E&gt;,</div></h4></section></summary><div class='docblock'>Creates a parser from the output of this one <a href=\"winnow/parser/trait.Parser.html#method.flat_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#683-688\">source</a><a href=\"#method.parse_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/parser/trait.Parser.html#method.parse_to\" class=\"fn\">parse_to</a>&lt;O2&gt;(self) -&gt; <a class=\"struct\" href=\"winnow/combinator/impls/struct.ParseTo.html\" title=\"struct winnow::combinator::impls::ParseTo\">ParseTo</a>&lt;Self, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>,\n    O: <a class=\"trait\" href=\"winnow/stream/trait.ParseSlice.html\" title=\"trait winnow::stream::ParseSlice\">ParseSlice</a>&lt;O2&gt;,\n    E: <a class=\"trait\" href=\"winnow/error/trait.ParserError.html\" title=\"trait winnow::error::ParserError\">ParserError</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>Apply <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\"><code>std::str::FromStr</code></a> to the output of the parser <a href=\"winnow/parser/trait.Parser.html#method.parse_to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#724-731\">source</a><a href=\"#method.verify\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/parser/trait.Parser.html#method.verify\" class=\"fn\">verify</a>&lt;G, O2&gt;(self, filter: G) -&gt; <a class=\"struct\" href=\"winnow/combinator/impls/struct.Verify.html\" title=\"struct winnow::combinator::impls::Verify\">Verify</a>&lt;Self, G, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    G: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;O2</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n    I: <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>,\n    O: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;O2&gt;,\n    E: <a class=\"trait\" href=\"winnow/error/trait.ParserError.html\" title=\"trait winnow::error::ParserError\">ParserError</a>&lt;I&gt;,\n    O2: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns the output of the child parser if it satisfies a verification function. <a href=\"winnow/parser/trait.Parser.html#method.verify\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.context\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#749-755\">source</a><a href=\"#method.context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/parser/trait.Parser.html#method.context\" class=\"fn\">context</a>&lt;C&gt;(self, context: C) -&gt; <a class=\"struct\" href=\"winnow/combinator/impls/struct.Context.html\" title=\"struct winnow::combinator::impls::Context\">Context</a>&lt;Self, I, O, E, C&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>,\n    E: <a class=\"trait\" href=\"winnow/error/trait.AddContext.html\" title=\"trait winnow::error::AddContext\">AddContext</a>&lt;I, C&gt; + <a class=\"trait\" href=\"winnow/error/trait.ParserError.html\" title=\"trait winnow::error::ParserError\">ParserError</a>&lt;I&gt;,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h4></section></summary><div class='docblock'>If parsing fails, add context to the error <a href=\"winnow/parser/trait.Parser.html#method.context\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.complete_err\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#785-787\">source</a><a href=\"#method.complete_err\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/parser/trait.Parser.html#method.complete_err\" class=\"fn\">complete_err</a>(self) -&gt; <a class=\"struct\" href=\"winnow/combinator/impls/struct.CompleteErr.html\" title=\"struct winnow::combinator::impls::CompleteErr\">CompleteErr</a>&lt;Self, I, O, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Transforms <a href=\"winnow/error/enum.ErrMode.html#variant.Incomplete\" title=\"variant winnow::error::ErrMode::Incomplete\"><code>Incomplete</code></a> into <a href=\"winnow/error/enum.ErrMode.html#variant.Backtrack\" title=\"variant winnow::error::ErrMode::Backtrack\"><code>Backtrack</code></a> <a href=\"winnow/parser/trait.Parser.html#method.complete_err\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.err_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#799-802\">source</a><a href=\"#method.err_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/parser/trait.Parser.html#method.err_into\" class=\"fn\">err_into</a>&lt;E2&gt;(self) -&gt; <a class=\"struct\" href=\"winnow/combinator/impls/struct.ErrInto.html\" title=\"struct winnow::combinator::impls::ErrInto\">ErrInto</a>&lt;Self, I, O, E, E2&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;E2&gt;,</div></h4></section></summary><div class='docblock'>Convert the parser’s error to another type using <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\"><code>std::convert::From</code></a></div></details></div></details>","Parser<I, <I as Stream>::Slice, E>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5BU;+N%5D%3E-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/array/equality.rs.html#80-82\">source</a></span><a href=\"#impl-PartialEq%3C%5BU;+N%5D%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[U; N]</a>&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;U&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/array/equality.rs.html#85\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[U; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/array/equality.rs.html#89\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[U; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<[U; N]>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CBStr%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/bstr.rs.html#392\">source</a><a href=\"#impl-PartialEq%3CBStr%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"winnow/stream/bstr/struct.BStr.html\" title=\"struct winnow::stream::bstr::BStr\">BStr</a>&gt; for &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/bstr.rs.html#392\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"winnow/stream/bstr/struct.BStr.html\" title=\"struct winnow::stream::bstr::BStr\">BStr</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#261\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<BStr>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CBytes%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/bytes/bytes.rs.html#901\">source</a><a href=\"#impl-PartialEq%3CBytes%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"bytes/bytes/struct.Bytes.html\" title=\"struct bytes::bytes::Bytes\">Bytes</a>&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/bytes.rs.html#902\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"bytes/bytes/struct.Bytes.html\" title=\"struct bytes::bytes::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#261\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Bytes>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CBytes%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/bytes.rs.html#407\">source</a><a href=\"#impl-PartialEq%3CBytes%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"winnow/stream/bytes/struct.Bytes.html\" title=\"struct winnow::stream::bytes::Bytes\">Bytes</a>&gt; for &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/bytes.rs.html#407\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"winnow/stream/bytes/struct.Bytes.html\" title=\"struct winnow::stream::bytes::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#261\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Bytes>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CBytesMut%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/bytes/bytes_mut.rs.html#1675\">source</a><a href=\"#impl-PartialEq%3CBytesMut%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"bytes/bytes_mut/struct.BytesMut.html\" title=\"struct bytes::bytes_mut::BytesMut\">BytesMut</a>&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/bytes_mut.rs.html#1676\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"bytes/bytes_mut/struct.BytesMut.html\" title=\"struct bytes::bytes_mut::BytesMut\">BytesMut</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#261\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<BytesMut>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/vec/partial_eq.rs.html#25\">source</a></span><a href=\"#impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U, A&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;U&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/vec/partial_eq.rs.html#25\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/vec/partial_eq.rs.html#25\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Vec<U, A>>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CBStr%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/bstr.rs.html#411\">source</a><a href=\"#impl-PartialOrd%3CBStr%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"winnow/stream/bstr/struct.BStr.html\" title=\"struct winnow::stream::bstr::BStr\">BStr</a>&gt; for &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/bstr.rs.html#411\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"winnow/stream/bstr/struct.BStr.html\" title=\"struct winnow::stream::bstr::BStr\">BStr</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1335\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1353\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1371\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1389\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<BStr>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CBytes%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/bytes/bytes.rs.html#907\">source</a><a href=\"#impl-PartialOrd%3CBytes%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"bytes/bytes/struct.Bytes.html\" title=\"struct bytes::bytes::Bytes\">Bytes</a>&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/bytes.rs.html#908\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"bytes/bytes/struct.Bytes.html\" title=\"struct bytes::bytes::Bytes\">Bytes</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1335\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1353\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1371\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1389\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<Bytes>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CBytes%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/bytes.rs.html#426\">source</a><a href=\"#impl-PartialOrd%3CBytes%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"winnow/stream/bytes/struct.Bytes.html\" title=\"struct winnow::stream::bytes::Bytes\">Bytes</a>&gt; for &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/bytes.rs.html#426\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"winnow/stream/bytes/struct.Bytes.html\" title=\"struct winnow::stream::bytes::Bytes\">Bytes</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1335\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1353\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1371\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1389\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<Bytes>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CBytesMut%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/bytes/bytes_mut.rs.html#1681\">source</a><a href=\"#impl-PartialOrd%3CBytesMut%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"bytes/bytes_mut/struct.BytesMut.html\" title=\"struct bytes::bytes_mut::BytesMut\">BytesMut</a>&gt; for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytes/bytes_mut.rs.html#1682\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"bytes/bytes_mut/struct.BytesMut.html\" title=\"struct bytes::bytes_mut::BytesMut\">BytesMut</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1335\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1353\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1371\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1389\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<BytesMut>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Read-for-%26%5Bu8%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/io/impls.rs.html#236\">source</a></span><a href=\"#impl-Read-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a> for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"docblock\"><p>Read is implemented for <code>&amp;[u8]</code> by copying from the slice.</p>\n<p>Note that reading updates the slice to point to the yet unread part.\nThe slice will be empty when EOF is reached.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/io/impls.rs.html#238\">source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#tymethod.read\" class=\"fn\">read</a>(&amp;mut self, buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Pull some bytes from this source into the specified buffer, returning\nhow many bytes were read. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#tymethod.read\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_buf\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/io/impls.rs.html#256\">source</a><a href=\"#method.read_buf\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_buf\" class=\"fn\">read_buf</a>(&amp;mut self, cursor: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/io/borrowed_buf/struct.BorrowedCursor.html\" title=\"struct core::io::borrowed_buf::BorrowedCursor\">BorrowedCursor</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>read_buf</code>)</span></div></span><div class='docblock'>Pull some bytes from this source into the specified buffer. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_buf\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/io/impls.rs.html#267\">source</a><a href=\"#method.read_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_vectored\" class=\"fn\">read_vectored</a>(&amp;mut self, bufs: &amp;mut [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/struct.IoSliceMut.html\" title=\"struct std::io::IoSliceMut\">IoSliceMut</a>&lt;'_&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Like <code>read</code>, except that it reads into a slice of buffers. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_read_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/io/impls.rs.html#280\">source</a><a href=\"#method.is_read_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.is_read_vectored\" class=\"fn\">is_read_vectored</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>can_vector</code>)</span></div></span><div class='docblock'>Determines if this <code>Read</code>er has an efficient <code>read_vectored</code>\nimplementation. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.is_read_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_exact\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/io/impls.rs.html#285\">source</a><a href=\"#method.read_exact\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_exact\" class=\"fn\">read_exact</a>(&amp;mut self, buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads the exact number of bytes required to fill <code>buf</code>. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_exact\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_buf_exact\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/io/impls.rs.html#308\">source</a><a href=\"#method.read_buf_exact\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_buf_exact\" class=\"fn\">read_buf_exact</a>(&amp;mut self, cursor: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/io/borrowed_buf/struct.BorrowedCursor.html\" title=\"struct core::io::borrowed_buf::BorrowedCursor\">BorrowedCursor</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>read_buf</code>)</span></div></span><div class='docblock'>Reads the exact number of bytes required to fill <code>cursor</code>. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_buf_exact\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_to_end\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/io/impls.rs.html#324\">source</a><a href=\"#method.read_to_end\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_to_end\" class=\"fn\">read_to_end</a>(&amp;mut self, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads all bytes until EOF in this source, placing them into <code>buf</code>. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_to_end\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_to_string\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/io/impls.rs.html#333\">source</a><a href=\"#method.read_to_string\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_to_string\" class=\"fn\">read_to_string</a>(&amp;mut self, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads all bytes until EOF in this source, appending them to <code>buf</code>. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_to_string\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#1046-1048\">source</a></span><a href=\"#method.by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; &amp;mut Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates a “by reference” adaptor for this instance of <code>Read</code>. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.by_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bytes\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#1089-1091\">source</a></span><a href=\"#method.bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.bytes\" class=\"fn\">bytes</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/struct.Bytes.html\" title=\"struct std::io::Bytes\">Bytes</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Transforms this <code>Read</code> instance to an <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> over its bytes. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#1127-1129\">source</a></span><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.chain\" class=\"fn\">chain</a>&lt;R&gt;(self, next: R) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/struct.Chain.html\" title=\"struct std::io::Chain\">Chain</a>&lt;Self, R&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adapter which will chain this stream with another. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.chain\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#1166-1168\">source</a></span><a href=\"#method.take\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.take\" class=\"fn\">take</a>(self, limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/struct.Take.html\" title=\"struct std::io::Take\">Take</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adapter which will read at most <code>limit</code> bytes from it. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.take\">Read more</a></div></details></div></details>","Read","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RefToOwned%3C'a%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/der/referenced.rs.html#54\">source</a><a href=\"#impl-RefToOwned%3C'a%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"der/referenced/trait.RefToOwned.html\" title=\"trait der::referenced::RefToOwned\">RefToOwned</a>&lt;'a&gt; for &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Owned\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/der/referenced.rs.html#55\">source</a><a href=\"#associatedtype.Owned\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"der/referenced/trait.RefToOwned.html#associatedtype.Owned\" class=\"associatedtype\">Owned</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;</h4></section></summary><div class='docblock'>The resulting type after obtaining ownership.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_to_owned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/der/referenced.rs.html#57\">source</a><a href=\"#method.ref_to_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"der/referenced/trait.RefToOwned.html#tymethod.ref_to_owned\" class=\"fn\">ref_to_owned</a>(&amp;self) -&gt; &lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] as <a class=\"trait\" href=\"der/referenced/trait.RefToOwned.html\" title=\"trait der::referenced::RefToOwned\">RefToOwned</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"der/referenced/trait.RefToOwned.html#associatedtype.Owned\" title=\"type der::referenced::RefToOwned::Owned\">Owned</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&lt;&amp;&#39;a [u8] as RefToOwned&lt;&#39;a&gt;&gt;::Owned\">ⓘ</a></h4></section></summary><div class='docblock'>Creates a new object taking ownership of the data</div></details></div></details>","RefToOwned<'a>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Replacer-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/regex/regex/bytes.rs.html#2492\">source</a><a href=\"#impl-Replacer-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"regex/regex/bytes/trait.Replacer.html\" title=\"trait regex::regex::bytes::Replacer\">Replacer</a> for &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace_append\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/regex/regex/bytes.rs.html#2493\">source</a><a href=\"#method.replace_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"regex/regex/bytes/trait.Replacer.html#tymethod.replace_append\" class=\"fn\">replace_append</a>(&amp;mut self, caps: &amp;<a class=\"struct\" href=\"regex/regex/bytes/struct.Captures.html\" title=\"struct regex::regex::bytes::Captures\">Captures</a>&lt;'_&gt;, dst: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class='docblock'>Appends possibly empty data to <code>dst</code> to replace the current match. <a href=\"regex/regex/bytes/trait.Replacer.html#tymethod.replace_append\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.no_expansion\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/regex/regex/bytes.rs.html#2497\">source</a><a href=\"#method.no_expansion\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"regex/regex/bytes/trait.Replacer.html#method.no_expansion\" class=\"fn\">no_expansion</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'_, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;&gt;</h4></section></summary><div class='docblock'>Return a fixed unchanging replacement byte string. <a href=\"regex/regex/bytes/trait.Replacer.html#method.no_expansion\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/regex/regex/bytes.rs.html#2467\">source</a><a href=\"#method.by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"regex/regex/bytes/trait.Replacer.html#method.by_ref\" class=\"fn\">by_ref</a>&lt;'r&gt;(&amp;'r mut self) -&gt; <a class=\"struct\" href=\"regex/regex/bytes/struct.ReplacerRef.html\" title=\"struct regex::regex::bytes::ReplacerRef\">ReplacerRef</a>&lt;'r, Self&gt;</h4></section></summary><div class='docblock'>Returns a type that implements <code>Replacer</code>, but that borrows and wraps\nthis <code>Replacer</code>. <a href=\"regex/regex/bytes/trait.Replacer.html#method.by_ref\">Read more</a></div></details></div></details>","Replacer","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SignableBytes-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/namada_core/key/mod.rs.html#462\">source</a><a href=\"#impl-SignableBytes-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"namada_core/key/trait.SignableBytes.html\" title=\"trait namada_core::key::SignableBytes\">SignableBytes</a> for &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.signable_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/namada_core/key/mod.rs.html#455\">source</a><a href=\"#method.signable_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"namada_core/key/trait.SignableBytes.html#method.signable_hash\" class=\"fn\">signable_hash</a>&lt;H&gt;(&amp;self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">32</a>]<div class=\"where\">where\n    H: <a class=\"trait\" href=\"namada_merkle_tree/trait.StorageHasher.html\" title=\"trait namada_merkle_tree::StorageHasher\">StorageHasher</a>,</div></h4></section></summary><div class='docblock'>Calculate a hash value to sign over.</div></details></div></details>","SignableBytes","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SliceLen-for-%26%5BT%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#81\">source</a><a href=\"#impl-SliceLen-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"winnow/stream/trait.SliceLen.html\" title=\"trait winnow::stream::SliceLen\">SliceLen</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#83\">source</a><a href=\"#method.slice_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.SliceLen.html#tymethod.slice_len\" class=\"fn\">slice_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the input length, as indicated by its name,\nand the name of the trait itself</div></details></div></details>","SliceLen","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Stream-for-%26%5BT%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#221-223\">source</a><a href=\"#impl-Stream-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'i, T&gt; <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a> for &amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Token\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#225\">source</a><a href=\"#associatedtype.Token\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"winnow/stream/trait.Stream.html#associatedtype.Token\" class=\"associatedtype\">Token</a> = T</h4></section></summary><div class='docblock'>The smallest unit being parsed <a href=\"winnow/stream/trait.Stream.html#associatedtype.Token\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Slice\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#226\">source</a><a href=\"#associatedtype.Slice\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"winnow/stream/trait.Stream.html#associatedtype.Slice\" class=\"associatedtype\">Slice</a> = &amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Sequence of <code>Token</code>s <a href=\"winnow/stream/trait.Stream.html#associatedtype.Slice\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IterOffsets\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#228\">source</a><a href=\"#associatedtype.IterOffsets\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"winnow/stream/trait.Stream.html#associatedtype.IterOffsets\" class=\"associatedtype\">IterOffsets</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/iter/adapters/enumerate/struct.Enumerate.html\" title=\"struct core::iter::adapters::enumerate::Enumerate\">Enumerate</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/iter/adapters/cloned/struct.Cloned.html\" title=\"struct core::iter::adapters::cloned::Cloned\">Cloned</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'i, T&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Iterate with the offset from the current location</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Checkpoint\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#230\">source</a><a href=\"#associatedtype.Checkpoint\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"winnow/stream/trait.Stream.html#associatedtype.Checkpoint\" class=\"associatedtype\">Checkpoint</a> = <a class=\"struct\" href=\"winnow/stream/struct.Checkpoint.html\" title=\"struct winnow::stream::Checkpoint\">Checkpoint</a>&lt;&amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>, &amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>&gt;</h4></section></summary><div class='docblock'>A parse location within the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_offsets\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#233\">source</a><a href=\"#method.iter_offsets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Stream.html#tymethod.iter_offsets\" class=\"fn\">iter_offsets</a>(&amp;self) -&gt; &lt;&amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a> as <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.IterOffsets\" title=\"type winnow::stream::Stream::IterOffsets\">IterOffsets</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&lt;&amp;&#39;i [T] as Stream&gt;::IterOffsets\">ⓘ</a></h4></section></summary><div class='docblock'>Iterate with the offset from the current location</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.eof_offset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#237\">source</a><a href=\"#method.eof_offset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Stream.html#tymethod.eof_offset\" class=\"fn\">eof_offset</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the offset to the end of the input</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_token\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#242\">source</a><a href=\"#method.next_token\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Stream.html#tymethod.next_token\" class=\"fn\">next_token</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a> as <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Token\" title=\"type winnow::stream::Stream::Token\">Token</a>&gt;</h4></section></summary><div class='docblock'>Split off the next token from the input</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek_token\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#249\">source</a><a href=\"#method.peek_token\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Stream.html#tymethod.peek_token\" class=\"fn\">peek_token</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a> as <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Token\" title=\"type winnow::stream::Stream::Token\">Token</a>&gt;</h4></section></summary><div class='docblock'>Split off the next token from the input</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offset_for\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#258-260\">source</a><a href=\"#method.offset_for\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Stream.html#tymethod.offset_for\" class=\"fn\">offset_for</a>&lt;P&gt;(&amp;self, predicate: P) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a> as <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Token\" title=\"type winnow::stream::Stream::Token\">Token</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Finds the offset of the next matching token</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offset_at\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#265\">source</a><a href=\"#method.offset_at\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Stream.html#tymethod.offset_at\" class=\"fn\">offset_at</a>(&amp;self, tokens: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"winnow/error/enum.Needed.html\" title=\"enum winnow::error::Needed\">Needed</a>&gt;</h4></section></summary><div class='docblock'>Get the offset for the number of <code>tokens</code> into the stream <a href=\"winnow/stream/trait.Stream.html#tymethod.offset_at\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#273\">source</a><a href=\"#method.next_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Stream.html#tymethod.next_slice\" class=\"fn\">next_slice</a>(&amp;mut self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; &lt;&amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a> as <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Slice\" title=\"type winnow::stream::Stream::Slice\">Slice</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&lt;&amp;&#39;i [T] as Stream&gt;::Slice\">ⓘ</a></h4></section></summary><div class='docblock'>Split off a slice of tokens from the input <a href=\"winnow/stream/trait.Stream.html#tymethod.next_slice\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#279\">source</a><a href=\"#method.peek_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Stream.html#tymethod.peek_slice\" class=\"fn\">peek_slice</a>(&amp;self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; &lt;&amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a> as <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Slice\" title=\"type winnow::stream::Stream::Slice\">Slice</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&lt;&amp;&#39;i [T] as Stream&gt;::Slice\">ⓘ</a></h4></section></summary><div class='docblock'>Split off a slice of tokens from the input</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checkpoint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#285\">source</a><a href=\"#method.checkpoint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Stream.html#tymethod.checkpoint\" class=\"fn\">checkpoint</a>(&amp;self) -&gt; &lt;&amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a> as <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Checkpoint\" title=\"type winnow::stream::Stream::Checkpoint\">Checkpoint</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&lt;&amp;&#39;i [T] as Stream&gt;::Checkpoint\">ⓘ</a></h4></section></summary><div class='docblock'>Save the current parse location within the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#289\">source</a><a href=\"#method.reset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Stream.html#tymethod.reset\" class=\"fn\">reset</a>(&amp;mut self, checkpoint: &amp;&lt;&amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a> as <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Checkpoint\" title=\"type winnow::stream::Stream::Checkpoint\">Checkpoint</a>)</h4></section></summary><div class='docblock'>Revert the stream to a prior <a href=\"winnow/stream/trait.Stream.html#associatedtype.Checkpoint\" title=\"associated type winnow::stream::Stream::Checkpoint::Checkpoint\"><code>Self::Checkpoint</code></a> <a href=\"winnow/stream/trait.Stream.html#tymethod.reset\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.raw\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#294\">source</a><a href=\"#method.raw\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Stream.html#tymethod.raw\" class=\"fn\">raw</a>(&amp;self) -&gt; &amp;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a></h4></section></summary><div class='docblock'>Return the inner-most stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.finish\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#196\">source</a><a href=\"#method.finish\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Stream.html#method.finish\" class=\"fn\">finish</a>(&amp;mut self) -&gt; Self::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Slice\" title=\"type winnow::stream::Stream::Slice\">Slice</a></h4></section></summary><div class='docblock'>Advance to the end of the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek_finish\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#201-203\">source</a><a href=\"#method.peek_finish\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Stream.html#method.peek_finish\" class=\"fn\">peek_finish</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Slice\" title=\"type winnow::stream::Stream::Slice\">Slice</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Advance to the end of the stream</div></details></div></details>","Stream","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StreamIsPartial-for-%26%5BT%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#663\">source</a><a href=\"#impl-StreamIsPartial-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"winnow/stream/trait.StreamIsPartial.html\" title=\"trait winnow::stream::StreamIsPartial\">StreamIsPartial</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PartialState\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#664\">source</a><a href=\"#associatedtype.PartialState\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"winnow/stream/trait.StreamIsPartial.html#associatedtype.PartialState\" class=\"associatedtype\">PartialState</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>Whether the stream is currently partial or complete</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.complete\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#667\">source</a><a href=\"#method.complete\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.StreamIsPartial.html#tymethod.complete\" class=\"fn\">complete</a>(&amp;mut self) -&gt; &lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a> as <a class=\"trait\" href=\"winnow/stream/trait.StreamIsPartial.html\" title=\"trait winnow::stream::StreamIsPartial\">StreamIsPartial</a>&gt;::<a class=\"associatedtype\" href=\"winnow/stream/trait.StreamIsPartial.html#associatedtype.PartialState\" title=\"type winnow::stream::StreamIsPartial::PartialState\">PartialState</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&lt;&amp;[T] as StreamIsPartial&gt;::PartialState\">ⓘ</a></h4></section></summary><div class='docblock'>Mark the stream is complete</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.restore_partial\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#670\">source</a><a href=\"#method.restore_partial\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.StreamIsPartial.html#tymethod.restore_partial\" class=\"fn\">restore_partial</a>(&amp;mut self, _state: &lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a> as <a class=\"trait\" href=\"winnow/stream/trait.StreamIsPartial.html\" title=\"trait winnow::stream::StreamIsPartial\">StreamIsPartial</a>&gt;::<a class=\"associatedtype\" href=\"winnow/stream/trait.StreamIsPartial.html#associatedtype.PartialState\" title=\"type winnow::stream::StreamIsPartial::PartialState\">PartialState</a>)</h4></section></summary><div class='docblock'>Restore the stream back to its previous state</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_partial_supported\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#673\">source</a><a href=\"#method.is_partial_supported\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.StreamIsPartial.html#tymethod.is_partial_supported\" class=\"fn\">is_partial_supported</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Report whether the <a href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\"><code>Stream</code></a> is can ever be incomplete</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_partial\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#658\">source</a><a href=\"#method.is_partial\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.StreamIsPartial.html#method.is_partial\" class=\"fn\">is_partial</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Report whether the <a href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\"><code>Stream</code></a> is currently incomplete</div></details></div></details>","StreamIsPartial","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CBitStringRef%3C'a%3E%3E-for-%26%5Bu8%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/der/asn1/bit_string.rs.html#178\">source</a><a href=\"#impl-TryFrom%3CBitStringRef%3C'a%3E%3E-for-%26%5Bu8%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"der/asn1/bit_string/struct.BitStringRef.html\" title=\"struct der::asn1::bit_string::BitStringRef\">BitStringRef</a>&lt;'a&gt;&gt; for &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/der/asn1/bit_string.rs.html#179\">source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"der/error/struct.Error.html\" title=\"struct der::error::Error\">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/der/asn1/bit_string.rs.html#181\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(bit_string: <a class=\"struct\" href=\"der/asn1/bit_string/struct.BitStringRef.html\" title=\"struct der::asn1::bit_string::BitStringRef\">BitStringRef</a>&lt;'a&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], <a class=\"struct\" href=\"der/error/struct.Error.html\" title=\"struct der::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<BitStringRef<'a>>","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpdateSlice-for-%26%5BT%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1229-1231\">source</a><a href=\"#impl-UpdateSlice-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"winnow/stream/trait.UpdateSlice.html\" title=\"trait winnow::stream::UpdateSlice\">UpdateSlice</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1234\">source</a><a href=\"#method.update_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.UpdateSlice.html#tymethod.update_slice\" class=\"fn\">update_slice</a>(self, inner: &lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a> as <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Slice\" title=\"type winnow::stream::Stream::Slice\">Slice</a>) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Convert an <code>Output</code> type to be used as <code>Stream</code></div></details></div></details>","UpdateSlice","namada_merkle_tree::StorageBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ZeroFrom%3C'zf,+%5BT%5D%3E-for-%26%5BT%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerofrom/zero_from.rs.html#125\">source</a><a href=\"#impl-ZeroFrom%3C'zf,+%5BT%5D%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'zf, T&gt; <a class=\"trait\" href=\"zerofrom/zero_from/trait.ZeroFrom.html\" title=\"trait zerofrom::zero_from::ZeroFrom\">ZeroFrom</a>&lt;'zf, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>&gt; for &amp;'zf <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerofrom/zero_from.rs.html#127\">source</a><a href=\"#method.zero_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerofrom/zero_from/trait.ZeroFrom.html#tymethod.zero_from\" class=\"fn\">zero_from</a>(other: &amp;'zf <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>) -&gt; &amp;'zf <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Clone the other <code>C</code> into a struct that may retain references into <code>C</code>.</div></details></div></details>","ZeroFrom<'zf, [T]>","namada_merkle_tree::StorageBytes"],["<section id=\"impl-EncodeLike%3CVec%3CU%3E%3E-for-%26%5BT%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#1223\">source</a><a href=\"#impl-EncodeLike%3CVec%3CU%3E%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"parity_scale_codec/encode_like/trait.EncodeLike.html\" title=\"trait parity_scale_codec::encode_like::EncodeLike\">EncodeLike</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"parity_scale_codec/encode_like/trait.EncodeLike.html\" title=\"trait parity_scale_codec::encode_like::EncodeLike\">EncodeLike</a>&lt;U&gt;,\n    U: <a class=\"trait\" href=\"parity_scale_codec/codec/trait.Encode.html\" title=\"trait parity_scale_codec::codec::Encode\">Encode</a>,</div></h3></section>","EncodeLike<Vec<U>>","namada_merkle_tree::StorageBytes"],["<section id=\"impl-EncodeLike%3CVecDeque%3CU%3E%3E-for-%26%5BT%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#1343\">source</a><a href=\"#impl-EncodeLike%3CVecDeque%3CU%3E%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"parity_scale_codec/encode_like/trait.EncodeLike.html\" title=\"trait parity_scale_codec::encode_like::EncodeLike\">EncodeLike</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/collections/vec_deque/struct.VecDeque.html\" title=\"struct alloc::collections::vec_deque::VecDeque\">VecDeque</a>&lt;U&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"parity_scale_codec/encode_like/trait.EncodeLike.html\" title=\"trait parity_scale_codec::encode_like::EncodeLike\">EncodeLike</a>&lt;U&gt;,\n    U: <a class=\"trait\" href=\"parity_scale_codec/codec/trait.Encode.html\" title=\"trait parity_scale_codec::codec::Encode\">Encode</a>,</div></h3></section>","EncodeLike<VecDeque<U>>","namada_merkle_tree::StorageBytes"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[10613,337864]}