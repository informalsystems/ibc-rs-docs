(function() {
    var type_impls = Object.fromEntries([["bip32",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-ExtendedPrivateKey%3CK%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bip32/extended_key/private_key.rs.html#36\">source</a><a href=\"#impl-Clone-for-ExtendedPrivateKey%3CK%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"bip32/trait.PrivateKey.html\" title=\"trait bip32::PrivateKey\">PrivateKey</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"bip32/struct.ExtendedPrivateKey.html\" title=\"struct bip32::ExtendedPrivateKey\">ExtendedPrivateKey</a>&lt;K&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bip32/extended_key/private_key.rs.html#36\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bip32/struct.ExtendedPrivateKey.html\" title=\"struct bip32::ExtendedPrivateKey\">ExtendedPrivateKey</a>&lt;K&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","bip32::extended_key::private_key::XPrv"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstantTimeEq-for-ExtendedPrivateKey%3CK%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bip32/extended_key/private_key.rs.html#157-179\">source</a><a href=\"#impl-ConstantTimeEq-for-ExtendedPrivateKey%3CK%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K&gt; <a class=\"trait\" href=\"subtle/trait.ConstantTimeEq.html\" title=\"trait subtle::ConstantTimeEq\">ConstantTimeEq</a> for <a class=\"struct\" href=\"bip32/struct.ExtendedPrivateKey.html\" title=\"struct bip32::ExtendedPrivateKey\">ExtendedPrivateKey</a>&lt;K&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"bip32/trait.PrivateKey.html\" title=\"trait bip32::PrivateKey\">PrivateKey</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ct_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bip32/extended_key/private_key.rs.html#161-178\">source</a><a href=\"#method.ct_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"subtle/trait.ConstantTimeEq.html#tymethod.ct_eq\" class=\"fn\">ct_eq</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"struct\" href=\"subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a></h4></section></summary><div class='docblock'>Determine if two items are equal. <a href=\"subtle/trait.ConstantTimeEq.html#tymethod.ct_eq\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ct_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/subtle/lib.rs.html#284\">source</a><a href=\"#method.ct_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"subtle/trait.ConstantTimeEq.html#method.ct_ne\" class=\"fn\">ct_ne</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"struct\" href=\"subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a></h4></section></summary><div class='docblock'>Determine if two items are NOT equal. <a href=\"subtle/trait.ConstantTimeEq.html#method.ct_ne\">Read more</a></div></details></div></details>","ConstantTimeEq","bip32::extended_key::private_key::XPrv"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-ExtendedPrivateKey%3CK%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bip32/extended_key/private_key.rs.html#181-192\">source</a><a href=\"#impl-Debug-for-ExtendedPrivateKey%3CK%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"bip32/struct.ExtendedPrivateKey.html\" title=\"struct bip32::ExtendedPrivateKey\">ExtendedPrivateKey</a>&lt;K&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"bip32/trait.PrivateKey.html\" title=\"trait bip32::PrivateKey\">PrivateKey</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bip32/extended_key/private_key.rs.html#185-191\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","bip32::extended_key::private_key::XPrv"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ExtendedPrivateKey%3CK%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bip32/extended_key/private_key.rs.html#45-155\">source</a><a href=\"#impl-ExtendedPrivateKey%3CK%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K&gt; <a class=\"struct\" href=\"bip32/struct.ExtendedPrivateKey.html\" title=\"struct bip32::ExtendedPrivateKey\">ExtendedPrivateKey</a>&lt;K&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"bip32/trait.PrivateKey.html\" title=\"trait bip32::PrivateKey\">PrivateKey</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_DEPTH\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/bip32/extended_key/private_key.rs.html#50\">source</a><h4 class=\"code-header\">pub const <a href=\"bip32/struct.ExtendedPrivateKey.html#associatedconstant.MAX_DEPTH\" class=\"constant\">MAX_DEPTH</a>: <a class=\"type\" href=\"bip32/type.Depth.html\" title=\"type bip32::Depth\">Depth</a> = 255u8</h4></section></summary><div class=\"docblock\"><p>Maximum derivation depth.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.derive_from_path\" class=\"method\"><a class=\"src rightside\" href=\"src/bip32/extended_key/private_key.rs.html#54-61\">source</a><h4 class=\"code-header\">pub fn <a href=\"bip32/struct.ExtendedPrivateKey.html#tymethod.derive_from_path\" class=\"fn\">derive_from_path</a>&lt;S&gt;(seed: S, path: &amp;<a class=\"struct\" href=\"bip32/struct.DerivationPath.html\" title=\"struct bip32::DerivationPath\">DerivationPath</a>) -&gt; <a class=\"type\" href=\"bip32/type.Result.html\" title=\"type bip32::Result\">Result</a>&lt;Self&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;,</div></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>alloc</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Derive a child key from the given <a href=\"bip32/struct.DerivationPath.html\" title=\"struct bip32::DerivationPath\"><code>DerivationPath</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/bip32/extended_key/private_key.rs.html#64-86\">source</a><h4 class=\"code-header\">pub fn <a href=\"bip32/struct.ExtendedPrivateKey.html#tymethod.new\" class=\"fn\">new</a>&lt;S&gt;(seed: S) -&gt; <a class=\"type\" href=\"bip32/type.Result.html\" title=\"type bip32::Result\">Result</a>&lt;Self&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Create the root extended key for the given seed value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.derive_child\" class=\"method\"><a class=\"src rightside\" href=\"src/bip32/extended_key/private_key.rs.html#89-114\">source</a><h4 class=\"code-header\">pub fn <a href=\"bip32/struct.ExtendedPrivateKey.html#tymethod.derive_child\" class=\"fn\">derive_child</a>(&amp;self, child_number: <a class=\"struct\" href=\"bip32/struct.ChildNumber.html\" title=\"struct bip32::ChildNumber\">ChildNumber</a>) -&gt; <a class=\"type\" href=\"bip32/type.Result.html\" title=\"type bip32::Result\">Result</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Derive a child key for a particular <a href=\"bip32/struct.ChildNumber.html\" title=\"struct bip32::ChildNumber\"><code>ChildNumber</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.private_key\" class=\"method\"><a class=\"src rightside\" href=\"src/bip32/extended_key/private_key.rs.html#117-119\">source</a><h4 class=\"code-header\">pub fn <a href=\"bip32/struct.ExtendedPrivateKey.html#tymethod.private_key\" class=\"fn\">private_key</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a></h4></section></summary><div class=\"docblock\"><p>Borrow the derived private key value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.public_key\" class=\"method\"><a class=\"src rightside\" href=\"src/bip32/extended_key/private_key.rs.html#122-124\">source</a><h4 class=\"code-header\">pub fn <a href=\"bip32/struct.ExtendedPrivateKey.html#tymethod.public_key\" class=\"fn\">public_key</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bip32/struct.ExtendedPublicKey.html\" title=\"struct bip32::ExtendedPublicKey\">ExtendedPublicKey</a>&lt;K::<a class=\"associatedtype\" href=\"bip32/trait.PrivateKey.html#associatedtype.PublicKey\" title=\"type bip32::PrivateKey::PublicKey\">PublicKey</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Serialize the derived public key as bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.attrs\" class=\"method\"><a class=\"src rightside\" href=\"src/bip32/extended_key/private_key.rs.html#128-130\">source</a><h4 class=\"code-header\">pub fn <a href=\"bip32/struct.ExtendedPrivateKey.html#tymethod.attrs\" class=\"fn\">attrs</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"bip32/struct.ExtendedKeyAttrs.html\" title=\"struct bip32::ExtendedKeyAttrs\">ExtendedKeyAttrs</a></h4></section></summary><div class=\"docblock\"><p>Get attributes for this key such as depth, parent fingerprint,\nchild number, and chain code.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/bip32/extended_key/private_key.rs.html#133-135\">source</a><h4 class=\"code-header\">pub fn <a href=\"bip32/struct.ExtendedPrivateKey.html#tymethod.to_bytes\" class=\"fn\">to_bytes</a>(&amp;self) -&gt; <a class=\"type\" href=\"bip32/type.PrivateKeyBytes.html\" title=\"type bip32::PrivateKeyBytes\">PrivateKeyBytes</a></h4></section></summary><div class=\"docblock\"><p>Serialize the raw private key as a byte array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_extended_key\" class=\"method\"><a class=\"src rightside\" href=\"src/bip32/extended_key/private_key.rs.html#138-148\">source</a><h4 class=\"code-header\">pub fn <a href=\"bip32/struct.ExtendedPrivateKey.html#tymethod.to_extended_key\" class=\"fn\">to_extended_key</a>(&amp;self, prefix: <a class=\"struct\" href=\"bip32/struct.Prefix.html\" title=\"struct bip32::Prefix\">Prefix</a>) -&gt; <a class=\"struct\" href=\"bip32/struct.ExtendedKey.html\" title=\"struct bip32::ExtendedKey\">ExtendedKey</a></h4></section></summary><div class=\"docblock\"><p>Serialize this key as an <a href=\"bip32/struct.ExtendedKey.html\" title=\"struct bip32::ExtendedKey\"><code>ExtendedKey</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_string\" class=\"method\"><a class=\"src rightside\" href=\"src/bip32/extended_key/private_key.rs.html#152-154\">source</a><h4 class=\"code-header\">pub fn <a href=\"bip32/struct.ExtendedPrivateKey.html#tymethod.to_string\" class=\"fn\">to_string</a>(&amp;self, prefix: <a class=\"struct\" href=\"bip32/struct.Prefix.html\" title=\"struct bip32::Prefix\">Prefix</a>) -&gt; <a class=\"struct\" href=\"zeroize/struct.Zeroizing.html\" title=\"struct zeroize::Zeroizing\">Zeroizing</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>alloc</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Serialize this key as a self-<a href=\"zeroize/struct.Zeroizing.html\" title=\"struct zeroize::Zeroizing\"><code>Zeroizing</code></a> <code>String</code>.</p>\n</div></details></div></details>",0,"bip32::extended_key::private_key::XPrv"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-ExtendedPrivateKey%3CK%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bip32/extended_key/private_key.rs.html#207-216\">source</a><a href=\"#impl-FromStr-for-ExtendedPrivateKey%3CK%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"struct\" href=\"bip32/struct.ExtendedPrivateKey.html\" title=\"struct bip32::ExtendedPrivateKey\">ExtendedPrivateKey</a>&lt;K&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"bip32/trait.PrivateKey.html\" title=\"trait bip32::PrivateKey\">PrivateKey</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/bip32/extended_key/private_key.rs.html#211\">source</a><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"enum\" href=\"bip32/enum.Error.html\" title=\"enum bip32::Error\">Error</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bip32/extended_key/private_key.rs.html#213-215\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(xprv: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"type\" href=\"bip32/type.Result.html\" title=\"type bip32::Result\">Result</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","bip32::extended_key::private_key::XPrv"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-ExtendedPrivateKey%3CK%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bip32/extended_key/private_key.rs.html#198-205\">source</a><a href=\"#impl-PartialEq-for-ExtendedPrivateKey%3CK%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"bip32/struct.ExtendedPrivateKey.html\" title=\"struct bip32::ExtendedPrivateKey\">ExtendedPrivateKey</a>&lt;K&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"bip32/trait.PrivateKey.html\" title=\"trait bip32::PrivateKey\">PrivateKey</a>,</div></h3></section></summary><div class=\"docblock\"><p>NOTE: uses <a href=\"subtle/trait.ConstantTimeEq.html\" title=\"trait subtle::ConstantTimeEq\"><code>ConstantTimeEq</code></a> internally</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bip32/extended_key/private_key.rs.html#202-204\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#261\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","bip32::extended_key::private_key::XPrv"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CExtendedKey%3E-for-ExtendedPrivateKey%3CK%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bip32/extended_key/private_key.rs.html#218-234\">source</a><a href=\"#impl-TryFrom%3CExtendedKey%3E-for-ExtendedPrivateKey%3CK%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"bip32/struct.ExtendedKey.html\" title=\"struct bip32::ExtendedKey\">ExtendedKey</a>&gt; for <a class=\"struct\" href=\"bip32/struct.ExtendedPrivateKey.html\" title=\"struct bip32::ExtendedPrivateKey\">ExtendedPrivateKey</a>&lt;K&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"bip32/trait.PrivateKey.html\" title=\"trait bip32::PrivateKey\">PrivateKey</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/bip32/extended_key/private_key.rs.html#222\">source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"bip32/enum.Error.html\" title=\"enum bip32::Error\">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bip32/extended_key/private_key.rs.html#224-233\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(extended_key: <a class=\"struct\" href=\"bip32/struct.ExtendedKey.html\" title=\"struct bip32::ExtendedKey\">ExtendedKey</a>) -&gt; <a class=\"type\" href=\"bip32/type.Result.html\" title=\"type bip32::Result\">Result</a>&lt;<a class=\"struct\" href=\"bip32/struct.ExtendedPrivateKey.html\" title=\"struct bip32::ExtendedPrivateKey\">ExtendedPrivateKey</a>&lt;K&gt;&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<ExtendedKey>","bip32::extended_key::private_key::XPrv"],["<section id=\"impl-Eq-for-ExtendedPrivateKey%3CK%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bip32/extended_key/private_key.rs.html#195\">source</a><a href=\"#impl-Eq-for-ExtendedPrivateKey%3CK%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"bip32/struct.ExtendedPrivateKey.html\" title=\"struct bip32::ExtendedPrivateKey\">ExtendedPrivateKey</a>&lt;K&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"bip32/trait.PrivateKey.html\" title=\"trait bip32::PrivateKey\">PrivateKey</a>,</div></h3></section><div class=\"docblock\"><p>NOTE: uses <a href=\"subtle/trait.ConstantTimeEq.html\" title=\"trait subtle::ConstantTimeEq\"><code>ConstantTimeEq</code></a> internally</p>\n</div>","Eq","bip32::extended_key::private_key::XPrv"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[23724]}