(function() {
    var type_impls = Object.fromEntries([["namada_merkle_tree",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-SparseMerkleTree%3CH,+K,+V,+S,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sparse_merkle_tree/tree.rs.html#56\">source</a><a href=\"#impl-Debug-for-SparseMerkleTree%3CH,+K,+V,+S,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;H, K, V, S, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"sparse_merkle_tree/tree/struct.SparseMerkleTree.html\" title=\"struct sparse_merkle_tree::tree::SparseMerkleTree\">SparseMerkleTree</a>&lt;H, K, V, S, N&gt;<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"sparse_merkle_tree/traits/trait.Hasher.html\" title=\"trait sparse_merkle_tree::traits::Hasher\">Hasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"sparse_merkle_tree/traits/trait.Key.html\" title=\"trait sparse_merkle_tree::traits::Key\">Key</a>&lt;N&gt;,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"sparse_merkle_tree/traits/trait.Value.html\" title=\"trait sparse_merkle_tree::traits::Value\">Value</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"sparse_merkle_tree/traits/trait.Store.html\" title=\"trait sparse_merkle_tree::traits::Store\">Store</a>&lt;K, V, N&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sparse_merkle_tree/tree.rs.html#56\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","namada_merkle_tree::Smt","namada_merkle_tree::Amt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-SparseMerkleTree%3CH,+K,+V,+S,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sparse_merkle_tree/tree.rs.html#69-74\">source</a><a href=\"#impl-Default-for-SparseMerkleTree%3CH,+K,+V,+S,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;H, K, V, S, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"sparse_merkle_tree/tree/struct.SparseMerkleTree.html\" title=\"struct sparse_merkle_tree::tree::SparseMerkleTree\">SparseMerkleTree</a>&lt;H, K, V, S, N&gt;<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sparse_merkle_tree/traits/trait.Hasher.html\" title=\"trait sparse_merkle_tree::traits::Hasher\">Hasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    K: <a class=\"trait\" href=\"sparse_merkle_tree/traits/trait.Key.html\" title=\"trait sparse_merkle_tree::traits::Key\">Key</a>&lt;N&gt;,\n    V: <a class=\"trait\" href=\"sparse_merkle_tree/traits/trait.Value.html\" title=\"trait sparse_merkle_tree::traits::Value\">Value</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,\n    S: <a class=\"trait\" href=\"sparse_merkle_tree/traits/trait.Store.html\" title=\"trait sparse_merkle_tree::traits::Store\">Store</a>&lt;K, V, N&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sparse_merkle_tree/tree.rs.html#76\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"sparse_merkle_tree/tree/struct.SparseMerkleTree.html\" title=\"struct sparse_merkle_tree::tree::SparseMerkleTree\">SparseMerkleTree</a>&lt;H, K, V, S, N&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","namada_merkle_tree::Smt","namada_merkle_tree::Amt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SparseMerkleTree%3CH,+K,+V,+S,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sparse_merkle_tree/tree.rs.html#81-86\">source</a><a href=\"#impl-SparseMerkleTree%3CH,+K,+V,+S,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;H, K, V, S, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"sparse_merkle_tree/tree/struct.SparseMerkleTree.html\" title=\"struct sparse_merkle_tree::tree::SparseMerkleTree\">SparseMerkleTree</a>&lt;H, K, V, S, N&gt;<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sparse_merkle_tree/traits/trait.Hasher.html\" title=\"trait sparse_merkle_tree::traits::Hasher\">Hasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    K: <a class=\"trait\" href=\"sparse_merkle_tree/traits/trait.Key.html\" title=\"trait sparse_merkle_tree::traits::Key\">Key</a>&lt;N&gt;,\n    V: <a class=\"trait\" href=\"sparse_merkle_tree/traits/trait.Value.html\" title=\"trait sparse_merkle_tree::traits::Value\">Value</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,\n    S: <a class=\"trait\" href=\"sparse_merkle_tree/traits/trait.Store.html\" title=\"trait sparse_merkle_tree::traits::Store\">Store</a>&lt;K, V, N&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/sparse_merkle_tree/tree.rs.html#89\">source</a><h4 class=\"code-header\">pub fn <a href=\"sparse_merkle_tree/tree/struct.SparseMerkleTree.html#tymethod.new\" class=\"fn\">new</a>(root: <a class=\"struct\" href=\"namada_merkle_tree/struct.H256.html\" title=\"struct namada_merkle_tree::H256\">H256</a>, store: S) -&gt; <a class=\"struct\" href=\"sparse_merkle_tree/tree/struct.SparseMerkleTree.html\" title=\"struct sparse_merkle_tree::tree::SparseMerkleTree\">SparseMerkleTree</a>&lt;H, K, V, S, N&gt;</h4></section></summary><div class=\"docblock\"><p>Build a merkle tree from root and store</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.root\" class=\"method\"><a class=\"src rightside\" href=\"src/sparse_merkle_tree/tree.rs.html#98\">source</a><h4 class=\"code-header\">pub fn <a href=\"sparse_merkle_tree/tree/struct.SparseMerkleTree.html#tymethod.root\" class=\"fn\">root</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"namada_merkle_tree/struct.H256.html\" title=\"struct namada_merkle_tree::H256\">H256</a></h4></section></summary><div class=\"docblock\"><p>Merkle root</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/sparse_merkle_tree/tree.rs.html#103\">source</a><h4 class=\"code-header\">pub fn <a href=\"sparse_merkle_tree/tree/struct.SparseMerkleTree.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check empty of the tree</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_store\" class=\"method\"><a class=\"src rightside\" href=\"src/sparse_merkle_tree/tree.rs.html#108\">source</a><h4 class=\"code-header\">pub fn <a href=\"sparse_merkle_tree/tree/struct.SparseMerkleTree.html#tymethod.take_store\" class=\"fn\">take_store</a>(self) -&gt; S</h4></section></summary><div class=\"docblock\"><p>Destroy current tree and retake store</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.store\" class=\"method\"><a class=\"src rightside\" href=\"src/sparse_merkle_tree/tree.rs.html#113\">source</a><h4 class=\"code-header\">pub fn <a href=\"sparse_merkle_tree/tree/struct.SparseMerkleTree.html#tymethod.store\" class=\"fn\">store</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a></h4></section></summary><div class=\"docblock\"><p>Get backend store</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.store_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/sparse_merkle_tree/tree.rs.html#118\">source</a><h4 class=\"code-header\">pub fn <a href=\"sparse_merkle_tree/tree/struct.SparseMerkleTree.html#tymethod.store_mut\" class=\"fn\">store_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut S</a></h4></section></summary><div class=\"docblock\"><p>Get mutable backend store</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update\" class=\"method\"><a class=\"src rightside\" href=\"src/sparse_merkle_tree/tree.rs.html#124\">source</a><h4 class=\"code-header\">pub fn <a href=\"sparse_merkle_tree/tree/struct.SparseMerkleTree.html#tymethod.update\" class=\"fn\">update</a>(&amp;mut self, key: K, value: V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;<a class=\"struct\" href=\"namada_merkle_tree/struct.H256.html\" title=\"struct namada_merkle_tree::H256\">H256</a>, <a class=\"enum\" href=\"sparse_merkle_tree/error/enum.Error.html\" title=\"enum sparse_merkle_tree::error::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Update a leaf, return new merkle root\nset to zero value to delete a key</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/sparse_merkle_tree/tree.rs.html#229\">source</a><h4 class=\"code-header\">pub fn <a href=\"sparse_merkle_tree/tree/struct.SparseMerkleTree.html#tymethod.get\" class=\"fn\">get</a>(&amp;self, key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;V, <a class=\"enum\" href=\"sparse_merkle_tree/error/enum.Error.html\" title=\"enum sparse_merkle_tree::error::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get value of a leaf\nreturn zero value if leaf not exists</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.merkle_proof\" class=\"method\"><a class=\"src rightside\" href=\"src/sparse_merkle_tree/tree.rs.html#329\">source</a><h4 class=\"code-header\">pub fn <a href=\"sparse_merkle_tree/tree/struct.SparseMerkleTree.html#tymethod.merkle_proof\" class=\"fn\">merkle_proof</a>(&amp;self, keys: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;K&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sparse_merkle_tree/merkle_proof/struct.MerkleProof.html\" title=\"struct sparse_merkle_tree::merkle_proof::MerkleProof\">MerkleProof</a>, <a class=\"enum\" href=\"sparse_merkle_tree/error/enum.Error.html\" title=\"enum sparse_merkle_tree::error::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Generate merkle proof</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.membership_proof\" class=\"method\"><a class=\"src rightside\" href=\"src/sparse_merkle_tree/tree.rs.html#416\">source</a><h4 class=\"code-header\">pub fn <a href=\"sparse_merkle_tree/tree/struct.SparseMerkleTree.html#tymethod.membership_proof\" class=\"fn\">membership_proof</a>(&amp;self, key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"namada_merkle_tree/struct.CommitmentProof.html\" title=\"struct namada_merkle_tree::CommitmentProof\">CommitmentProof</a>, <a class=\"enum\" href=\"sparse_merkle_tree/error/enum.Error.html\" title=\"enum sparse_merkle_tree::error::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Generate ICS 23 commitment proof for the existing key</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.non_membership_proof\" class=\"method\"><a class=\"src rightside\" href=\"src/sparse_merkle_tree/tree.rs.html#430\">source</a><h4 class=\"code-header\">pub fn <a href=\"sparse_merkle_tree/tree/struct.SparseMerkleTree.html#tymethod.non_membership_proof\" class=\"fn\">non_membership_proof</a>(&amp;self, key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"namada_merkle_tree/struct.CommitmentProof.html\" title=\"struct namada_merkle_tree::CommitmentProof\">CommitmentProof</a>, <a class=\"enum\" href=\"sparse_merkle_tree/error/enum.Error.html\" title=\"enum sparse_merkle_tree::error::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Generate ICS 23 commitment proof for the non-existing key</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate\" class=\"method\"><a class=\"src rightside\" href=\"src/sparse_merkle_tree/tree.rs.html#509\">source</a><h4 class=\"code-header\">pub fn <a href=\"sparse_merkle_tree/tree/struct.SparseMerkleTree.html#tymethod.validate\" class=\"fn\">validate</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Recompute the root of the merkle tree from the store. Check if it agrees with the\nroot in <code>self</code>.</p>\n</div></details></div></details>",0,"namada_merkle_tree::Smt","namada_merkle_tree::Amt"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[16591]}