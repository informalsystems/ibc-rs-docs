(function() {
    var type_impls = Object.fromEntries([["abscissa_core",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1320\">source</a><a href=\"#impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;[<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;], A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.assume_init\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.82.0\">1.82.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1355\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.assume_init\" class=\"fn\">assume_init</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>, A&gt;</h4></section></summary><div class=\"docblock\"><p>Converts to <code>Arc&lt;[T]&gt;</code>.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">ยง</a>Safety</h5>\n<p>As with <a href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html#method.assume_init\" title=\"method core::mem::maybe_uninit::MaybeUninit::assume_init\"><code>MaybeUninit::assume_init</code></a>,\nit is up to the caller to guarantee that the inner value\nreally is in an initialized state.\nCalling this when the content is not yet fully initialized\ncauses immediate undefined behavior.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(get_mut_unchecked)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>values = Arc::&lt;[u32]&gt;::new_uninit_slice(<span class=\"number\">3</span>);\n\n<span class=\"comment\">// Deferred initialization:\n</span><span class=\"kw\">let </span>data = Arc::get_mut(<span class=\"kw-2\">&amp;mut </span>values).unwrap();\ndata[<span class=\"number\">0</span>].write(<span class=\"number\">1</span>);\ndata[<span class=\"number\">1</span>].write(<span class=\"number\">2</span>);\ndata[<span class=\"number\">2</span>].write(<span class=\"number\">3</span>);\n\n<span class=\"kw\">let </span>values = <span class=\"kw\">unsafe </span>{ values.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>values, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</code></pre></div>\n</div></details></div></details>",0,"abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arc%3C%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1140\">source</a><a href=\"#impl-Arc%3C%5BT%5D%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_uninit_slice\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.82.0\">1.82.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1166\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new_uninit_slice\" class=\"fn\">new_uninit_slice</a>(len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;[<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;]&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new atomically reference-counted slice with uninitialized contents.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(get_mut_unchecked)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>values = Arc::&lt;[u32]&gt;::new_uninit_slice(<span class=\"number\">3</span>);\n\n<span class=\"comment\">// Deferred initialization:\n</span><span class=\"kw\">let </span>data = Arc::get_mut(<span class=\"kw-2\">&amp;mut </span>values).unwrap();\ndata[<span class=\"number\">0</span>].write(<span class=\"number\">1</span>);\ndata[<span class=\"number\">1</span>].write(<span class=\"number\">2</span>);\ndata[<span class=\"number\">2</span>].write(<span class=\"number\">3</span>);\n\n<span class=\"kw\">let </span>values = <span class=\"kw\">unsafe </span>{ values.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>values, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed_slice\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1194\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new_zeroed_slice\" class=\"fn\">new_zeroed_slice</a>(len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;[<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;]&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>new_zeroed_alloc</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new atomically reference-counted slice with uninitialized contents, with the memory being\nfilled with <code>0</code> bytes.</p>\n<p>See <a href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html#method.zeroed\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::zeroed\"><code>MaybeUninit::zeroed</code></a> for examples of correct and\nincorrect usage of this method.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(new_zeroed_alloc)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>values = Arc::&lt;[u32]&gt;::new_zeroed_slice(<span class=\"number\">3</span>);\n<span class=\"kw\">let </span>values = <span class=\"kw\">unsafe </span>{ values.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>values, [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>])</code></pre></div>\n</div></details></div></details>",0,"abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arc%3C%5BT%5D,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1208\">source</a><a href=\"#impl-Arc%3C%5BT%5D,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_uninit_slice_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1237\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new_uninit_slice_in\" class=\"fn\">new_uninit_slice_in</a>(len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;[<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;], A&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new atomically reference-counted slice with uninitialized contents in the\nprovided allocator.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(get_mut_unchecked)]\n#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>values = Arc::&lt;[u32], <span class=\"kw\">_</span>&gt;::new_uninit_slice_in(<span class=\"number\">3</span>, System);\n\n<span class=\"kw\">let </span>values = <span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// Deferred initialization:\n    </span>Arc::get_mut_unchecked(<span class=\"kw-2\">&amp;mut </span>values)[<span class=\"number\">0</span>].as_mut_ptr().write(<span class=\"number\">1</span>);\n    Arc::get_mut_unchecked(<span class=\"kw-2\">&amp;mut </span>values)[<span class=\"number\">1</span>].as_mut_ptr().write(<span class=\"number\">2</span>);\n    Arc::get_mut_unchecked(<span class=\"kw-2\">&amp;mut </span>values)[<span class=\"number\">2</span>].as_mut_ptr().write(<span class=\"number\">3</span>);\n\n    values.assume_init()\n};\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>values, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed_slice_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1265\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new_zeroed_slice_in\" class=\"fn\">new_zeroed_slice_in</a>(len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;[<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;], A&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new atomically reference-counted slice with uninitialized contents, with the memory being\nfilled with <code>0</code> bytes, in the provided allocator.</p>\n<p>See <a href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html#method.zeroed\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::zeroed\"><code>MaybeUninit::zeroed</code></a> for examples of correct and\nincorrect usage of this method.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>values = Arc::&lt;[u32], <span class=\"kw\">_</span>&gt;::new_zeroed_slice_in(<span class=\"number\">3</span>, System);\n<span class=\"kw\">let </span>values = <span class=\"kw\">unsafe </span>{ values.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>values, [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>])</code></pre></div>\n</div></details></div></details>",0,"abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1282\">source</a><a href=\"#impl-Arc%3CMaybeUninit%3CT%3E,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.assume_init\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.82.0\">1.82.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1314\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.assume_init\" class=\"fn\">assume_init</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;</h4></section></summary><div class=\"docblock\"><p>Converts to <code>Arc&lt;T&gt;</code>.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">ยง</a>Safety</h5>\n<p>As with <a href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html#method.assume_init\" title=\"method core::mem::maybe_uninit::MaybeUninit::assume_init\"><code>MaybeUninit::assume_init</code></a>,\nit is up to the caller to guarantee that the inner value\nreally is in an initialized state.\nCalling this when the content is not yet fully initialized\ncauses immediate undefined behavior.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(get_mut_unchecked)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>five = Arc::&lt;u32&gt;::new_uninit();\n\n<span class=\"comment\">// Deferred initialization:\n</span>Arc::get_mut(<span class=\"kw-2\">&amp;mut </span>five).unwrap().write(<span class=\"number\">5</span>);\n\n<span class=\"kw\">let </span>five = <span class=\"kw\">unsafe </span>{ five.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>five, <span class=\"number\">5</span>)</code></pre></div>\n</div></details></div></details>",0,"abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1361\">source</a><a href=\"#impl-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.17.0\">1.17.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1423\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.from_raw\" class=\"fn\">from_raw</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs an <code>Arc&lt;T&gt;</code> from a raw pointer.</p>\n<p>The raw pointer must have been previously returned by a call to\n<a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.into_raw\" title=\"associated function alloc::sync::Arc::into_raw\"><code>Arc&lt;U&gt;::into_raw</code></a> with the following requirements:</p>\n<ul>\n<li>If <code>U</code> is sized, it must have the same size and alignment as <code>T</code>. This\nis trivially true if <code>U</code> is <code>T</code>.</li>\n<li>If <code>U</code> is unsized, its data pointer must have the same size and\nalignment as <code>T</code>. This is trivially true if <code>Arc&lt;U&gt;</code> was constructed\nthrough <code>Arc&lt;T&gt;</code> and then converted to <code>Arc&lt;U&gt;</code> through an <a href=\"https://doc.rust-lang.org/reference/type-coercions.html#unsized-coercions\">unsized\ncoercion</a>.</li>\n</ul>\n<p>Note that if <code>U</code> or <code>U</code>โs data pointer is not <code>T</code> but has the same size\nand alignment, this is basically like transmuting references of\ndifferent types. See <a href=\"https://doc.rust-lang.org/nightly/core/intrinsics/fn.transmute.html\" title=\"fn core::intrinsics::transmute\"><code>mem::transmute</code></a> for more information\non what restrictions apply in this case.</p>\n<p>The user of <code>from_raw</code> has to make sure a specific value of <code>T</code> is only\ndropped once.</p>\n<p>This function is unsafe because improper use may lead to memory unsafety,\neven if the returned <code>Arc&lt;T&gt;</code> is never accessed.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x = Arc::new(<span class=\"string\">\"hello\"</span>.to_owned());\n<span class=\"kw\">let </span>x_ptr = Arc::into_raw(x);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// Convert back to an `Arc` to prevent leak.\n    </span><span class=\"kw\">let </span>x = Arc::from_raw(x_ptr);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;*</span>x, <span class=\"string\">\"hello\"</span>);\n\n    <span class=\"comment\">// Further calls to `Arc::from_raw(x_ptr)` would be memory-unsafe.\n</span>}\n\n<span class=\"comment\">// The memory was freed when `x` went out of scope above, so `x_ptr` is now dangling!</span></code></pre></div>\n<p>Convert a slice back into its original array:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x: Arc&lt;[u32]&gt; = Arc::new([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);\n<span class=\"kw\">let </span>x_ptr: <span class=\"kw-2\">*const </span>[u32] = Arc::into_raw(x);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>x: Arc&lt;[u32; <span class=\"number\">3</span>]&gt; = Arc::from_raw(x_ptr.cast::&lt;[u32; <span class=\"number\">3</span>]&gt;());\n    <span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;*</span>x, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.increment_strong_count\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1457\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.increment_strong_count\" class=\"fn\">increment_strong_count</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a>)</h4></section></summary><div class=\"docblock\"><p>Increments the strong reference count on the <code>Arc&lt;T&gt;</code> associated with the\nprovided pointer by one.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">ยง</a>Safety</h5>\n<p>The pointer must have been obtained through <code>Arc::into_raw</code>, and the\nassociated <code>Arc</code> instance must be valid (i.e. the strong count must be at\nleast 1) for the duration of this method.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>ptr = Arc::into_raw(five);\n    Arc::increment_strong_count(ptr);\n\n    <span class=\"comment\">// This assertion is deterministic because we haven't shared\n    // the `Arc` between threads.\n    </span><span class=\"kw\">let </span>five = Arc::from_raw(ptr);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"number\">2</span>, Arc::strong_count(<span class=\"kw-2\">&amp;</span>five));\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decrement_strong_count\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1493\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.decrement_strong_count\" class=\"fn\">decrement_strong_count</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a>)</h4></section></summary><div class=\"docblock\"><p>Decrements the strong reference count on the <code>Arc&lt;T&gt;</code> associated with the\nprovided pointer by one.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">ยง</a>Safety</h5>\n<p>The pointer must have been obtained through <code>Arc::into_raw</code>, and the\nassociated <code>Arc</code> instance must be valid (i.e. the strong count must be at\nleast 1) when invoking this method. This method can be used to release the final\n<code>Arc</code> and backing storage, but <strong>should not</strong> be called after the final <code>Arc</code> has been\nreleased.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>ptr = Arc::into_raw(five);\n    Arc::increment_strong_count(ptr);\n\n    <span class=\"comment\">// Those assertions are deterministic because we haven't shared\n    // the `Arc` between threads.\n    </span><span class=\"kw\">let </span>five = Arc::from_raw(ptr);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"number\">2</span>, Arc::strong_count(<span class=\"kw-2\">&amp;</span>five));\n    Arc::decrement_strong_count(ptr);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"number\">1</span>, Arc::strong_count(<span class=\"kw-2\">&amp;</span>five));\n}</code></pre></div>\n</div></details></div></details>",0,"abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#372\">source</a><a href=\"#impl-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#385\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new\" class=\"fn\">new</a>(data: T) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new <code>Arc&lt;T&gt;</code>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_cyclic\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.60.0\">1.60.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#450-452\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new_cyclic\" class=\"fn\">new_cyclic</a>&lt;F&gt;(data_fn: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\">Weak</a>&lt;T&gt;) -&gt; T,</div></h4></section></summary><div class=\"docblock\"><p>Constructs a new <code>Arc&lt;T&gt;</code> while giving you a <code>Weak&lt;T&gt;</code> to the allocation,\nto allow you to construct a <code>T</code> which holds a weak pointer to itself.</p>\n<p>Generally, a structure circularly referencing itself, either directly or\nindirectly, should not hold a strong reference to itself to prevent a memory leak.\nUsing this function, you get access to the weak pointer during the\ninitialization of <code>T</code>, before the <code>Arc&lt;T&gt;</code> is created, such that you can\nclone and store it inside the <code>T</code>.</p>\n<p><code>new_cyclic</code> first allocates the managed allocation for the <code>Arc&lt;T&gt;</code>,\nthen calls your closure, giving it a <code>Weak&lt;T&gt;</code> to this allocation,\nand only afterwards completes the construction of the <code>Arc&lt;T&gt;</code> by placing\nthe <code>T</code> returned from your closure into the allocation.</p>\n<p>Since the new <code>Arc&lt;T&gt;</code> is not fully-constructed until <code>Arc&lt;T&gt;::new_cyclic</code>\nreturns, calling <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html#method.upgrade\" title=\"method alloc::sync::Weak::upgrade\"><code>upgrade</code></a> on the weak reference inside your closure will\nfail and result in a <code>None</code> value.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">ยง</a>Panics</h5>\n<p>If <code>data_fn</code> panics, the panic is propagated to the caller, and the\ntemporary <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak&lt;T&gt;</code></a> is dropped normally.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">ยง</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::{Arc, Weak};\n\n<span class=\"kw\">struct </span>Gadget {\n    me: Weak&lt;Gadget&gt;,\n}\n\n<span class=\"kw\">impl </span>Gadget {\n    <span class=\"doccomment\">/// Constructs a reference counted Gadget.\n    </span><span class=\"kw\">fn </span>new() -&gt; Arc&lt;<span class=\"self\">Self</span>&gt; {\n        <span class=\"comment\">// `me` is a `Weak&lt;Gadget&gt;` pointing at the new allocation of the\n        // `Arc` we're constructing.\n        </span>Arc::new_cyclic(|me| {\n            <span class=\"comment\">// Create the actual struct here.\n            </span>Gadget { me: me.clone() }\n        })\n    }\n\n    <span class=\"doccomment\">/// Returns a reference counted pointer to Self.\n    </span><span class=\"kw\">fn </span>me(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>) -&gt; Arc&lt;<span class=\"self\">Self</span>&gt; {\n        <span class=\"self\">self</span>.me.upgrade().unwrap()\n    }\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_uninit\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.82.0\">1.82.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#479\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new_uninit\" class=\"fn\">new_uninit</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new <code>Arc</code> with uninitialized contents.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(get_mut_unchecked)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>five = Arc::&lt;u32&gt;::new_uninit();\n\n<span class=\"comment\">// Deferred initialization:\n</span>Arc::get_mut(<span class=\"kw-2\">&amp;mut </span>five).unwrap().write(<span class=\"number\">5</span>);\n\n<span class=\"kw\">let </span>five = <span class=\"kw\">unsafe </span>{ five.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>five, <span class=\"number\">5</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#513\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>new_zeroed_alloc</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc</code> with uninitialized contents, with the memory\nbeing filled with <code>0</code> bytes.</p>\n<p>See <a href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html#method.zeroed\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::zeroed\"><code>MaybeUninit::zeroed</code></a> for examples of correct and incorrect usage\nof this method.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(new_zeroed_alloc)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>zero = Arc::&lt;u32&gt;::new_zeroed();\n<span class=\"kw\">let </span>zero = <span class=\"kw\">unsafe </span>{ zero.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>zero, <span class=\"number\">0</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pin\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.33.0\">1.33.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#528\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.pin\" class=\"fn\">pin</a>(data: T) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>, then\n<code>data</code> will be pinned in memory and unable to be moved.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_pin\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#535\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_pin\" class=\"fn\">try_pin</a>(data: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>, return an error if allocation fails.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#552\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_new\" class=\"fn\">try_new</a>(data: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc&lt;T&gt;</code>, returning an error if allocation fails.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::try_new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_uninit\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#586\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_new_uninit\" class=\"fn\">try_new_uninit</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc</code> with uninitialized contents, returning an error\nif allocation fails.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n#![feature(get_mut_unchecked)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>five = Arc::&lt;u32&gt;::try_new_uninit()<span class=\"question-mark\">?</span>;\n\n<span class=\"comment\">// Deferred initialization:\n</span>Arc::get_mut(<span class=\"kw-2\">&amp;mut </span>five).unwrap().write(<span class=\"number\">5</span>);\n\n<span class=\"kw\">let </span>five = <span class=\"kw\">unsafe </span>{ five.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>five, <span class=\"number\">5</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_zeroed\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#619\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_new_zeroed\" class=\"fn\">try_new_zeroed</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc</code> with uninitialized contents, with the memory\nbeing filled with <code>0</code> bytes, returning an error if allocation fails.</p>\n<p>See <a href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html#method.zeroed\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::zeroed\"><code>MaybeUninit::zeroed</code></a> for examples of correct and incorrect usage\nof this method.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature( allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>zero = Arc::&lt;u32&gt;::try_new_zeroed()<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>zero = <span class=\"kw\">unsafe </span>{ zero.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>zero, <span class=\"number\">0</span>);</code></pre></div>\n</div></details></div></details>",0,"abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arc%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1498\">source</a><a href=\"#impl-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.allocator\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1506\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.allocator\" class=\"fn\">allocator</a>(this: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;A</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns a reference to the underlying allocator.</p>\n<p>Note: this is an associated function, which means that you have\nto call it as <code>Arc::allocator(&amp;a)</code> instead of <code>a.allocator()</code>. This\nis so that there is no conflict with a method on the inner type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_raw\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.17.0\">1.17.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1529\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.into_raw\" class=\"fn\">into_raw</a>(this: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a></h4></section></summary><div class=\"docblock\"><p>Consumes the <code>Arc</code>, returning the wrapped pointer.</p>\n<p>To avoid a memory leak the pointer must be converted back to an <code>Arc</code> using\n<a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.from_raw\" title=\"associated function alloc::sync::Arc::from_raw\"><code>Arc::from_raw</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x = Arc::new(<span class=\"string\">\"hello\"</span>.to_owned());\n<span class=\"kw\">let </span>x_ptr = Arc::into_raw(x);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw\">unsafe </span>{ <span class=\"kw-2\">&amp;*</span>x_ptr }, <span class=\"string\">\"hello\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_raw_with_allocator\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1554\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.into_raw_with_allocator\" class=\"fn\">into_raw_with_allocator</a>(this: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a>, A)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Consumes the <code>Arc</code>, returning the wrapped pointer and allocator.</p>\n<p>To avoid a memory leak the pointer must be converted back to an <code>Arc</code> using\n<a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.from_raw_in\" title=\"associated function alloc::sync::Arc::from_raw_in\"><code>Arc::from_raw_in</code></a>.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>x = Arc::new_in(<span class=\"string\">\"hello\"</span>.to_owned(), System);\n<span class=\"kw\">let </span>(ptr, alloc) = Arc::into_raw_with_allocator(x);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw\">unsafe </span>{ <span class=\"kw-2\">&amp;*</span>ptr }, <span class=\"string\">\"hello\"</span>);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Arc::from_raw_in(ptr, alloc) };\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;*</span>x, <span class=\"string\">\"hello\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1581\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.as_ptr\" class=\"fn\">as_ptr</a>(this: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a></h4></section></summary><div class=\"docblock\"><p>Provides a raw pointer to the data.</p>\n<p>The counts are not affected in any way and the <code>Arc</code> is not consumed. The pointer is valid for\nas long as there are strong counts in the <code>Arc</code>.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x = Arc::new(<span class=\"string\">\"hello\"</span>.to_owned());\n<span class=\"kw\">let </span>y = Arc::clone(<span class=\"kw-2\">&amp;</span>x);\n<span class=\"kw\">let </span>x_ptr = Arc::as_ptr(<span class=\"kw-2\">&amp;</span>x);\n<span class=\"macro\">assert_eq!</span>(x_ptr, Arc::as_ptr(<span class=\"kw-2\">&amp;</span>y));\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw\">unsafe </span>{ <span class=\"kw-2\">&amp;*</span>x_ptr }, <span class=\"string\">\"hello\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1659\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.from_raw_in\" class=\"fn\">from_raw_in</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a>, alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs an <code>Arc&lt;T, A&gt;</code> from a raw pointer.</p>\n<p>The raw pointer must have been previously returned by a call to <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.into_raw\" title=\"associated function alloc::sync::Arc::into_raw\"><code>Arc&lt;U, A&gt;::into_raw</code></a> with the following requirements:</p>\n<ul>\n<li>If <code>U</code> is sized, it must have the same size and alignment as <code>T</code>. This\nis trivially true if <code>U</code> is <code>T</code>.</li>\n<li>If <code>U</code> is unsized, its data pointer must have the same size and\nalignment as <code>T</code>. This is trivially true if <code>Arc&lt;U&gt;</code> was constructed\nthrough <code>Arc&lt;T&gt;</code> and then converted to <code>Arc&lt;U&gt;</code> through an <a href=\"https://doc.rust-lang.org/reference/type-coercions.html#unsized-coercions\">unsized\ncoercion</a>.</li>\n</ul>\n<p>Note that if <code>U</code> or <code>U</code>โs data pointer is not <code>T</code> but has the same size\nand alignment, this is basically like transmuting references of\ndifferent types. See <a href=\"https://doc.rust-lang.org/nightly/core/intrinsics/fn.transmute.html\" title=\"fn core::intrinsics::transmute\"><code>mem::transmute</code></a> for more information\non what restrictions apply in this case.</p>\n<p>The raw pointer must point to a block of memory allocated by <code>alloc</code></p>\n<p>The user of <code>from_raw</code> has to make sure a specific value of <code>T</code> is only\ndropped once.</p>\n<p>This function is unsafe because improper use may lead to memory unsafety,\neven if the returned <code>Arc&lt;T&gt;</code> is never accessed.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>x = Arc::new_in(<span class=\"string\">\"hello\"</span>.to_owned(), System);\n<span class=\"kw\">let </span>x_ptr = Arc::into_raw(x);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// Convert back to an `Arc` to prevent leak.\n    </span><span class=\"kw\">let </span>x = Arc::from_raw_in(x_ptr, System);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;*</span>x, <span class=\"string\">\"hello\"</span>);\n\n    <span class=\"comment\">// Further calls to `Arc::from_raw(x_ptr)` would be memory-unsafe.\n</span>}\n\n<span class=\"comment\">// The memory was freed when `x` went out of scope above, so `x_ptr` is now dangling!</span></code></pre></div>\n<p>Convert a slice back into its original array:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>x: Arc&lt;[u32], <span class=\"kw\">_</span>&gt; = Arc::new_in([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], System);\n<span class=\"kw\">let </span>x_ptr: <span class=\"kw-2\">*const </span>[u32] = Arc::into_raw(x);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>x: Arc&lt;[u32; <span class=\"number\">3</span>], <span class=\"kw\">_</span>&gt; = Arc::from_raw_in(x_ptr.cast::&lt;[u32; <span class=\"number\">3</span>]&gt;(), System);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;*</span>x, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.downgrade\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1684-1686\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.downgrade\" class=\"fn\">downgrade</a>(this: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\">Weak</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a> pointer to this allocation.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"kw\">let </span>weak_five = Arc::downgrade(<span class=\"kw-2\">&amp;</span>five);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.weak_count\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.15.0\">1.15.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1744\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.weak_count\" class=\"fn\">weak_count</a>(this: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Gets the number of <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a> pointers to this allocation.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">ยง</a>Safety</h5>\n<p>This method by itself is safe, but using it correctly requires extra care.\nAnother thread can change the weak count at any time,\nincluding potentially between calling this method and acting on the result.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n<span class=\"kw\">let </span>_weak_five = Arc::downgrade(<span class=\"kw-2\">&amp;</span>five);\n\n<span class=\"comment\">// This assertion is deterministic because we haven't shared\n// the `Arc` or `Weak` between threads.\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1</span>, Arc::weak_count(<span class=\"kw-2\">&amp;</span>five));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strong_count\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.15.0\">1.15.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1774\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.strong_count\" class=\"fn\">strong_count</a>(this: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Gets the number of strong (<code>Arc</code>) pointers to this allocation.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">ยง</a>Safety</h5>\n<p>This method by itself is safe, but using it correctly requires extra care.\nAnother thread can change the strong count at any time,\nincluding potentially between calling this method and acting on the result.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n<span class=\"kw\">let </span>_also_five = Arc::clone(<span class=\"kw-2\">&amp;</span>five);\n\n<span class=\"comment\">// This assertion is deterministic because we haven't shared\n// the `Arc` between threads.\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2</span>, Arc::strong_count(<span class=\"kw-2\">&amp;</span>five));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.increment_strong_count_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1812-1814\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.increment_strong_count_in\" class=\"fn\">increment_strong_count_in</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a>, alloc: A)<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Increments the strong reference count on the <code>Arc&lt;T&gt;</code> associated with the\nprovided pointer by one.</p>\n<h5 id=\"safety-2\"><a class=\"doc-anchor\" href=\"#safety-2\">ยง</a>Safety</h5>\n<p>The pointer must have been obtained through <code>Arc::into_raw</code>, and the\nassociated <code>Arc</code> instance must be valid (i.e. the strong count must be at\nleast 1) for the duration of this method,, and <code>ptr</code> must point to a block of memory\nallocated by <code>alloc</code>.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>five = Arc::new_in(<span class=\"number\">5</span>, System);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>ptr = Arc::into_raw(five);\n    Arc::increment_strong_count_in(ptr, System);\n\n    <span class=\"comment\">// This assertion is deterministic because we haven't shared\n    // the `Arc` between threads.\n    </span><span class=\"kw\">let </span>five = Arc::from_raw_in(ptr, System);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"number\">2</span>, Arc::strong_count(<span class=\"kw-2\">&amp;</span>five));\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decrement_strong_count_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1858\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.decrement_strong_count_in\" class=\"fn\">decrement_strong_count_in</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a>, alloc: A)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Decrements the strong reference count on the <code>Arc&lt;T&gt;</code> associated with the\nprovided pointer by one.</p>\n<h5 id=\"safety-3\"><a class=\"doc-anchor\" href=\"#safety-3\">ยง</a>Safety</h5>\n<p>The pointer must have been obtained through <code>Arc::into_raw</code>,  the\nassociated <code>Arc</code> instance must be valid (i.e. the strong count must be at\nleast 1) when invoking this method, and <code>ptr</code> must point to a block of memory\nallocated by <code>alloc</code>. This method can be used to release the final\n<code>Arc</code> and backing storage, but <strong>should not</strong> be called after the final <code>Arc</code> has been\nreleased.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>five = Arc::new_in(<span class=\"number\">5</span>, System);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>ptr = Arc::into_raw(five);\n    Arc::increment_strong_count_in(ptr, System);\n\n    <span class=\"comment\">// Those assertions are deterministic because we haven't shared\n    // the `Arc` between threads.\n    </span><span class=\"kw\">let </span>five = Arc::from_raw_in(ptr, System);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"number\">2</span>, Arc::strong_count(<span class=\"kw-2\">&amp;</span>five));\n    Arc::decrement_strong_count_in(ptr, System);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"number\">1</span>, Arc::strong_count(<span class=\"kw-2\">&amp;</span>five));\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ptr_eq\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.17.0\">1.17.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1906\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.ptr_eq\" class=\"fn\">ptr_eq</a>(this: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the two <code>Arc</code>s point to the same allocation in a vein similar to\n<a href=\"https://doc.rust-lang.org/nightly/core/ptr/fn.eq.html\" title=\"ptr::eq\"><code>ptr::eq</code></a>. This function ignores the metadata of  <code>dyn Trait</code> pointers.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n<span class=\"kw\">let </span>same_five = Arc::clone(<span class=\"kw-2\">&amp;</span>five);\n<span class=\"kw\">let </span>other_five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert!</span>(Arc::ptr_eq(<span class=\"kw-2\">&amp;</span>five, <span class=\"kw-2\">&amp;</span>same_five));\n<span class=\"macro\">assert!</span>(!Arc::ptr_eq(<span class=\"kw-2\">&amp;</span>five, <span class=\"kw-2\">&amp;</span>other_five));</code></pre></div>\n</div></details></div></details>",0,"abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arc%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2196\">source</a><a href=\"#impl-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.CloneToUninit.html\" title=\"trait core::clone::CloneToUninit\">CloneToUninit</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.make_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2249\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.make_mut\" class=\"fn\">make_mut</a>(this: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\"><p>Makes a mutable reference into the given <code>Arc</code>.</p>\n<p>If there are other <code>Arc</code> pointers to the same allocation, then <code>make_mut</code> will\n<a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" title=\"method core::clone::Clone::clone\"><code>clone</code></a> the inner value to a new allocation to ensure unique ownership.  This is also\nreferred to as clone-on-write.</p>\n<p>However, if there are no other <code>Arc</code> pointers to this allocation, but some <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a>\npointers, then the <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a> pointers will be dissociated and the inner value will not\nbe cloned.</p>\n<p>See also <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.get_mut\" title=\"associated function alloc::sync::Arc::get_mut\"><code>get_mut</code></a>, which will fail rather than cloning the inner value\nor dissociating <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a> pointers.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>data = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"kw-2\">*</span>Arc::make_mut(<span class=\"kw-2\">&amp;mut </span>data) += <span class=\"number\">1</span>;         <span class=\"comment\">// Won't clone anything\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>other_data = Arc::clone(<span class=\"kw-2\">&amp;</span>data); <span class=\"comment\">// Won't clone inner data\n</span><span class=\"kw-2\">*</span>Arc::make_mut(<span class=\"kw-2\">&amp;mut </span>data) += <span class=\"number\">1</span>;         <span class=\"comment\">// Clones inner data\n</span><span class=\"kw-2\">*</span>Arc::make_mut(<span class=\"kw-2\">&amp;mut </span>data) += <span class=\"number\">1</span>;         <span class=\"comment\">// Won't clone anything\n</span><span class=\"kw-2\">*</span>Arc::make_mut(<span class=\"kw-2\">&amp;mut </span>other_data) <span class=\"kw-2\">*</span>= <span class=\"number\">2</span>;   <span class=\"comment\">// Won't clone anything\n\n// Now `data` and `other_data` point to different allocations.\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>data, <span class=\"number\">8</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>other_data, <span class=\"number\">12</span>);</code></pre></div>\n<p><a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a> pointers will be dissociated:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>data = Arc::new(<span class=\"number\">75</span>);\n<span class=\"kw\">let </span>weak = Arc::downgrade(<span class=\"kw-2\">&amp;</span>data);\n\n<span class=\"macro\">assert!</span>(<span class=\"number\">75 </span>== <span class=\"kw-2\">*</span>data);\n<span class=\"macro\">assert!</span>(<span class=\"number\">75 </span>== <span class=\"kw-2\">*</span>weak.upgrade().unwrap());\n\n<span class=\"kw-2\">*</span>Arc::make_mut(<span class=\"kw-2\">&amp;mut </span>data) += <span class=\"number\">1</span>;\n\n<span class=\"macro\">assert!</span>(<span class=\"number\">76 </span>== <span class=\"kw-2\">*</span>data);\n<span class=\"macro\">assert!</span>(weak.upgrade().is_none());</code></pre></div>\n</div></details></div></details>",0,"abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arc%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2322\">source</a><a href=\"#impl-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap_or_clone\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.76.0\">1.76.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2353\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.unwrap_or_clone\" class=\"fn\">unwrap_or_clone</a>(this: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; T</h4></section></summary><div class=\"docblock\"><p>If we have the only reference to <code>T</code> then unwrap it. Otherwise, clone <code>T</code> and return the\nclone.</p>\n<p>Assuming <code>arc_t</code> is of type <code>Arc&lt;T&gt;</code>, this function is functionally equivalent to\n<code>(*arc_t).clone()</code>, but will avoid cloning the inner value where possible.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>inner = String::from(<span class=\"string\">\"test\"</span>);\n<span class=\"kw\">let </span>ptr = inner.as_ptr();\n\n<span class=\"kw\">let </span>arc = Arc::new(inner);\n<span class=\"kw\">let </span>inner = Arc::unwrap_or_clone(arc);\n<span class=\"comment\">// The inner value was not cloned\n</span><span class=\"macro\">assert!</span>(ptr::eq(ptr, inner.as_ptr()));\n\n<span class=\"kw\">let </span>arc = Arc::new(inner);\n<span class=\"kw\">let </span>arc2 = arc.clone();\n<span class=\"kw\">let </span>inner = Arc::unwrap_or_clone(arc);\n<span class=\"comment\">// Because there were 2 references, we had to clone the inner value.\n</span><span class=\"macro\">assert!</span>(!ptr::eq(ptr, inner.as_ptr()));\n<span class=\"comment\">// `arc2` is the last reference, so when we unwrap it we get back\n// the original `String`.\n</span><span class=\"kw\">let </span>inner = Arc::unwrap_or_clone(arc2);\n<span class=\"macro\">assert!</span>(ptr::eq(ptr, inner.as_ptr()));</code></pre></div>\n</div></details></div></details>",0,"abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arc%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2358\">source</a><a href=\"#impl-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2385\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.get_mut\" class=\"fn\">get_mut</a>(this: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference into the given <code>Arc</code>, if there are\nno other <code>Arc</code> or <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a> pointers to the same allocation.</p>\n<p>Returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> otherwise, because it is not safe to\nmutate a shared value.</p>\n<p>See also <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.make_mut\" title=\"associated function alloc::sync::Arc::make_mut\"><code>make_mut</code></a>, which will <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" title=\"method core::clone::Clone::clone\"><code>clone</code></a>\nthe inner value when there are other <code>Arc</code> pointers.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = Arc::new(<span class=\"number\">3</span>);\n<span class=\"kw-2\">*</span>Arc::get_mut(<span class=\"kw-2\">&amp;mut </span>x).unwrap() = <span class=\"number\">4</span>;\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>x, <span class=\"number\">4</span>);\n\n<span class=\"kw\">let </span>_y = Arc::clone(<span class=\"kw-2\">&amp;</span>x);\n<span class=\"macro\">assert!</span>(Arc::get_mut(<span class=\"kw-2\">&amp;mut </span>x).is_none());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2460\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.get_mut_unchecked\" class=\"fn\">get_mut_unchecked</a>(this: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>get_mut_unchecked</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns a mutable reference into the given <code>Arc</code>,\nwithout any check.</p>\n<p>See also <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.get_mut\" title=\"associated function alloc::sync::Arc::get_mut\"><code>get_mut</code></a>, which is safe and does appropriate checks.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">ยง</a>Safety</h5>\n<p>If any other <code>Arc</code> or <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a> pointers to the same allocation exist, then\nthey must not be dereferenced or have active borrows for the duration\nof the returned borrow, and their inner type must be exactly the same as the\ninner type of this Rc (including lifetimes). This is trivially the case if no\nsuch pointers exist, for example immediately after <code>Arc::new</code>.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(get_mut_unchecked)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = Arc::new(String::new());\n<span class=\"kw\">unsafe </span>{\n    Arc::get_mut_unchecked(<span class=\"kw-2\">&amp;mut </span>x).push_str(<span class=\"string\">\"foo\"</span>)\n}\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>x, <span class=\"string\">\"foo\"</span>);</code></pre></div>\n<p>Other <code>Arc</code> pointers to the same allocation must be to the same type.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(get_mut_unchecked)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x: Arc&lt;str&gt; = Arc::from(<span class=\"string\">\"Hello, world!\"</span>);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>y: Arc&lt;[u8]&gt; = x.clone().into();\n<span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// this is Undefined Behavior, because x's inner type is str, not [u8]\n    </span>Arc::get_mut_unchecked(<span class=\"kw-2\">&amp;mut </span>y).fill(<span class=\"number\">0xff</span>); <span class=\"comment\">// 0xff is invalid in UTF-8\n</span>}\n<span class=\"macro\">println!</span>(<span class=\"string\">\"{}\"</span>, <span class=\"kw-2\">&amp;*</span>x); <span class=\"comment\">// Invalid UTF-8 in a str</span></code></pre></div>\n<p>Other <code>Arc</code> pointers to the same allocation must be to the exact same type, including lifetimes.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(get_mut_unchecked)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x: Arc&lt;<span class=\"kw-2\">&amp;</span>str&gt; = Arc::new(<span class=\"string\">\"Hello, world!\"</span>);\n{\n    <span class=\"kw\">let </span>s = String::from(<span class=\"string\">\"Oh, no!\"</span>);\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>y: Arc&lt;<span class=\"kw-2\">&amp;</span>str&gt; = x.clone().into();\n    <span class=\"kw\">unsafe </span>{\n        <span class=\"comment\">// this is Undefined Behavior, because x's inner type\n        // is &amp;'long str, not &amp;'short str\n        </span><span class=\"kw-2\">*</span>Arc::get_mut_unchecked(<span class=\"kw-2\">&amp;mut </span>y) = <span class=\"kw-2\">&amp;</span>s;\n    }\n}\n<span class=\"macro\">println!</span>(<span class=\"string\">\"{}\"</span>, <span class=\"kw-2\">&amp;*</span>x); <span class=\"comment\">// Use-after-free</span></code></pre></div>\n</div></details></div></details>",0,"abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arc%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#630\">source</a><a href=\"#impl-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#646\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new_in\" class=\"fn\">new_in</a>(data: T, alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc&lt;T&gt;</code> in the provided allocator.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>five = Arc::new_in(<span class=\"number\">5</span>, System);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_uninit_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#687\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new_uninit_in\" class=\"fn\">new_uninit_in</a>(alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, A&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc</code> with uninitialized contents in the provided allocator.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(get_mut_unchecked)]\n#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>five = Arc::&lt;u32, <span class=\"kw\">_</span>&gt;::new_uninit_in(System);\n\n<span class=\"kw\">let </span>five = <span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// Deferred initialization:\n    </span>Arc::get_mut_unchecked(<span class=\"kw-2\">&amp;mut </span>five).as_mut_ptr().write(<span class=\"number\">5</span>);\n\n    five.assume_init()\n};\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>five, <span class=\"number\">5</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#725\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new_zeroed_in\" class=\"fn\">new_zeroed_in</a>(alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, A&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc</code> with uninitialized contents, with the memory\nbeing filled with <code>0</code> bytes, in the provided allocator.</p>\n<p>See <a href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html#method.zeroed\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::zeroed\"><code>MaybeUninit::zeroed</code></a> for examples of correct and incorrect usage\nof this method.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>zero = Arc::&lt;u32, <span class=\"kw\">_</span>&gt;::new_zeroed_in(System);\n<span class=\"kw\">let </span>zero = <span class=\"kw\">unsafe </span>{ zero.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>zero, <span class=\"number\">0</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_cyclic_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#770-772\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new_cyclic_in\" class=\"fn\">new_cyclic_in</a>&lt;F&gt;(data_fn: F, alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\">Weak</a>&lt;T, A&gt;) -&gt; T,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc&lt;T, A&gt;</code> in the given allocator while giving you a <code>Weak&lt;T, A&gt;</code> to the allocation,\nto allow you to construct a <code>T</code> which holds a weak pointer to itself.</p>\n<p>Generally, a structure circularly referencing itself, either directly or\nindirectly, should not hold a strong reference to itself to prevent a memory leak.\nUsing this function, you get access to the weak pointer during the\ninitialization of <code>T</code>, before the <code>Arc&lt;T, A&gt;</code> is created, such that you can\nclone and store it inside the <code>T</code>.</p>\n<p><code>new_cyclic_in</code> first allocates the managed allocation for the <code>Arc&lt;T, A&gt;</code>,\nthen calls your closure, giving it a <code>Weak&lt;T, A&gt;</code> to this allocation,\nand only afterwards completes the construction of the <code>Arc&lt;T, A&gt;</code> by placing\nthe <code>T</code> returned from your closure into the allocation.</p>\n<p>Since the new <code>Arc&lt;T, A&gt;</code> is not fully-constructed until <code>Arc&lt;T, A&gt;::new_cyclic_in</code>\nreturns, calling <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html#method.upgrade\" title=\"method alloc::sync::Weak::upgrade\"><code>upgrade</code></a> on the weak reference inside your closure will\nfail and result in a <code>None</code> value.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">ยง</a>Panics</h5>\n<p>If <code>data_fn</code> panics, the panic is propagated to the caller, and the\ntemporary <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak&lt;T&gt;</code></a> is dropped normally.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">ยง</a>Example</h5>\n<p>See <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.new_cyclic\" title=\"associated function alloc::sync::Arc::new_cyclic\"><code>new_cyclic</code></a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pin_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#835-837\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.pin_in\" class=\"fn\">pin_in</a>(data: T, alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;&gt;<div class=\"where\">where\n    A: 'static,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Pin&lt;Arc&lt;T, A&gt;&gt;</code> in the provided allocator. If <code>T</code> does not implement <code>Unpin</code>,\nthen <code>data</code> will be pinned in memory and unable to be moved.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_pin_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#846-848\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_pin_in\" class=\"fn\">try_pin_in</a>(data: T, alloc: A) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;<div class=\"where\">where\n    A: 'static,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Pin&lt;Arc&lt;T, A&gt;&gt;</code> in the provided allocator, return an error if allocation\nfails.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#869\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_new_in\" class=\"fn\">try_new_in</a>(data: T, alloc: A) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc&lt;T, A&gt;</code> in the provided allocator, returning an error if allocation fails.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>five = Arc::try_new_in(<span class=\"number\">5</span>, System)<span class=\"question-mark\">?</span>;</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_uninit_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#911\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_new_uninit_in\" class=\"fn\">try_new_uninit_in</a>(alloc: A) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, A&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc</code> with uninitialized contents, in the provided allocator, returning an\nerror if allocation fails.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n#![feature(get_mut_unchecked)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>five = Arc::&lt;u32, <span class=\"kw\">_</span>&gt;::try_new_uninit_in(System)<span class=\"question-mark\">?</span>;\n\n<span class=\"kw\">let </span>five = <span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// Deferred initialization:\n    </span>Arc::get_mut_unchecked(<span class=\"kw-2\">&amp;mut </span>five).as_mut_ptr().write(<span class=\"number\">5</span>);\n\n    five.assume_init()\n};\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>five, <span class=\"number\">5</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_zeroed_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#950\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_new_zeroed_in\" class=\"fn\">try_new_zeroed_in</a>(alloc: A) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, A&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc</code> with uninitialized contents, with the memory\nbeing filled with <code>0</code> bytes, in the provided allocator, returning an error if allocation\nfails.</p>\n<p>See <a href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html#method.zeroed\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::zeroed\"><code>MaybeUninit::zeroed</code></a> for examples of correct and incorrect usage\nof this method.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>zero = Arc::&lt;u32, <span class=\"kw\">_</span>&gt;::try_new_zeroed_in(System)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>zero = <span class=\"kw\">unsafe </span>{ zero.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>zero, <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_unwrap\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#997\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_unwrap\" class=\"fn\">try_unwrap</a>(this: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the inner value, if the <code>Arc</code> has exactly one strong reference.</p>\n<p>Otherwise, an <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Err\" title=\"variant core::result::Result::Err\"><code>Err</code></a> is returned with the same <code>Arc</code> that was\npassed in.</p>\n<p>This will succeed even if there are outstanding weak references.</p>\n<p>It is strongly recommended to use <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.into_inner\" title=\"associated function alloc::sync::Arc::into_inner\"><code>Arc::into_inner</code></a> instead if you donโt\nkeep the <code>Arc</code> in the <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Err\" title=\"variant core::result::Result::Err\"><code>Err</code></a> case.\nImmediately dropping the <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Err\" title=\"variant core::result::Result::Err\"><code>Err</code></a>-value, as the expression\n<code>Arc::try_unwrap(this).ok()</code> does, can cause the strong count to\ndrop to zero and the inner value of the <code>Arc</code> to be dropped.\nFor instance, if two threads execute such an expression in parallel,\nthere is a race condition without the possibility of unsafety:\nThe threads could first both check whether they own the last instance\nin <code>Arc::try_unwrap</code>, determine that they both do not, and then both\ndiscard and drop their instance in the call to <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#method.ok\" title=\"method core::result::Result::ok\"><code>ok</code></a>.\nIn this scenario, the value inside the <code>Arc</code> is safely destroyed\nby exactly one of the threads, but neither thread will ever be able\nto use the value.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x = Arc::new(<span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(Arc::try_unwrap(x), <span class=\"prelude-val\">Ok</span>(<span class=\"number\">3</span>));\n\n<span class=\"kw\">let </span>x = Arc::new(<span class=\"number\">4</span>);\n<span class=\"kw\">let </span>_y = Arc::clone(<span class=\"kw-2\">&amp;</span>x);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>Arc::try_unwrap(x).unwrap_err(), <span class=\"number\">4</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1112\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(this: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the inner value, if the <code>Arc</code> has exactly one strong reference.</p>\n<p>Otherwise, <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> is returned and the <code>Arc</code> is dropped.</p>\n<p>This will succeed even if there are outstanding weak references.</p>\n<p>If <code>Arc::into_inner</code> is called on every clone of this <code>Arc</code>,\nit is guaranteed that exactly one of the calls returns the inner value.\nThis means in particular that the inner value is not dropped.</p>\n<p><a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.try_unwrap\" title=\"associated function alloc::sync::Arc::try_unwrap\"><code>Arc::try_unwrap</code></a> is conceptually similar to <code>Arc::into_inner</code>, but it\nis meant for different use-cases. If used as a direct replacement\nfor <code>Arc::into_inner</code> anyway, such as with the expression\n<code><a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.try_unwrap\" title=\"associated function alloc::sync::Arc::try_unwrap\">Arc::try_unwrap</a>(this).<a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#method.ok\" title=\"method core::result::Result::ok\">ok</a>()</code>, then it does\n<strong>not</strong> give the same guarantee as described in the previous paragraph.\nFor more information, see the examples below and read the documentation\nof <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.try_unwrap\" title=\"associated function alloc::sync::Arc::try_unwrap\"><code>Arc::try_unwrap</code></a>.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">ยง</a>Examples</h5>\n<p>Minimal example demonstrating the guarantee that <code>Arc::into_inner</code> gives.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x = Arc::new(<span class=\"number\">3</span>);\n<span class=\"kw\">let </span>y = Arc::clone(<span class=\"kw-2\">&amp;</span>x);\n\n<span class=\"comment\">// Two threads calling `Arc::into_inner` on both clones of an `Arc`:\n</span><span class=\"kw\">let </span>x_thread = std::thread::spawn(|| Arc::into_inner(x));\n<span class=\"kw\">let </span>y_thread = std::thread::spawn(|| Arc::into_inner(y));\n\n<span class=\"kw\">let </span>x_inner_value = x_thread.join().unwrap();\n<span class=\"kw\">let </span>y_inner_value = y_thread.join().unwrap();\n\n<span class=\"comment\">// One of the threads is guaranteed to receive the inner value:\n</span><span class=\"macro\">assert!</span>(<span class=\"macro\">matches!</span>(\n    (x_inner_value, y_inner_value),\n    (<span class=\"prelude-val\">None</span>, <span class=\"prelude-val\">Some</span>(<span class=\"number\">3</span>)) | (<span class=\"prelude-val\">Some</span>(<span class=\"number\">3</span>), <span class=\"prelude-val\">None</span>)\n));\n<span class=\"comment\">// The result could also be `(None, None)` if the threads called\n// `Arc::try_unwrap(x).ok()` and `Arc::try_unwrap(y).ok()` instead.</span></code></pre></div>\n<p>A more practical example demonstrating the need for <code>Arc::into_inner</code>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"comment\">// Definition of a simple singly linked list using `Arc`:\n</span><span class=\"attr\">#[derive(Clone)]\n</span><span class=\"kw\">struct </span>LinkedList&lt;T&gt;(<span class=\"prelude-ty\">Option</span>&lt;Arc&lt;Node&lt;T&gt;&gt;&gt;);\n<span class=\"kw\">struct </span>Node&lt;T&gt;(T, <span class=\"prelude-ty\">Option</span>&lt;Arc&lt;Node&lt;T&gt;&gt;&gt;);\n\n<span class=\"comment\">// Dropping a long `LinkedList&lt;T&gt;` relying on the destructor of `Arc`\n// can cause a stack overflow. To prevent this, we can provide a\n// manual `Drop` implementation that does the destruction in a loop:\n</span><span class=\"kw\">impl</span>&lt;T&gt; Drop <span class=\"kw\">for </span>LinkedList&lt;T&gt; {\n    <span class=\"kw\">fn </span>drop(<span class=\"kw-2\">&amp;mut </span><span class=\"self\">self</span>) {\n        <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>link = <span class=\"self\">self</span>.<span class=\"number\">0</span>.take();\n        <span class=\"kw\">while let </span><span class=\"prelude-val\">Some</span>(arc_node) = link.take() {\n            <span class=\"kw\">if let </span><span class=\"prelude-val\">Some</span>(Node(_value, next)) = Arc::into_inner(arc_node) {\n                link = next;\n            }\n        }\n    }\n}\n\n<span class=\"comment\">// Implementation of `new` and `push` omitted\n</span><span class=\"kw\">impl</span>&lt;T&gt; LinkedList&lt;T&gt; {\n    <span class=\"comment\">/* ... */\n</span>}\n\n<span class=\"comment\">// The following code could have still caused a stack overflow\n// despite the manual `Drop` impl if that `Drop` impl had used\n// `Arc::try_unwrap(arc).ok()` instead of `Arc::into_inner(arc)`.\n\n// Create a long list and clone it\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = LinkedList::new();\n<span class=\"kw\">let </span>size = <span class=\"number\">100000</span>;\n<span class=\"kw\">for </span>i <span class=\"kw\">in </span><span class=\"number\">0</span>..size {\n    x.push(i); <span class=\"comment\">// Adds i to the front of x\n</span>}\n<span class=\"kw\">let </span>y = x.clone();\n\n<span class=\"comment\">// Drop the clones in parallel\n</span><span class=\"kw\">let </span>x_thread = std::thread::spawn(|| drop(x));\n<span class=\"kw\">let </span>y_thread = std::thread::spawn(|| drop(y));\nx_thread.join().unwrap();\ny_thread.join().unwrap();</code></pre></div>\n</div></details></div></details>",0,"abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arc%3Cdyn+Any+%2B+Send+%2B+Sync,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2575\">source</a><a href=\"#impl-Arc%3Cdyn+Any+%2B+Send+%2B+Sync,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.downcast\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.29.0\">1.29.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2596-2598\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.downcast\" class=\"fn\">downcast</a>&lt;T&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>, A&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h4></section></summary><div class=\"docblock\"><p>Attempts to downcast the <code>Arc&lt;dyn Any + Send + Sync&gt;</code> to a concrete type.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::any::Any;\n<span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">fn </span>print_if_string(value: Arc&lt;<span class=\"kw\">dyn </span>Any + Send + Sync&gt;) {\n    <span class=\"kw\">if let </span><span class=\"prelude-val\">Ok</span>(string) = value.downcast::&lt;String&gt;() {\n        <span class=\"macro\">println!</span>(<span class=\"string\">\"String ({}): {}\"</span>, string.len(), string);\n    }\n}\n\n<span class=\"kw\">let </span>my_string = <span class=\"string\">\"Hello World\"</span>.to_string();\nprint_if_string(Arc::new(my_string));\nprint_if_string(Arc::new(<span class=\"number\">0i8</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.downcast_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2638-2640\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.downcast_unchecked\" class=\"fn\">downcast_unchecked</a>&lt;T&gt;(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>downcast_unchecked</code>)</span></div></span></summary><div class=\"docblock\"><p>Downcasts the <code>Arc&lt;dyn Any + Send + Sync&gt;</code> to a concrete type.</p>\n<p>For a safe alternative see <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.downcast\" title=\"method alloc::sync::Arc::downcast\"><code>downcast</code></a>.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(downcast_unchecked)]\n\n</span><span class=\"kw\">use </span>std::any::Any;\n<span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x: Arc&lt;<span class=\"kw\">dyn </span>Any + Send + Sync&gt; = Arc::new(<span class=\"number\">1_usize</span>);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>x.downcast_unchecked::&lt;usize&gt;(), <span class=\"number\">1</span>);\n}</code></pre></div>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">ยง</a>Safety</h5>\n<p>The contained value must be of type <code>T</code>. Calling this method\nwith the incorrect type is <em>undefined behavior</em>.</p>\n</div></details></div></details>",0,"abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsFd-for-Arc%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0\">1.64.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/os/fd/owned.rs.html#415\">source</a></span><a href=\"#impl-AsFd-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/os/fd/owned/trait.AsFd.html\" title=\"trait std::os::fd::owned::AsFd\">AsFd</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/os/fd/owned/trait.AsFd.html\" title=\"trait std::os::fd::owned::AsFd\">AsFd</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"docblock\"><p>This impl allows implementing traits that require <code>AsFd</code> on Arc.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::net::UdpSocket;\n<span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">trait </span>MyTrait: AsFd {}\n<span class=\"kw\">impl </span>MyTrait <span class=\"kw\">for </span>Arc&lt;UdpSocket&gt; {}\n<span class=\"kw\">impl </span>MyTrait <span class=\"kw\">for </span>Box&lt;UdpSocket&gt; {}</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/os/fd/owned.rs.html#417\">source</a><a href=\"#method.as_fd\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/os/fd/owned/trait.AsFd.html#tymethod.as_fd\" class=\"fn\">as_fd</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/os/fd/owned/struct.BorrowedFd.html\" title=\"struct std::os::fd::owned::BorrowedFd\">BorrowedFd</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Borrows the file descriptor. <a href=\"https://doc.rust-lang.org/nightly/std/os/fd/owned/trait.AsFd.html#tymethod.as_fd\">Read more</a></div></details></div></details>","AsFd","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRawFd-for-Arc%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/os/fd/raw.rs.html#254\">source</a></span><a href=\"#impl-AsRawFd-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/os/fd/raw/trait.AsRawFd.html\" title=\"trait std::os::fd::raw::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/os/fd/raw/trait.AsRawFd.html\" title=\"trait std::os::fd::raw::AsRawFd\">AsRawFd</a>,</div></h3></section></summary><div class=\"docblock\"><p>This impl allows implementing traits that require <code>AsRawFd</code> on Arc.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::net::UdpSocket;\n<span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">trait </span>MyTrait: AsRawFd {\n}\n<span class=\"kw\">impl </span>MyTrait <span class=\"kw\">for </span>Arc&lt;UdpSocket&gt; {}\n<span class=\"kw\">impl </span>MyTrait <span class=\"kw\">for </span>Box&lt;UdpSocket&gt; {}</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_raw_fd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/os/fd/raw.rs.html#256\">source</a><a href=\"#method.as_raw_fd\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/os/fd/raw/trait.AsRawFd.html#tymethod.as_raw_fd\" class=\"fn\">as_raw_fd</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Extracts the raw file descriptor. <a href=\"https://doc.rust-lang.org/nightly/std/os/fd/raw/trait.AsRawFd.html#tymethod.as_raw_fd\">Read more</a></div></details></div></details>","AsRawFd","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CT%3E-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3847\">source</a></span><a href=\"#impl-AsRef%3CT%3E-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3848\">source</a><a href=\"#method.as_ref\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<T>","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3CT%3E-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3840\">source</a></span><a href=\"#impl-Borrow%3CT%3E-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3841\">source</a><a href=\"#method.borrow\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<T>","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2120\">source</a></span><a href=\"#impl-Clone-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2136\">source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;</h4></section></summary><div class=\"docblock\"><p>Makes a clone of the <code>Arc</code> pointer.</p>\n<p>This creates another pointer to the same allocation, increasing the\nstrong reference count.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"kw\">let _ </span>= Arc::clone(<span class=\"kw-2\">&amp;</span>five);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3423\">source</a></span><a href=\"#impl-Debug-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3424\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Arc%3C%5BT%5D%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.80.0\">1.80.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3512\">source</a></span><a href=\"#impl-Default-for-Arc%3C%5BT%5D%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3517\">source</a><a href=\"#method.default\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates an empty <code>[T]</code> inside an Arc</p>\n<p>This may or may not share an allocation with other Arcs.</p>\n</div></details></div></details>","Default","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Arc%3CCStr%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.80.0\">1.80.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3493\">source</a></span><a href=\"#impl-Default-for-Arc%3CCStr%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ffi/c_str/struct.CStr.html\" title=\"struct core::ffi::c_str::CStr\">CStr</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3498\">source</a><a href=\"#method.default\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ffi/c_str/struct.CStr.html\" title=\"struct core::ffi::c_str::CStr\">CStr</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates an empty CStr inside an Arc</p>\n<p>This may or may not share an allocation with other Arcs.</p>\n</div></details></div></details>","Default","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Arc%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3438\">source</a></span><a href=\"#impl-Default-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3449\">source</a><a href=\"#method.default\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new <code>Arc&lt;T&gt;</code>, with the <code>Default</code> value for <code>T</code>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x: Arc&lt;i32&gt; = Default::default();\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>x, <span class=\"number\">0</span>);</code></pre></div>\n</div></details></div></details>","Default","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Arc%3Cstr%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.80.0\">1.80.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3478\">source</a></span><a href=\"#impl-Default-for-Arc%3Cstr%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3483\">source</a><a href=\"#method.default\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates an empty str inside an Arc</p>\n<p>This may or may not share an allocation with other Arcs.</p>\n</div></details></div></details>","Default","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2174\">source</a></span><a href=\"#impl-Deref-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2175\">source</a><a href=\"#associatedtype.Target\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = T</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2178\">source</a><a href=\"#method.deref\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#2087-2098\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'de, T&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"docblock\"><p>This impl requires the <a href=\"https://serde.rs/feature-flags.html#-features-rc\"><code>\"rc\"</code></a> Cargo feature of Serde.</p>\n<p>Deserializing a data structure containing <code>Arc</code> will not attempt to\ndeduplicate <code>Arc</code> references to the same data. Every deserialized <code>Arc</code>\nwill end up with a strong count of 1.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#2087-2098\">source</a><a href=\"#method.deserialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3416\">source</a></span><a href=\"#impl-Display-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3417\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2496\">source</a></span><a href=\"#impl-Drop-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2523\">source</a><a href=\"#method.drop\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Drops the <code>Arc</code>.</p>\n<p>This will decrement the strong reference count. If the strong reference\ncount reaches zero then the only other references (if any) are\n<a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a>, so we <code>drop</code> the inner value.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">struct </span>Foo;\n\n<span class=\"kw\">impl </span>Drop <span class=\"kw\">for </span>Foo {\n    <span class=\"kw\">fn </span>drop(<span class=\"kw-2\">&amp;mut </span><span class=\"self\">self</span>) {\n        <span class=\"macro\">println!</span>(<span class=\"string\">\"dropped!\"</span>);\n    }\n}\n\n<span class=\"kw\">let </span>foo  = Arc::new(Foo);\n<span class=\"kw\">let </span>foo2 = Arc::clone(<span class=\"kw-2\">&amp;</span>foo);\n\ndrop(foo);    <span class=\"comment\">// Doesn't print anything\n</span>drop(foo2);   <span class=\"comment\">// Prints \"dropped!\"</span></code></pre></div>\n</div></details></div></details>","Drop","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Error-for-Arc%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.52.0\">1.52.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3942\">source</a></span><a href=\"#impl-Error-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.description\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3944\">source</a><a href=\"#method.description\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.description\" class=\"fn\">description</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated since 1.42.0: use the Display impl or to_string()</span></div></span><div class='docblock'> <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.description\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cause\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3949\">source</a><a href=\"#method.cause\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.cause\" class=\"fn\">cause</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated since 1.33.0: replaced by Error::source, which can support downcasting</span></div></span></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.source\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3953\">source</a><a href=\"#method.source\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.source\" class=\"fn\">source</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;(dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns the lower-level source of this error, if any. <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.source\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.provide\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3957\">source</a><a href=\"#method.provide\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.provide\" class=\"fn\">provide</a>&lt;'a&gt;(&amp;'a self, req: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/error/struct.Request.html\" title=\"struct core::error::Request\">Request</a>&lt;'a&gt;)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>error_generic_member_access</code>)</span></div></span><div class='docblock'>Provides type-based access to context intended for error reports. <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.provide\">Read more</a></div></details></div></details>","Error","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Filter%3CS%3E-for-Arc%3Cdyn+Filter%3CS%3E+%2B+Send+%2B+Sync%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/filter/layer_filters/mod.rs.html#532\">source</a><a href=\"#impl-Filter%3CS%3E-for-Arc%3Cdyn+Filter%3CS%3E+%2B+Send+%2B+Sync%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"tracing_subscriber/layer/trait.Filter.html\" title=\"trait tracing_subscriber::layer::Filter\">Filter</a>&lt;S&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;dyn <a class=\"trait\" href=\"tracing_subscriber/layer/trait.Filter.html\" title=\"trait tracing_subscriber::layer::Filter\">Filter</a>&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.enabled\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/filter/layer_filters/mod.rs.html#533\">source</a><a href=\"#method.enabled\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_subscriber/layer/trait.Filter.html#tymethod.enabled\" class=\"fn\">enabled</a>(&amp;self, meta: &amp;<a class=\"struct\" href=\"tracing_core/metadata/struct.Metadata.html\" title=\"struct tracing_core::metadata::Metadata\">Metadata</a>&lt;'_&gt;, cx: &amp;<a class=\"struct\" href=\"tracing_subscriber/layer/context/struct.Context.html\" title=\"struct tracing_subscriber::layer::context::Context\">Context</a>&lt;'_, S&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if this layer is interested in a span or event with the\ngiven <a href=\"tracing_core/metadata/struct.Metadata.html\" title=\"struct tracing_core::metadata::Metadata\"><code>Metadata</code></a> in the current <a href=\"tracing_subscriber/layer/context/struct.Context.html\" title=\"struct tracing_subscriber::layer::context::Context\"><code>Context</code></a>, similarly to\n<a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.enabled\" title=\"method tracing_core::subscriber::Subscriber::enabled\"><code>Subscriber::enabled</code></a>. <a href=\"tracing_subscriber/layer/trait.Filter.html#tymethod.enabled\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.callsite_enabled\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/filter/layer_filters/mod.rs.html#533\">source</a><a href=\"#method.callsite_enabled\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_subscriber/layer/trait.Filter.html#method.callsite_enabled\" class=\"fn\">callsite_enabled</a>(&amp;self, meta: &amp;'static <a class=\"struct\" href=\"tracing_core/metadata/struct.Metadata.html\" title=\"struct tracing_core::metadata::Metadata\">Metadata</a>&lt;'static&gt;) -&gt; <a class=\"struct\" href=\"tracing_core/subscriber/struct.Interest.html\" title=\"struct tracing_core::subscriber::Interest\">Interest</a></h4></section></summary><div class='docblock'>Returns an <a href=\"tracing_core/subscriber/struct.Interest.html\" title=\"struct tracing_core::subscriber::Interest\"><code>Interest</code></a> indicating whether this layer will <a href=\"tracing_core/subscriber/struct.Interest.html#method.always\" title=\"associated function tracing_core::subscriber::Interest::always\">always</a>,\n<a href=\"tracing_core/subscriber/struct.Interest.html#method.sometimes\" title=\"associated function tracing_core::subscriber::Interest::sometimes\">sometimes</a>, or <a href=\"tracing_core/subscriber/struct.Interest.html#method.never\" title=\"associated function tracing_core::subscriber::Interest::never\">never</a> be interested in the given <a href=\"tracing_core/metadata/struct.Metadata.html\" title=\"struct tracing_core::metadata::Metadata\"><code>Metadata</code></a>. <a href=\"tracing_subscriber/layer/trait.Filter.html#method.callsite_enabled\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_level_hint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/filter/layer_filters/mod.rs.html#533\">source</a><a href=\"#method.max_level_hint\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_subscriber/layer/trait.Filter.html#method.max_level_hint\" class=\"fn\">max_level_hint</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"tracing_core/metadata/struct.LevelFilter.html\" title=\"struct tracing_core::metadata::LevelFilter\">LevelFilter</a>&gt;</h4></section></summary><div class='docblock'>Returns an optional hint of the highest <a href=\"abscissa_core/prelude/struct.Level.html\" title=\"struct abscissa_core::prelude::Level\">verbosity level</a> that\nthis <code>Filter</code> will enable. <a href=\"tracing_subscriber/layer/trait.Filter.html#method.max_level_hint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.event_enabled\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/filter/layer_filters/mod.rs.html#533\">source</a><a href=\"#method.event_enabled\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_subscriber/layer/trait.Filter.html#method.event_enabled\" class=\"fn\">event_enabled</a>(&amp;self, event: &amp;<a class=\"struct\" href=\"abscissa_core/prelude/event/struct.Event.html\" title=\"struct abscissa_core::prelude::event::Event\">Event</a>&lt;'_&gt;, cx: &amp;<a class=\"struct\" href=\"tracing_subscriber/layer/context/struct.Context.html\" title=\"struct tracing_subscriber::layer::context::Context\">Context</a>&lt;'_, S&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Called before the filtered [<code>Layer]'s [</code>on_event<code>], to determine if </code>on_event` should be called. <a href=\"tracing_subscriber/layer/trait.Filter.html#method.event_enabled\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_new_span\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/filter/layer_filters/mod.rs.html#533\">source</a><a href=\"#method.on_new_span\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_subscriber/layer/trait.Filter.html#method.on_new_span\" class=\"fn\">on_new_span</a>(&amp;self, attrs: &amp;<a class=\"struct\" href=\"abscissa_core/prelude/span/struct.Attributes.html\" title=\"struct abscissa_core::prelude::span::Attributes\">Attributes</a>&lt;'_&gt;, id: &amp;<a class=\"struct\" href=\"abscissa_core/prelude/span/struct.Id.html\" title=\"struct abscissa_core::prelude::span::Id\">Id</a>, ctx: <a class=\"struct\" href=\"tracing_subscriber/layer/context/struct.Context.html\" title=\"struct tracing_subscriber::layer::context::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this filter that a new span was constructed with the given\n<code>Attributes</code> and <code>Id</code>. <a href=\"tracing_subscriber/layer/trait.Filter.html#method.on_new_span\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_record\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/filter/layer_filters/mod.rs.html#533\">source</a><a href=\"#method.on_record\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_subscriber/layer/trait.Filter.html#method.on_record\" class=\"fn\">on_record</a>(&amp;self, id: &amp;<a class=\"struct\" href=\"abscissa_core/prelude/span/struct.Id.html\" title=\"struct abscissa_core::prelude::span::Id\">Id</a>, values: &amp;<a class=\"struct\" href=\"abscissa_core/prelude/span/struct.Record.html\" title=\"struct abscissa_core::prelude::span::Record\">Record</a>&lt;'_&gt;, ctx: <a class=\"struct\" href=\"tracing_subscriber/layer/context/struct.Context.html\" title=\"struct tracing_subscriber::layer::context::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this filter that a span with the given <code>Id</code> recorded the given\n<code>values</code>. <a href=\"tracing_subscriber/layer/trait.Filter.html#method.on_record\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_enter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/filter/layer_filters/mod.rs.html#533\">source</a><a href=\"#method.on_enter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_subscriber/layer/trait.Filter.html#method.on_enter\" class=\"fn\">on_enter</a>(&amp;self, id: &amp;<a class=\"struct\" href=\"abscissa_core/prelude/span/struct.Id.html\" title=\"struct abscissa_core::prelude::span::Id\">Id</a>, ctx: <a class=\"struct\" href=\"tracing_subscriber/layer/context/struct.Context.html\" title=\"struct tracing_subscriber::layer::context::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this filter that a span with the given ID was entered. <a href=\"tracing_subscriber/layer/trait.Filter.html#method.on_enter\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_exit\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/filter/layer_filters/mod.rs.html#533\">source</a><a href=\"#method.on_exit\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_subscriber/layer/trait.Filter.html#method.on_exit\" class=\"fn\">on_exit</a>(&amp;self, id: &amp;<a class=\"struct\" href=\"abscissa_core/prelude/span/struct.Id.html\" title=\"struct abscissa_core::prelude::span::Id\">Id</a>, ctx: <a class=\"struct\" href=\"tracing_subscriber/layer/context/struct.Context.html\" title=\"struct tracing_subscriber::layer::context::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this filter that a span with the given ID was exited. <a href=\"tracing_subscriber/layer/trait.Filter.html#method.on_exit\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_close\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/filter/layer_filters/mod.rs.html#533\">source</a><a href=\"#method.on_close\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_subscriber/layer/trait.Filter.html#method.on_close\" class=\"fn\">on_close</a>(&amp;self, id: <a class=\"struct\" href=\"abscissa_core/prelude/span/struct.Id.html\" title=\"struct abscissa_core::prelude::span::Id\">Id</a>, ctx: <a class=\"struct\" href=\"tracing_subscriber/layer/context/struct.Context.html\" title=\"struct tracing_subscriber::layer::context::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this filter that a span with the given ID has been closed. <a href=\"tracing_subscriber/layer/trait.Filter.html#method.on_close\">Read more</a></div></details></div></details>","Filter<S>","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3589\">source</a></span><a href=\"#impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3601\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Allocates a reference-counted slice and fills it by cloning <code>v</code>โs items.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">ยง</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>original: <span class=\"kw-2\">&amp;</span>[i32] = <span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];\n<span class=\"kw\">let </span>shared: Arc&lt;[i32]&gt; = Arc::from(original);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], <span class=\"kw-2\">&amp;</span>shared[..]);</code></pre></div>\n</div></details></div></details>","From<&[T]>","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.24.0\">1.24.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/ffi/c_str.rs.html#879\">source</a></span><a href=\"#impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ffi/c_str/struct.CStr.html\" title=\"struct core::ffi::c_str::CStr\">CStr</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ffi/c_str/struct.CStr.html\" title=\"struct core::ffi::c_str::CStr\">CStr</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/ffi/c_str.rs.html#883\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(s: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ffi/c_str/struct.CStr.html\" title=\"struct core::ffi::c_str::CStr\">CStr</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ffi/c_str/struct.CStr.html\" title=\"struct core::ffi::c_str::CStr\">CStr</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a <code>&amp;CStr</code> into a <code>Arc&lt;CStr&gt;</code>,\nby copying the contents into a newly allocated <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\"><code>Arc</code></a>.</p>\n</div></details></div></details>","From<&CStr>","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.24.0\">1.24.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/ffi/os_str.rs.html#1290\">source</a></span><a href=\"#impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/ffi/os_str/struct.OsStr.html\" title=\"struct std::ffi::os_str::OsStr\">OsStr</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/ffi/os_str/struct.OsStr.html\" title=\"struct std::ffi::os_str::OsStr\">OsStr</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/ffi/os_str.rs.html#1293\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(s: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/ffi/os_str/struct.OsStr.html\" title=\"struct std::ffi::os_str::OsStr\">OsStr</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/ffi/os_str/struct.OsStr.html\" title=\"struct std::ffi::os_str::OsStr\">OsStr</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Copies the string into a newly allocated <code><a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a href=\"https://doc.rust-lang.org/nightly/std/ffi/os_str/struct.OsStr.html\" title=\"struct std::ffi::os_str::OsStr\">OsStr</a>&gt;</code>.</p>\n</div></details></div></details>","From<&OsStr>","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26Path%3E-for-Arc%3CPath%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.24.0\">1.24.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/path.rs.html#1984\">source</a></span><a href=\"#impl-From%3C%26Path%3E-for-Arc%3CPath%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"struct\" href=\"abscissa_core/path/struct.Path.html\" title=\"struct abscissa_core::path::Path\">Path</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"abscissa_core/path/struct.Path.html\" title=\"struct abscissa_core::path::Path\">Path</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/path.rs.html#1987\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(s: &amp;<a class=\"struct\" href=\"abscissa_core/path/struct.Path.html\" title=\"struct abscissa_core::path::Path\">Path</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"abscissa_core/path/struct.Path.html\" title=\"struct abscissa_core::path::Path\">Path</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"abscissa_core/path/struct.Path.html\" title=\"struct abscissa_core::path::Path\"><code>Path</code></a> into an <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\"><code>Arc</code></a> by copying the <a href=\"abscissa_core/path/struct.Path.html\" title=\"struct abscissa_core::path::Path\"><code>Path</code></a> data into a new <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\"><code>Arc</code></a> buffer.</p>\n</div></details></div></details>","From<&Path>","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26str%3E-for-Arc%3Cstr%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3608\">source</a></span><a href=\"#impl-From%3C%26str%3E-for-Arc%3Cstr%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3619\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Allocates a reference-counted <code>str</code> and copies <code>v</code> into it.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">ยง</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>shared: Arc&lt;str&gt; = Arc::from(<span class=\"string\">\"eggplant\"</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"eggplant\"</span>, <span class=\"kw-2\">&amp;</span>shared[..]);</code></pre></div>\n</div></details></div></details>","From<&str>","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.74.0\">1.74.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3568\">source</a></span><a href=\"#impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; N]</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3582\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\" title=\"primitive array\"><code>[T; N]</code></a> into an <code>Arc&lt;[T]&gt;</code>.</p>\n<p>The conversion moves the array into a newly allocated <code>Arc</code>.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">ยง</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>original: [i32; <span class=\"number\">3</span>] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];\n<span class=\"kw\">let </span>shared: Arc&lt;[i32]&gt; = Arc::from(original);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], <span class=\"kw-2\">&amp;</span>shared[..]);</code></pre></div>\n</div></details></div></details>","From<[T; N]>","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.62.0\">1.62.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3721\">source</a></span><a href=\"#impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3733\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(rc: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;</h4></section></summary><div class=\"docblock\"><p>Converts an atomically reference-counted string slice into a byte slice.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">ยง</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>string: Arc&lt;str&gt; = Arc::from(<span class=\"string\">\"eggplant\"</span>);\n<span class=\"kw\">let </span>bytes: Arc&lt;[u8]&gt; = Arc::from(string);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"eggplant\"</span>.as_bytes(), bytes.as_ref());</code></pre></div>\n</div></details></div></details>","From<Arc<str>>","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3646\">source</a></span><a href=\"#impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3658\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;</h4></section></summary><div class=\"docblock\"><p>Move a boxed object to a new, reference-counted allocation.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">ยง</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>unique: Box&lt;str&gt; = Box::from(<span class=\"string\">\"eggplant\"</span>);\n<span class=\"kw\">let </span>shared: Arc&lt;str&gt; = Arc::from(unique);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"eggplant\"</span>, <span class=\"kw-2\">&amp;</span>shared[..]);</code></pre></div>\n</div></details></div></details>","From<Box<T, A>>","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCString%3E-for-Arc%3CCStr%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.24.0\">1.24.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/ffi/c_str.rs.html#867\">source</a></span><a href=\"#impl-From%3CCString%3E-for-Arc%3CCStr%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/ffi/c_str/struct.CString.html\" title=\"struct alloc::ffi::c_str::CString\">CString</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ffi/c_str/struct.CStr.html\" title=\"struct core::ffi::c_str::CStr\">CStr</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/ffi/c_str.rs.html#871\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(s: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/ffi/c_str/struct.CString.html\" title=\"struct alloc::ffi::c_str::CString\">CString</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ffi/c_str/struct.CStr.html\" title=\"struct core::ffi::c_str::CStr\">CStr</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"https://doc.rust-lang.org/nightly/alloc/ffi/c_str/struct.CString.html\" title=\"struct alloc::ffi::c_str::CString\"><code>CString</code></a> into an <code><a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a href=\"https://doc.rust-lang.org/nightly/core/ffi/c_str/struct.CStr.html\" title=\"struct core::ffi::c_str::CStr\">CStr</a>&gt;</code> by moving the <a href=\"https://doc.rust-lang.org/nightly/alloc/ffi/c_str/struct.CString.html\" title=\"struct alloc::ffi::c_str::CString\"><code>CString</code></a>\ndata into a new <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\"><code>Arc</code></a> buffer.</p>\n</div></details></div></details>","From<CString>","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCow%3C'a,+B%3E%3E-for-Arc%3CB%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3694-3697\">source</a></span><a href=\"#impl-From%3CCow%3C'a,+B%3E%3E-for-Arc%3CB%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'a, B&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;B&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/trait.ToOwned.html\" title=\"trait alloc::borrow::ToOwned\">ToOwned</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;B&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a B</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;B as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/trait.ToOwned.html\" title=\"trait alloc::borrow::ToOwned\">ToOwned</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/trait.ToOwned.html#associatedtype.Owned\" title=\"type alloc::borrow::ToOwned::Owned\">Owned</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3712\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(cow: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'a, B&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;B&gt;</h4></section></summary><div class=\"docblock\"><p>Creates an atomically reference-counted pointer from a clone-on-write\npointer by copying its content.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">ยง</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>cow: Cow&lt;<span class=\"lifetime\">'_</span>, str&gt; = Cow::Borrowed(<span class=\"string\">\"eggplant\"</span>);\n<span class=\"kw\">let </span>shared: Arc&lt;str&gt; = Arc::from(cow);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"eggplant\"</span>, <span class=\"kw-2\">&amp;</span>shared[..]);</code></pre></div>\n</div></details></div></details>","From<Cow<'a, B>>","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3COsString%3E-for-Arc%3COsStr%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.24.0\">1.24.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/ffi/os_str.rs.html#1279\">source</a></span><a href=\"#impl-From%3COsString%3E-for-Arc%3COsStr%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/ffi/os_str/struct.OsString.html\" title=\"struct std::ffi::os_str::OsString\">OsString</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/ffi/os_str/struct.OsStr.html\" title=\"struct std::ffi::os_str::OsStr\">OsStr</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/ffi/os_str.rs.html#1283\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(s: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/ffi/os_str/struct.OsString.html\" title=\"struct std::ffi::os_str::OsString\">OsString</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/ffi/os_str/struct.OsStr.html\" title=\"struct std::ffi::os_str::OsStr\">OsStr</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts an <a href=\"https://doc.rust-lang.org/nightly/std/ffi/os_str/struct.OsString.html\" title=\"struct std::ffi::os_str::OsString\"><code>OsString</code></a> into an <code><a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a href=\"https://doc.rust-lang.org/nightly/std/ffi/os_str/struct.OsStr.html\" title=\"struct std::ffi::os_str::OsStr\">OsStr</a>&gt;</code> by moving the <a href=\"https://doc.rust-lang.org/nightly/std/ffi/os_str/struct.OsString.html\" title=\"struct std::ffi::os_str::OsString\"><code>OsString</code></a>\ndata into a new <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\"><code>Arc</code></a> buffer.</p>\n</div></details></div></details>","From<OsString>","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.24.0\">1.24.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/path.rs.html#1973\">source</a></span><a href=\"#impl-From%3CPathBuf%3E-for-Arc%3CPath%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"abscissa_core/path/struct.PathBuf.html\" title=\"struct abscissa_core::path::PathBuf\">PathBuf</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"abscissa_core/path/struct.Path.html\" title=\"struct abscissa_core::path::Path\">Path</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/path.rs.html#1977\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(s: <a class=\"struct\" href=\"abscissa_core/path/struct.PathBuf.html\" title=\"struct abscissa_core::path::PathBuf\">PathBuf</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"abscissa_core/path/struct.Path.html\" title=\"struct abscissa_core::path::Path\">Path</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"abscissa_core/path/struct.PathBuf.html\" title=\"struct abscissa_core::path::PathBuf\"><code>PathBuf</code></a> into an <code><a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a href=\"abscissa_core/path/struct.Path.html\" title=\"struct abscissa_core::path::Path\">Path</a>&gt;</code> by moving the <a href=\"abscissa_core/path/struct.PathBuf.html\" title=\"struct abscissa_core::path::PathBuf\"><code>PathBuf</code></a> data\ninto a new <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\"><code>Arc</code></a> buffer.</p>\n</div></details></div></details>","From<PathBuf>","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CString%3E-for-Arc%3Cstr%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3627\">source</a></span><a href=\"#impl-From%3CString%3E-for-Arc%3Cstr%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3639\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Allocates a reference-counted <code>str</code> and copies <code>v</code> into it.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">ยง</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>unique: String = <span class=\"string\">\"eggplant\"</span>.to_owned();\n<span class=\"kw\">let </span>shared: Arc&lt;str&gt; = Arc::from(unique);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"eggplant\"</span>, <span class=\"kw-2\">&amp;</span>shared[..]);</code></pre></div>\n</div></details></div></details>","From<String>","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CT%3E-for-Arc%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3546\">source</a></span><a href=\"#impl-From%3CT%3E-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3561\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(t: T) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a <code>T</code> into an <code>Arc&lt;T&gt;</code></p>\n<p>The conversion moves the value into a\nnewly allocated <code>Arc</code>. It is equivalent to\ncalling <code>Arc::new(t)</code>.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">ยง</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"number\">5</span>;\n<span class=\"kw\">let </span>arc = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert_eq!</span>(Arc::from(x), arc);</code></pre></div>\n</div></details></div></details>","From<T>","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3665\">source</a></span><a href=\"#impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T, A&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3677\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T, A&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>, A&gt;</h4></section></summary><div class=\"docblock\"><p>Allocates a reference-counted slice and moves <code>v</code>โs items into it.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">ยง</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>unique: Vec&lt;i32&gt; = <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];\n<span class=\"kw\">let </span>shared: Arc&lt;[i32]&gt; = Arc::from(unique);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], <span class=\"kw-2\">&amp;</span>shared[..]);</code></pre></div>\n</div></details></div></details>","From<Vec<T, A>>","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CT%3E-for-Arc%3C%5BT%5D%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.37.0\">1.37.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3755\">source</a></span><a href=\"#impl-FromIterator%3CT%3E-for-Arc%3C%5BT%5D%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3794\">source</a><a href=\"#method.from_iter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Takes each element in the <code>Iterator</code> and collects it into an <code>Arc&lt;[T]&gt;</code>.</p>\n<h5 id=\"performance-characteristics\"><a class=\"doc-anchor\" href=\"#performance-characteristics\">ยง</a>Performance characteristics</h5><h6 id=\"the-general-case\"><a class=\"doc-anchor\" href=\"#the-general-case\">ยง</a>The general case</h6>\n<p>In the general case, collecting into <code>Arc&lt;[T]&gt;</code> is done by first\ncollecting into a <code>Vec&lt;T&gt;</code>. That is, when writing the following:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>evens: Arc&lt;[u8]&gt; = (<span class=\"number\">0</span>..<span class=\"number\">10</span>).filter(|<span class=\"kw-2\">&amp;</span>x| x % <span class=\"number\">2 </span>== <span class=\"number\">0</span>).collect();</code></pre></div>\n<p>this behaves as if we wrote:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>evens: Arc&lt;[u8]&gt; = (<span class=\"number\">0</span>..<span class=\"number\">10</span>).filter(|<span class=\"kw-2\">&amp;</span>x| x % <span class=\"number\">2 </span>== <span class=\"number\">0</span>)\n    .collect::&lt;Vec&lt;<span class=\"kw\">_</span>&gt;&gt;() <span class=\"comment\">// The first set of allocations happens here.\n    </span>.into(); <span class=\"comment\">// A second allocation for `Arc&lt;[T]&gt;` happens here.</span></code></pre></div>\n<p>This will allocate as many times as needed for constructing the <code>Vec&lt;T&gt;</code>\nand then it will allocate once for turning the <code>Vec&lt;T&gt;</code> into the <code>Arc&lt;[T]&gt;</code>.</p>\n<h6 id=\"iterators-of-known-length\"><a class=\"doc-anchor\" href=\"#iterators-of-known-length\">ยง</a>Iterators of known length</h6>\n<p>When your <code>Iterator</code> implements <code>TrustedLen</code> and is of an exact size,\na single allocation will be made for the <code>Arc&lt;[T]&gt;</code>. For example:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>evens: Arc&lt;[u8]&gt; = (<span class=\"number\">0</span>..<span class=\"number\">10</span>).collect(); <span class=\"comment\">// Just a single allocation happens here.</span></code></pre></div>\n</div></details></div></details>","FromIterator<T>","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3538\">source</a></span><a href=\"#impl-Hash-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3539\">source</a><a href=\"#method.hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Log-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/log/lib.rs.html#1251-1253\">source</a><a href=\"#impl-Log-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"log/trait.Log.html\" title=\"trait log::Log\">Log</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"log/trait.Log.html\" title=\"trait log::Log\">Log</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.enabled\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/log/lib.rs.html#1255\">source</a><a href=\"#method.enabled\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"log/trait.Log.html#tymethod.enabled\" class=\"fn\">enabled</a>(&amp;self, metadata: &amp;<a class=\"struct\" href=\"log/struct.Metadata.html\" title=\"struct log::Metadata\">Metadata</a>&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Determines if a log message with the specified metadata would be\nlogged. <a href=\"log/trait.Log.html#tymethod.enabled\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.log\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/log/lib.rs.html#1259\">source</a><a href=\"#method.log\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"log/trait.Log.html#tymethod.log\" class=\"fn\">log</a>(&amp;self, record: &amp;<a class=\"struct\" href=\"log/struct.Record.html\" title=\"struct log::Record\">Record</a>&lt;'_&gt;)</h4></section></summary><div class='docblock'>Logs the <code>Record</code>. <a href=\"log/trait.Log.html#tymethod.log\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/log/lib.rs.html#1262\">source</a><a href=\"#method.flush\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"log/trait.Log.html#tymethod.flush\" class=\"fn\">flush</a>(&amp;self)</h4></section></summary><div class='docblock'>Flushes any buffered records. <a href=\"log/trait.Log.html#tymethod.flush\">Read more</a></div></details></div></details>","Log","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MakeWriter%3C'a%3E-for-Arc%3CW%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/fmt/writer.rs.html#687-689\">source</a><a href=\"#impl-MakeWriter%3C'a%3E-for-Arc%3CW%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, W&gt; <a class=\"trait\" href=\"tracing_subscriber/fmt/writer/trait.MakeWriter.html\" title=\"trait tracing_subscriber::fmt::writer::MakeWriter\">MakeWriter</a>&lt;'a&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;W&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a W</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a> + 'a,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Writer\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/fmt/writer.rs.html#691\">source</a><a href=\"#associatedtype.Writer\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"tracing_subscriber/fmt/writer/trait.MakeWriter.html#associatedtype.Writer\" class=\"associatedtype\">Writer</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a W</a></h4></section></summary><div class='docblock'>The concrete <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html\" title=\"trait std::io::Write\"><code>io::Write</code></a> implementation returned by <a href=\"tracing_subscriber/fmt/writer/trait.MakeWriter.html#tymethod.make_writer\" title=\"method tracing_subscriber::fmt::writer::MakeWriter::make_writer\"><code>make_writer</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.make_writer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/fmt/writer.rs.html#692\">source</a><a href=\"#method.make_writer\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_subscriber/fmt/writer/trait.MakeWriter.html#tymethod.make_writer\" class=\"fn\">make_writer</a>(&amp;'a self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;W&gt; as <a class=\"trait\" href=\"tracing_subscriber/fmt/writer/trait.MakeWriter.html\" title=\"trait tracing_subscriber::fmt::writer::MakeWriter\">MakeWriter</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"tracing_subscriber/fmt/writer/trait.MakeWriter.html#associatedtype.Writer\" title=\"type tracing_subscriber::fmt::writer::MakeWriter::Writer\">Writer</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&lt;Arc&lt;W&gt; as MakeWriter&lt;&#39;a&gt;&gt;::Writer\">โ</a></h4></section></summary><div class='docblock'>Returns an instance of <a href=\"tracing_subscriber/fmt/writer/trait.MakeWriter.html#associatedtype.Writer\" title=\"associated type tracing_subscriber::fmt::writer::MakeWriter::Writer\"><code>Writer</code></a>. <a href=\"tracing_subscriber/fmt/writer/trait.MakeWriter.html#tymethod.make_writer\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.make_writer_for\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/fmt/writer.rs.html#205\">source</a><a href=\"#method.make_writer_for\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_subscriber/fmt/writer/trait.MakeWriter.html#method.make_writer_for\" class=\"fn\">make_writer_for</a>(&amp;'a self, meta: &amp;<a class=\"struct\" href=\"tracing_core/metadata/struct.Metadata.html\" title=\"struct tracing_core::metadata::Metadata\">Metadata</a>&lt;'_&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"tracing_subscriber/fmt/writer/trait.MakeWriter.html#associatedtype.Writer\" title=\"type tracing_subscriber::fmt::writer::MakeWriter::Writer\">Writer</a></h4></section></summary><div class='docblock'>Returns a <a href=\"tracing_subscriber/fmt/writer/trait.MakeWriter.html#associatedtype.Writer\" title=\"associated type tracing_subscriber::fmt::writer::MakeWriter::Writer\"><code>Writer</code></a> for writing data from the span or event described\nby the provided <a href=\"tracing_core/metadata/struct.Metadata.html\" title=\"struct tracing_core::metadata::Metadata\"><code>Metadata</code></a>. <a href=\"tracing_subscriber/fmt/writer/trait.MakeWriter.html#method.make_writer_for\">Read more</a></div></details></div></details>","MakeWriter<'a>","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3393\">source</a></span><a href=\"#impl-Ord-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3408\">source</a><a href=\"#method.cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class=\"docblock\"><p>Comparison for two <code>Arc</code>s.</p>\n<p>The two are compared by calling <code>cmp()</code> on their inner values.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::cmp::Ordering;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert_eq!</span>(Ordering::Less, five.cmp(<span class=\"kw-2\">&amp;</span>Arc::new(<span class=\"number\">6</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#980-982\">source</a></span><a href=\"#method.max\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1001-1003\">source</a></span><a href=\"#method.min\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1027-1029\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3259\">source</a></span><a href=\"#impl-PartialEq-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3278\">source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Equality for two <code>Arc</code>s.</p>\n<p>Two <code>Arc</code>s are equal if their inner values are equal, even if they are\nstored in different allocation.</p>\n<p>If <code>T</code> also implements <code>Eq</code> (implying reflexivity of equality),\ntwo <code>Arc</code>s that point to the same allocation are always equal.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert!</span>(five == Arc::new(<span class=\"number\">5</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3299\">source</a><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Inequality for two <code>Arc</code>s.</p>\n<p>Two <code>Arc</code>s are not equal if their inner values are not equal.</p>\n<p>If <code>T</code> also implements <code>Eq</code> (implying reflexivity of equality),\ntwo <code>Arc</code>s that point to the same value are always equal.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert!</span>(five != Arc::new(<span class=\"number\">6</span>));</code></pre></div>\n</div></details></div></details>","PartialEq","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3305\">source</a></span><a href=\"#impl-PartialOrd-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3320\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Partial comparison for two <code>Arc</code>s.</p>\n<p>The two are compared by calling <code>partial_cmp()</code> on their inner values.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::cmp::Ordering;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(Ordering::Less), five.partial_cmp(<span class=\"kw-2\">&amp;</span>Arc::new(<span class=\"number\">6</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3337\">source</a><a href=\"#method.lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Less-than comparison for two <code>Arc</code>s.</p>\n<p>The two are compared by calling <code>&lt;</code> on their inner values.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert!</span>(five &lt; Arc::new(<span class=\"number\">6</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3354\">source</a><a href=\"#method.le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>โLess than or equal toโ comparison for two <code>Arc</code>s.</p>\n<p>The two are compared by calling <code>&lt;=</code> on their inner values.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert!</span>(five &lt;= Arc::new(<span class=\"number\">5</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3371\">source</a><a href=\"#method.gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Greater-than comparison for two <code>Arc</code>s.</p>\n<p>The two are compared by calling <code>&gt;</code> on their inner values.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert!</span>(five &gt; Arc::new(<span class=\"number\">4</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3388\">source</a><a href=\"#method.ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>โGreater than or equal toโ comparison for two <code>Arc</code>s.</p>\n<p>The two are compared by calling <code>&gt;=</code> on their inner values.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert!</span>(five &gt;= Arc::new(<span class=\"number\">5</span>));</code></pre></div>\n</div></details></div></details>","PartialOrd","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pointer-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3430\">source</a></span><a href=\"#impl-Pointer-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Pointer.html\" title=\"trait core::fmt::Pointer\">Pointer</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3431\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Pointer.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Pointer.html#tymethod.fmt\">Read more</a></div></details></div></details>","Pointer","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Read-for-Arc%3CFile%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.73.0\">1.73.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/fs.rs.html#1041\">source</a></span><a href=\"#impl-Read-for-Arc%3CFile%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/fs/struct.File.html\" title=\"struct std::fs::File\">File</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/fs.rs.html#1042\">source</a><a href=\"#method.read\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#tymethod.read\" class=\"fn\">read</a>(&amp;mut self, buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Pull some bytes from this source into the specified buffer, returning\nhow many bytes were read. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#tymethod.read\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/fs.rs.html#1045\">source</a><a href=\"#method.read_vectored\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_vectored\" class=\"fn\">read_vectored</a>(&amp;mut self, bufs: &amp;mut [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/struct.IoSliceMut.html\" title=\"struct std::io::IoSliceMut\">IoSliceMut</a>&lt;'_&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Like <code>read</code>, except that it reads into a slice of buffers. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_buf\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/fs.rs.html#1048\">source</a><a href=\"#method.read_buf\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_buf\" class=\"fn\">read_buf</a>(&amp;mut self, cursor: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/io/borrowed_buf/struct.BorrowedCursor.html\" title=\"struct core::io::borrowed_buf::BorrowedCursor\">BorrowedCursor</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>read_buf</code>)</span></div></span><div class='docblock'>Pull some bytes from this source into the specified buffer. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_buf\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_read_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/fs.rs.html#1052\">source</a><a href=\"#method.is_read_vectored\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.is_read_vectored\" class=\"fn\">is_read_vectored</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>can_vector</code>)</span></div></span><div class='docblock'>Determines if this <code>Read</code>er has an efficient <code>read_vectored</code>\nimplementation. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.is_read_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_to_end\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/fs.rs.html#1055\">source</a><a href=\"#method.read_to_end\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_to_end\" class=\"fn\">read_to_end</a>(&amp;mut self, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads all bytes until EOF in this source, placing them into <code>buf</code>. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_to_end\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_to_string\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/fs.rs.html#1058\">source</a><a href=\"#method.read_to_string\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_to_string\" class=\"fn\">read_to_string</a>(&amp;mut self, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads all bytes until EOF in this source, appending them to <code>buf</code>. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_to_string\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_exact\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#971\">source</a></span><a href=\"#method.read_exact\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_exact\" class=\"fn\">read_exact</a>(&amp;mut self, buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads the exact number of bytes required to fill <code>buf</code>. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_exact\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_buf_exact\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#1007\">source</a><a href=\"#method.read_buf_exact\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_buf_exact\" class=\"fn\">read_buf_exact</a>(&amp;mut self, cursor: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/io/borrowed_buf/struct.BorrowedCursor.html\" title=\"struct core::io::borrowed_buf::BorrowedCursor\">BorrowedCursor</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>read_buf</code>)</span></div></span><div class='docblock'>Reads the exact number of bytes required to fill <code>cursor</code>. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_buf_exact\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#1046-1048\">source</a></span><a href=\"#method.by_ref\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; &amp;mut Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates a โby referenceโ adaptor for this instance of <code>Read</code>. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.by_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bytes\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#1089-1091\">source</a></span><a href=\"#method.bytes\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.bytes\" class=\"fn\">bytes</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/struct.Bytes.html\" title=\"struct std::io::Bytes\">Bytes</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Transforms this <code>Read</code> instance to an <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> over its bytes. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#1127-1129\">source</a></span><a href=\"#method.chain\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.chain\" class=\"fn\">chain</a>&lt;R&gt;(self, next: R) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/struct.Chain.html\" title=\"struct std::io::Chain\">Chain</a>&lt;Self, R&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adapter which will chain this stream with another. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.chain\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#1166-1168\">source</a></span><a href=\"#method.take\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.take\" class=\"fn\">take</a>(self, limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/struct.Take.html\" title=\"struct std::io::Take\">Take</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adapter which will read at most <code>limit</code> bytes from it. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.take\">Read more</a></div></details></div></details>","Read","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RefCnt-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arc_swap/ref_cnt.rs.html#91\">source</a><a href=\"#impl-RefCnt-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"arc_swap/ref_cnt/trait.RefCnt.html\" title=\"trait arc_swap::ref_cnt::RefCnt\">RefCnt</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Base\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/arc_swap/ref_cnt.rs.html#92\">source</a><a href=\"#associatedtype.Base\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"arc_swap/ref_cnt/trait.RefCnt.html#associatedtype.Base\" class=\"associatedtype\">Base</a> = T</h4></section></summary><div class='docblock'>The base type the pointer points to.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_ptr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arc_swap/ref_cnt.rs.html#93\">source</a><a href=\"#method.into_ptr\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"arc_swap/ref_cnt/trait.RefCnt.html#tymethod.into_ptr\" class=\"fn\">into_ptr</a>(me: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut T</a></h4></section></summary><div class='docblock'>Converts the smart pointer into a raw pointer, without affecting the reference count. <a href=\"arc_swap/ref_cnt/trait.RefCnt.html#tymethod.into_ptr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arc_swap/ref_cnt.rs.html#96\">source</a><a href=\"#method.as_ptr\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"arc_swap/ref_cnt/trait.RefCnt.html#tymethod.as_ptr\" class=\"fn\">as_ptr</a>(me: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut T</a></h4></section></summary><div class='docblock'>Provides a view into the smart pointer as a raw pointer. <a href=\"arc_swap/ref_cnt/trait.RefCnt.html#tymethod.as_ptr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ptr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arc_swap/ref_cnt.rs.html#121\">source</a><a href=\"#method.from_ptr\" class=\"anchor\">ยง</a><h4 class=\"code-header\">unsafe fn <a href=\"arc_swap/ref_cnt/trait.RefCnt.html#tymethod.from_ptr\" class=\"fn\">from_ptr</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Converts a raw pointer back into the smart pointer, without affecting the reference count. <a href=\"arc_swap/ref_cnt/trait.RefCnt.html#tymethod.from_ptr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inc\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arc_swap/ref_cnt.rs.html#73\">source</a><a href=\"#method.inc\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"arc_swap/ref_cnt/trait.RefCnt.html#method.inc\" class=\"fn\">inc</a>(me: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>Self::<a class=\"associatedtype\" href=\"arc_swap/ref_cnt/trait.RefCnt.html#associatedtype.Base\" title=\"type arc_swap::ref_cnt::RefCnt::Base\">Base</a></h4></section></summary><div class='docblock'>Increments the reference count by one. <a href=\"arc_swap/ref_cnt/trait.RefCnt.html#method.inc\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dec\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arc_swap/ref_cnt.rs.html#86\">source</a><a href=\"#method.dec\" class=\"anchor\">ยง</a><h4 class=\"code-header\">unsafe fn <a href=\"arc_swap/ref_cnt/trait.RefCnt.html#method.dec\" class=\"fn\">dec</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>Self::<a class=\"associatedtype\" href=\"arc_swap/ref_cnt/trait.RefCnt.html#associatedtype.Base\" title=\"type arc_swap::ref_cnt::RefCnt::Base\">Base</a>)</h4></section></summary><div class='docblock'>Decrements the reference count by one. <a href=\"arc_swap/ref_cnt/trait.RefCnt.html#method.dec\">Read more</a></div></details></div></details>","RefCnt","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Seek-for-Arc%3CFile%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.73.0\">1.73.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/fs.rs.html#1080\">source</a></span><a href=\"#impl-Seek-for-Arc%3CFile%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Seek.html\" title=\"trait std::io::Seek\">Seek</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/fs/struct.File.html\" title=\"struct std::fs::File\">File</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.seek\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/fs.rs.html#1081\">source</a><a href=\"#method.seek\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Seek.html#tymethod.seek\" class=\"fn\">seek</a>(&amp;mut self, pos: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/std/io/enum.SeekFrom.html\" title=\"enum std::io::SeekFrom\">SeekFrom</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Seek to an offset, in bytes, in a stream. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Seek.html#tymethod.seek\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rewind\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.55.0\">1.55.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#1961\">source</a></span><a href=\"#method.rewind\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Seek.html#method.rewind\" class=\"fn\">rewind</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Rewind to the beginning of a stream. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Seek.html#method.rewind\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stream_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#2001\">source</a><a href=\"#method.stream_len\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Seek.html#method.stream_len\" class=\"fn\">stream_len</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>seek_stream_len</code>)</span></div></span><div class='docblock'>Returns the length of this stream (in bytes). <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Seek.html#method.stream_len\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stream_position\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#2038\">source</a></span><a href=\"#method.stream_position\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Seek.html#method.stream_position\" class=\"fn\">stream_position</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Returns the current seek position from the start of the stream. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Seek.html#method.stream_position\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.seek_relative\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.80.0\">1.80.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#2066\">source</a></span><a href=\"#method.seek_relative\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Seek.html#method.seek_relative\" class=\"fn\">seek_relative</a>(&amp;mut self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Seeks relative to the current position. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Seek.html#method.seek_relative\">Read more</a></div></details></div></details>","Seek","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#555-567\">source</a><a href=\"#impl-Serialize-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"docblock\"><p>This impl requires the <a href=\"https://serde.rs/feature-flags.html#-features-rc\"><code>\"rc\"</code></a> Cargo feature of Serde.</p>\n<p>Serializing a data structure containing <code>Arc</code> will serialize a copy of\nthe contents of the <code>Arc</code> each time the <code>Arc</code> is referenced within the\ndata structure. Serialization will not attempt to deduplicate these\nrepeated data.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#555-567\">source</a><a href=\"#method.serialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Subscriber-for-Arc%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#795-797\">source</a><a href=\"#impl-Subscriber-for-Arc%3CS%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"tracing_core/subscriber/trait.Subscriber.html\" title=\"trait tracing_core::subscriber::Subscriber\">Subscriber</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"tracing_core/subscriber/trait.Subscriber.html\" title=\"trait tracing_core::subscriber::Subscriber\">Subscriber</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_callsite\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#800\">source</a><a href=\"#method.register_callsite\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.register_callsite\" class=\"fn\">register_callsite</a>(&amp;self, metadata: &amp;'static <a class=\"struct\" href=\"tracing_core/metadata/struct.Metadata.html\" title=\"struct tracing_core::metadata::Metadata\">Metadata</a>&lt;'static&gt;) -&gt; <a class=\"struct\" href=\"tracing_core/subscriber/struct.Interest.html\" title=\"struct tracing_core::subscriber::Interest\">Interest</a></h4></section></summary><div class='docblock'>Registers a new <a href=\"tracing_core/callsite/index.html\" title=\"mod tracing_core::callsite\">callsite</a> with this subscriber, returning whether or not\nthe subscriber is interested in being notified about the callsite. <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.register_callsite\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enabled\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#805\">source</a><a href=\"#method.enabled\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.enabled\" class=\"fn\">enabled</a>(&amp;self, metadata: &amp;<a class=\"struct\" href=\"tracing_core/metadata/struct.Metadata.html\" title=\"struct tracing_core::metadata::Metadata\">Metadata</a>&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if a span or event with the specified <a href=\"tracing_core/metadata/struct.Metadata.html\" title=\"struct tracing_core::metadata::Metadata\">metadata</a> would be\nrecorded. <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.enabled\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_level_hint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#810\">source</a><a href=\"#method.max_level_hint\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.max_level_hint\" class=\"fn\">max_level_hint</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"tracing_core/metadata/struct.LevelFilter.html\" title=\"struct tracing_core::metadata::LevelFilter\">LevelFilter</a>&gt;</h4></section></summary><div class='docblock'>Returns the highest <a href=\"abscissa_core/prelude/struct.Level.html\" title=\"struct abscissa_core::prelude::Level\">verbosity level</a> that this <code>Subscriber</code> will\nenable, or <code>None</code>, if the subscriber does not implement level-based\nfiltering or chooses not to implement this method. <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.max_level_hint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_span\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#815\">source</a><a href=\"#method.new_span\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.new_span\" class=\"fn\">new_span</a>(&amp;self, span: &amp;<a class=\"struct\" href=\"abscissa_core/prelude/span/struct.Attributes.html\" title=\"struct abscissa_core::prelude::span::Attributes\">Attributes</a>&lt;'_&gt;) -&gt; <a class=\"struct\" href=\"abscissa_core/prelude/span/struct.Id.html\" title=\"struct abscissa_core::prelude::span::Id\">Id</a></h4></section></summary><div class='docblock'>Visit the construction of a new span, returning a new <a href=\"abscissa_core/prelude/span/struct.Id.html\" title=\"struct abscissa_core::prelude::span::Id\">span ID</a> for the\nspan being constructed. <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.new_span\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.record\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#820\">source</a><a href=\"#method.record\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.record\" class=\"fn\">record</a>(&amp;self, span: &amp;<a class=\"struct\" href=\"abscissa_core/prelude/span/struct.Id.html\" title=\"struct abscissa_core::prelude::span::Id\">Id</a>, values: &amp;<a class=\"struct\" href=\"abscissa_core/prelude/span/struct.Record.html\" title=\"struct abscissa_core::prelude::span::Record\">Record</a>&lt;'_&gt;)</h4></section></summary><div class='docblock'>Record a set of values on a span. <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.record\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.record_follows_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#825\">source</a><a href=\"#method.record_follows_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.record_follows_from\" class=\"fn\">record_follows_from</a>(&amp;self, span: &amp;<a class=\"struct\" href=\"abscissa_core/prelude/span/struct.Id.html\" title=\"struct abscissa_core::prelude::span::Id\">Id</a>, follows: &amp;<a class=\"struct\" href=\"abscissa_core/prelude/span/struct.Id.html\" title=\"struct abscissa_core::prelude::span::Id\">Id</a>)</h4></section></summary><div class='docblock'>Adds an indication that <code>span</code> follows from the span with the id\n<code>follows</code>. <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.record_follows_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.event_enabled\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#830\">source</a><a href=\"#method.event_enabled\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.event_enabled\" class=\"fn\">event_enabled</a>(&amp;self, event: &amp;<a class=\"struct\" href=\"abscissa_core/prelude/event/struct.Event.html\" title=\"struct abscissa_core::prelude::event::Event\">Event</a>&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Determine if an <a href=\"abscissa_core/prelude/event/struct.Event.html\" title=\"struct abscissa_core::prelude::event::Event\"><code>Event</code></a> should be recorded. <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.event_enabled\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#835\">source</a><a href=\"#method.event\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.event\" class=\"fn\">event</a>(&amp;self, event: &amp;<a class=\"struct\" href=\"abscissa_core/prelude/event/struct.Event.html\" title=\"struct abscissa_core::prelude::event::Event\">Event</a>&lt;'_&gt;)</h4></section></summary><div class='docblock'>Records that an <a href=\"abscissa_core/prelude/event/struct.Event.html\" title=\"struct abscissa_core::prelude::event::Event\"><code>Event</code></a> has occurred. <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.event\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#840\">source</a><a href=\"#method.enter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.enter\" class=\"fn\">enter</a>(&amp;self, span: &amp;<a class=\"struct\" href=\"abscissa_core/prelude/span/struct.Id.html\" title=\"struct abscissa_core::prelude::span::Id\">Id</a>)</h4></section></summary><div class='docblock'>Records that a span has been entered. <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.enter\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exit\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#845\">source</a><a href=\"#method.exit\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.exit\" class=\"fn\">exit</a>(&amp;self, span: &amp;<a class=\"struct\" href=\"abscissa_core/prelude/span/struct.Id.html\" title=\"struct abscissa_core::prelude::span::Id\">Id</a>)</h4></section></summary><div class='docblock'>Records that a span has been exited. <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.exit\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_span\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#850\">source</a><a href=\"#method.clone_span\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.clone_span\" class=\"fn\">clone_span</a>(&amp;self, id: &amp;<a class=\"struct\" href=\"abscissa_core/prelude/span/struct.Id.html\" title=\"struct abscissa_core::prelude::span::Id\">Id</a>) -&gt; <a class=\"struct\" href=\"abscissa_core/prelude/span/struct.Id.html\" title=\"struct abscissa_core::prelude::span::Id\">Id</a></h4></section></summary><div class='docblock'>Notifies the subscriber that a <a href=\"abscissa_core/prelude/span/struct.Id.html\" title=\"struct abscissa_core::prelude::span::Id\">span ID</a> has been cloned. <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.clone_span\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_close\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#855\">source</a><a href=\"#method.try_close\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.try_close\" class=\"fn\">try_close</a>(&amp;self, id: <a class=\"struct\" href=\"abscissa_core/prelude/span/struct.Id.html\" title=\"struct abscissa_core::prelude::span::Id\">Id</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Notifies the subscriber that a <a href=\"abscissa_core/prelude/span/struct.Id.html\" title=\"struct abscissa_core::prelude::span::Id\">span ID</a> has been dropped, and returns\n<code>true</code> if there are now 0 IDs that refer to that span. <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.try_close\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop_span\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#861\">source</a><a href=\"#method.drop_span\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.drop_span\" class=\"fn\">drop_span</a>(&amp;self, id: <a class=\"struct\" href=\"abscissa_core/prelude/span/struct.Id.html\" title=\"struct abscissa_core::prelude::span::Id\">Id</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated since 0.1.2: use <code>Subscriber::try_close</code> instead</span></div></span><div class='docblock'><strong>This method is deprecated.</strong> <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.drop_span\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_span\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#866\">source</a><a href=\"#method.current_span\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.current_span\" class=\"fn\">current_span</a>(&amp;self) -&gt; <a class=\"struct\" href=\"tracing_core/span/struct.Current.html\" title=\"struct tracing_core::span::Current\">Current</a></h4></section></summary><div class='docblock'>Returns a type representing this subscriberโs view of the current span. <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.current_span\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.downcast_raw\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#871\">source</a><a href=\"#method.downcast_raw\" class=\"anchor\">ยง</a><h4 class=\"code-header\">unsafe fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.downcast_raw\" class=\"fn\">downcast_raw</a>(&amp;self, id: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>If <code>self</code> is the same type as the provided <code>TypeId</code>, returns an untyped\n<code>*const</code> pointer to that type. Otherwise, returns <code>None</code>. <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.downcast_raw\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_register_dispatch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#103\">source</a><a href=\"#method.on_register_dispatch\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.on_register_dispatch\" class=\"fn\">on_register_dispatch</a>(&amp;self, subscriber: &amp;<a class=\"struct\" href=\"tracing_core/dispatcher/struct.Dispatch.html\" title=\"struct tracing_core::dispatcher::Dispatch\">Dispatch</a>)</h4></section></summary><div class='docblock'>Invoked when this subscriber becomes a <a href=\"tracing_core/dispatcher/struct.Dispatch.html\" title=\"struct tracing_core::dispatcher::Dispatch\"><code>Dispatch</code></a>. <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.on_register_dispatch\">Read more</a></div></details></div></details>","Subscriber","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CArc%3C%5BT%5D,+A%3E%3E-for-Arc%3C%5BT;+N%5D,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.43.0\">1.43.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3740\">source</a></span><a href=\"#impl-TryFrom%3CArc%3C%5BT%5D,+A%3E%3E-for-Arc%3C%5BT;+N%5D,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>, A&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; N]</a>, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3741\">source</a><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>, A&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3743\">source</a><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    boxed_slice: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>, A&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; N]</a>, A&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; N]</a>, A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>, A&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<Arc<[T], A>>","abscissa_core::config::Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Write-for-Arc%3CFile%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.73.0\">1.73.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/fs.rs.html#1063\">source</a></span><a href=\"#impl-Write-for-Arc%3CFile%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/fs/struct.File.html\" title=\"struct std::fs::File\">File</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/fs.rs.html#1064\">source</a><a href=\"#method.write\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Writes a buffer into this writer, returning how many bytes were written. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#tymethod.write\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/fs.rs.html#1067\">source</a><a href=\"#method.write_vectored\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#method.write_vectored\" class=\"fn\">write_vectored</a>(&amp;mut self, bufs: &amp;[<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/struct.IoSlice.html\" title=\"struct std::io::IoSlice\">IoSlice</a>&lt;'_&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Like <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#tymethod.write\" title=\"method std::io::Write::write\"><code>write</code></a>, except that it writes from a slice of buffers. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#method.write_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_write_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/fs.rs.html#1071\">source</a><a href=\"#method.is_write_vectored\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#method.is_write_vectored\" class=\"fn\">is_write_vectored</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>can_vector</code>)</span></div></span><div class='docblock'>Determines if this <code>Write</code>r has an efficient <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#method.write_vectored\" title=\"method std::io::Write::write_vectored\"><code>write_vectored</code></a>\nimplementation. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#method.is_write_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/fs.rs.html#1075\">source</a><a href=\"#method.flush\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#tymethod.flush\" class=\"fn\">flush</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Flushes this output stream, ensuring that all intermediately buffered\ncontents reach their destination. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#tymethod.flush\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_all\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#1703\">source</a></span><a href=\"#method.write_all\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#method.write_all\" class=\"fn\">write_all</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Attempts to write an entire buffer into this writer. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#method.write_all\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_all_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#1765\">source</a><a href=\"#method.write_all_vectored\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#method.write_all_vectored\" class=\"fn\">write_all_vectored</a>(&amp;mut self, bufs: &amp;mut [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/struct.IoSlice.html\" title=\"struct std::io::IoSlice\">IoSlice</a>&lt;'_&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>write_all_vectored</code>)</span></div></span><div class='docblock'>Attempts to write multiple buffers into this writer. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#method.write_all_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_fmt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#1818\">source</a></span><a href=\"#method.write_fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#method.write_fmt\" class=\"fn\">write_fmt</a>(&amp;mut self, fmt: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Arguments.html\" title=\"struct core::fmt::Arguments\">Arguments</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Writes a formatted string into this writer, returning any error\nencountered. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#method.write_fmt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#1878-1880\">source</a></span><a href=\"#method.by_ref\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; &amp;mut Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates a โby referenceโ adapter for this instance of <code>Write</code>. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#method.by_ref\">Read more</a></div></details></div></details>","Write","abscissa_core::config::Reader"],["<section id=\"impl-CoerceUnsized%3CArc%3CU,+A%3E%3E-for-Arc%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#259\">source</a><a href=\"#impl-CoerceUnsized%3CArc%3CU,+A%3E%3E-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, U, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/unsize/trait.CoerceUnsized.html\" title=\"trait core::ops::unsize::CoerceUnsized\">CoerceUnsized</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U, A&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unsize.html\" title=\"trait core::marker::Unsize\">Unsize</a>&lt;U&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    U: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","CoerceUnsized<Arc<U, A>>","abscissa_core::config::Reader"],["<section id=\"impl-DerefPure-for-Arc%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2190\">source</a><a href=\"#impl-DerefPure-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefPure.html\" title=\"trait core::ops::deref::DerefPure\">DerefPure</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","DerefPure","abscissa_core::config::Reader"],["<section id=\"impl-DispatchFromDyn%3CArc%3CU%3E%3E-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#262\">source</a><a href=\"#impl-DispatchFromDyn%3CArc%3CU%3E%3E-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/unsize/trait.DispatchFromDyn.html\" title=\"trait core::ops::unsize::DispatchFromDyn\">DispatchFromDyn</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unsize.html\" title=\"trait core::marker::Unsize\">Unsize</a>&lt;U&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    U: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","DispatchFromDyn<Arc<U>>","abscissa_core::config::Reader"],["<section id=\"impl-Eq-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3413\">source</a></span><a href=\"#impl-Eq-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section>","Eq","abscissa_core::config::Reader"],["<section id=\"impl-PinCoerceUnsized-for-Arc%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2184\">source</a><a href=\"#impl-PinCoerceUnsized-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/pin/trait.PinCoerceUnsized.html\" title=\"trait core::pin::PinCoerceUnsized\">PinCoerceUnsized</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","PinCoerceUnsized","abscissa_core::config::Reader"],["<section id=\"impl-Send-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#251\">source</a></span><a href=\"#impl-Send-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section>","Send","abscissa_core::config::Reader"],["<section id=\"impl-Sync-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#253\">source</a></span><a href=\"#impl-Sync-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section>","Sync","abscissa_core::config::Reader"],["<section id=\"impl-Unpin-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.33.0\">1.33.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3854\">source</a></span><a href=\"#impl-Unpin-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","Unpin","abscissa_core::config::Reader"],["<section id=\"impl-UnwindSafe-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.9.0\">1.9.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#256\">source</a></span><a href=\"#impl-UnwindSafe-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a>,</div></h3></section>","UnwindSafe","abscissa_core::config::Reader"]]],["ibc_relayer",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AnyProvider-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_provider/any.rs.html#374\">source</a><a href=\"#impl-AnyProvider-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"icu_provider/any/trait.AnyProvider.html\" title=\"trait icu_provider::any::AnyProvider\">AnyProvider</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"icu_provider/any/trait.AnyProvider.html\" title=\"trait icu_provider::any::AnyProvider\">AnyProvider</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.load_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/icu_provider/any.rs.html#376\">source</a><a href=\"#method.load_any\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"icu_provider/any/trait.AnyProvider.html#tymethod.load_any\" class=\"fn\">load_any</a>(\n    &amp;self,\n    key: <a class=\"struct\" href=\"icu_provider/key/struct.DataKey.html\" title=\"struct icu_provider::key::DataKey\">DataKey</a>,\n    req: <a class=\"struct\" href=\"icu_provider/request/struct.DataRequest.html\" title=\"struct icu_provider::request::DataRequest\">DataRequest</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"icu_provider/any/struct.AnyResponse.html\" title=\"struct icu_provider::any::AnyResponse\">AnyResponse</a>, <a class=\"struct\" href=\"icu_provider/error/struct.DataError.html\" title=\"struct icu_provider::error::DataError\">DataError</a>&gt;</h4></section></summary><div class='docblock'>Loads an <a href=\"icu_provider/any/struct.AnyPayload.html\" title=\"struct icu_provider::any::AnyPayload\"><code>AnyPayload</code></a> according to the key and request.</div></details></div></details>","AnyProvider","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1361\">source</a><a href=\"#impl-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.17.0\">1.17.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1423\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.from_raw\" class=\"fn\">from_raw</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs an <code>Arc&lt;T&gt;</code> from a raw pointer.</p>\n<p>The raw pointer must have been previously returned by a call to\n<a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.into_raw\" title=\"associated function alloc::sync::Arc::into_raw\"><code>Arc&lt;U&gt;::into_raw</code></a> with the following requirements:</p>\n<ul>\n<li>If <code>U</code> is sized, it must have the same size and alignment as <code>T</code>. This\nis trivially true if <code>U</code> is <code>T</code>.</li>\n<li>If <code>U</code> is unsized, its data pointer must have the same size and\nalignment as <code>T</code>. This is trivially true if <code>Arc&lt;U&gt;</code> was constructed\nthrough <code>Arc&lt;T&gt;</code> and then converted to <code>Arc&lt;U&gt;</code> through an <a href=\"https://doc.rust-lang.org/reference/type-coercions.html#unsized-coercions\">unsized\ncoercion</a>.</li>\n</ul>\n<p>Note that if <code>U</code> or <code>U</code>โs data pointer is not <code>T</code> but has the same size\nand alignment, this is basically like transmuting references of\ndifferent types. See <a href=\"https://doc.rust-lang.org/nightly/core/intrinsics/fn.transmute.html\" title=\"fn core::intrinsics::transmute\"><code>mem::transmute</code></a> for more information\non what restrictions apply in this case.</p>\n<p>The user of <code>from_raw</code> has to make sure a specific value of <code>T</code> is only\ndropped once.</p>\n<p>This function is unsafe because improper use may lead to memory unsafety,\neven if the returned <code>Arc&lt;T&gt;</code> is never accessed.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x = Arc::new(<span class=\"string\">\"hello\"</span>.to_owned());\n<span class=\"kw\">let </span>x_ptr = Arc::into_raw(x);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// Convert back to an `Arc` to prevent leak.\n    </span><span class=\"kw\">let </span>x = Arc::from_raw(x_ptr);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;*</span>x, <span class=\"string\">\"hello\"</span>);\n\n    <span class=\"comment\">// Further calls to `Arc::from_raw(x_ptr)` would be memory-unsafe.\n</span>}\n\n<span class=\"comment\">// The memory was freed when `x` went out of scope above, so `x_ptr` is now dangling!</span></code></pre></div>\n<p>Convert a slice back into its original array:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x: Arc&lt;[u32]&gt; = Arc::new([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);\n<span class=\"kw\">let </span>x_ptr: <span class=\"kw-2\">*const </span>[u32] = Arc::into_raw(x);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>x: Arc&lt;[u32; <span class=\"number\">3</span>]&gt; = Arc::from_raw(x_ptr.cast::&lt;[u32; <span class=\"number\">3</span>]&gt;());\n    <span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;*</span>x, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.increment_strong_count\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1457\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.increment_strong_count\" class=\"fn\">increment_strong_count</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a>)</h4></section></summary><div class=\"docblock\"><p>Increments the strong reference count on the <code>Arc&lt;T&gt;</code> associated with the\nprovided pointer by one.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">ยง</a>Safety</h5>\n<p>The pointer must have been obtained through <code>Arc::into_raw</code>, and the\nassociated <code>Arc</code> instance must be valid (i.e. the strong count must be at\nleast 1) for the duration of this method.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>ptr = Arc::into_raw(five);\n    Arc::increment_strong_count(ptr);\n\n    <span class=\"comment\">// This assertion is deterministic because we haven't shared\n    // the `Arc` between threads.\n    </span><span class=\"kw\">let </span>five = Arc::from_raw(ptr);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"number\">2</span>, Arc::strong_count(<span class=\"kw-2\">&amp;</span>five));\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decrement_strong_count\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1493\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.decrement_strong_count\" class=\"fn\">decrement_strong_count</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a>)</h4></section></summary><div class=\"docblock\"><p>Decrements the strong reference count on the <code>Arc&lt;T&gt;</code> associated with the\nprovided pointer by one.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">ยง</a>Safety</h5>\n<p>The pointer must have been obtained through <code>Arc::into_raw</code>, and the\nassociated <code>Arc</code> instance must be valid (i.e. the strong count must be at\nleast 1) when invoking this method. This method can be used to release the final\n<code>Arc</code> and backing storage, but <strong>should not</strong> be called after the final <code>Arc</code> has been\nreleased.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>ptr = Arc::into_raw(five);\n    Arc::increment_strong_count(ptr);\n\n    <span class=\"comment\">// Those assertions are deterministic because we haven't shared\n    // the `Arc` between threads.\n    </span><span class=\"kw\">let </span>five = Arc::from_raw(ptr);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"number\">2</span>, Arc::strong_count(<span class=\"kw-2\">&amp;</span>five));\n    Arc::decrement_strong_count(ptr);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"number\">1</span>, Arc::strong_count(<span class=\"kw-2\">&amp;</span>five));\n}</code></pre></div>\n</div></details></div></details>",0,"ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#372\">source</a><a href=\"#impl-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#385\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new\" class=\"fn\">new</a>(data: T) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new <code>Arc&lt;T&gt;</code>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_cyclic\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.60.0\">1.60.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#450-452\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new_cyclic\" class=\"fn\">new_cyclic</a>&lt;F&gt;(data_fn: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\">Weak</a>&lt;T&gt;) -&gt; T,</div></h4></section></summary><div class=\"docblock\"><p>Constructs a new <code>Arc&lt;T&gt;</code> while giving you a <code>Weak&lt;T&gt;</code> to the allocation,\nto allow you to construct a <code>T</code> which holds a weak pointer to itself.</p>\n<p>Generally, a structure circularly referencing itself, either directly or\nindirectly, should not hold a strong reference to itself to prevent a memory leak.\nUsing this function, you get access to the weak pointer during the\ninitialization of <code>T</code>, before the <code>Arc&lt;T&gt;</code> is created, such that you can\nclone and store it inside the <code>T</code>.</p>\n<p><code>new_cyclic</code> first allocates the managed allocation for the <code>Arc&lt;T&gt;</code>,\nthen calls your closure, giving it a <code>Weak&lt;T&gt;</code> to this allocation,\nand only afterwards completes the construction of the <code>Arc&lt;T&gt;</code> by placing\nthe <code>T</code> returned from your closure into the allocation.</p>\n<p>Since the new <code>Arc&lt;T&gt;</code> is not fully-constructed until <code>Arc&lt;T&gt;::new_cyclic</code>\nreturns, calling <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html#method.upgrade\" title=\"method alloc::sync::Weak::upgrade\"><code>upgrade</code></a> on the weak reference inside your closure will\nfail and result in a <code>None</code> value.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">ยง</a>Panics</h5>\n<p>If <code>data_fn</code> panics, the panic is propagated to the caller, and the\ntemporary <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak&lt;T&gt;</code></a> is dropped normally.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">ยง</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::{Arc, Weak};\n\n<span class=\"kw\">struct </span>Gadget {\n    me: Weak&lt;Gadget&gt;,\n}\n\n<span class=\"kw\">impl </span>Gadget {\n    <span class=\"doccomment\">/// Constructs a reference counted Gadget.\n    </span><span class=\"kw\">fn </span>new() -&gt; Arc&lt;<span class=\"self\">Self</span>&gt; {\n        <span class=\"comment\">// `me` is a `Weak&lt;Gadget&gt;` pointing at the new allocation of the\n        // `Arc` we're constructing.\n        </span>Arc::new_cyclic(|me| {\n            <span class=\"comment\">// Create the actual struct here.\n            </span>Gadget { me: me.clone() }\n        })\n    }\n\n    <span class=\"doccomment\">/// Returns a reference counted pointer to Self.\n    </span><span class=\"kw\">fn </span>me(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>) -&gt; Arc&lt;<span class=\"self\">Self</span>&gt; {\n        <span class=\"self\">self</span>.me.upgrade().unwrap()\n    }\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_uninit\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.82.0\">1.82.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#479\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new_uninit\" class=\"fn\">new_uninit</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new <code>Arc</code> with uninitialized contents.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(get_mut_unchecked)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>five = Arc::&lt;u32&gt;::new_uninit();\n\n<span class=\"comment\">// Deferred initialization:\n</span>Arc::get_mut(<span class=\"kw-2\">&amp;mut </span>five).unwrap().write(<span class=\"number\">5</span>);\n\n<span class=\"kw\">let </span>five = <span class=\"kw\">unsafe </span>{ five.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>five, <span class=\"number\">5</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#513\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>new_zeroed_alloc</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc</code> with uninitialized contents, with the memory\nbeing filled with <code>0</code> bytes.</p>\n<p>See <a href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html#method.zeroed\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::zeroed\"><code>MaybeUninit::zeroed</code></a> for examples of correct and incorrect usage\nof this method.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(new_zeroed_alloc)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>zero = Arc::&lt;u32&gt;::new_zeroed();\n<span class=\"kw\">let </span>zero = <span class=\"kw\">unsafe </span>{ zero.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>zero, <span class=\"number\">0</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pin\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.33.0\">1.33.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#528\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.pin\" class=\"fn\">pin</a>(data: T) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>, then\n<code>data</code> will be pinned in memory and unable to be moved.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_pin\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#535\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_pin\" class=\"fn\">try_pin</a>(data: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>, return an error if allocation fails.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#552\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_new\" class=\"fn\">try_new</a>(data: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc&lt;T&gt;</code>, returning an error if allocation fails.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::try_new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_uninit\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#586\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_new_uninit\" class=\"fn\">try_new_uninit</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc</code> with uninitialized contents, returning an error\nif allocation fails.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n#![feature(get_mut_unchecked)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>five = Arc::&lt;u32&gt;::try_new_uninit()<span class=\"question-mark\">?</span>;\n\n<span class=\"comment\">// Deferred initialization:\n</span>Arc::get_mut(<span class=\"kw-2\">&amp;mut </span>five).unwrap().write(<span class=\"number\">5</span>);\n\n<span class=\"kw\">let </span>five = <span class=\"kw\">unsafe </span>{ five.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>five, <span class=\"number\">5</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_zeroed\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#619\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_new_zeroed\" class=\"fn\">try_new_zeroed</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc</code> with uninitialized contents, with the memory\nbeing filled with <code>0</code> bytes, returning an error if allocation fails.</p>\n<p>See <a href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html#method.zeroed\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::zeroed\"><code>MaybeUninit::zeroed</code></a> for examples of correct and incorrect usage\nof this method.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature( allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>zero = Arc::&lt;u32&gt;::try_new_zeroed()<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>zero = <span class=\"kw\">unsafe </span>{ zero.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>zero, <span class=\"number\">0</span>);</code></pre></div>\n</div></details></div></details>",0,"ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arc%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1498\">source</a><a href=\"#impl-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.allocator\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1506\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.allocator\" class=\"fn\">allocator</a>(this: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;A</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns a reference to the underlying allocator.</p>\n<p>Note: this is an associated function, which means that you have\nto call it as <code>Arc::allocator(&amp;a)</code> instead of <code>a.allocator()</code>. This\nis so that there is no conflict with a method on the inner type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_raw\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.17.0\">1.17.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1529\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.into_raw\" class=\"fn\">into_raw</a>(this: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a></h4></section></summary><div class=\"docblock\"><p>Consumes the <code>Arc</code>, returning the wrapped pointer.</p>\n<p>To avoid a memory leak the pointer must be converted back to an <code>Arc</code> using\n<a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.from_raw\" title=\"associated function alloc::sync::Arc::from_raw\"><code>Arc::from_raw</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x = Arc::new(<span class=\"string\">\"hello\"</span>.to_owned());\n<span class=\"kw\">let </span>x_ptr = Arc::into_raw(x);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw\">unsafe </span>{ <span class=\"kw-2\">&amp;*</span>x_ptr }, <span class=\"string\">\"hello\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_raw_with_allocator\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1554\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.into_raw_with_allocator\" class=\"fn\">into_raw_with_allocator</a>(this: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a>, A)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Consumes the <code>Arc</code>, returning the wrapped pointer and allocator.</p>\n<p>To avoid a memory leak the pointer must be converted back to an <code>Arc</code> using\n<a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.from_raw_in\" title=\"associated function alloc::sync::Arc::from_raw_in\"><code>Arc::from_raw_in</code></a>.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>x = Arc::new_in(<span class=\"string\">\"hello\"</span>.to_owned(), System);\n<span class=\"kw\">let </span>(ptr, alloc) = Arc::into_raw_with_allocator(x);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw\">unsafe </span>{ <span class=\"kw-2\">&amp;*</span>ptr }, <span class=\"string\">\"hello\"</span>);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Arc::from_raw_in(ptr, alloc) };\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;*</span>x, <span class=\"string\">\"hello\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1581\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.as_ptr\" class=\"fn\">as_ptr</a>(this: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a></h4></section></summary><div class=\"docblock\"><p>Provides a raw pointer to the data.</p>\n<p>The counts are not affected in any way and the <code>Arc</code> is not consumed. The pointer is valid for\nas long as there are strong counts in the <code>Arc</code>.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x = Arc::new(<span class=\"string\">\"hello\"</span>.to_owned());\n<span class=\"kw\">let </span>y = Arc::clone(<span class=\"kw-2\">&amp;</span>x);\n<span class=\"kw\">let </span>x_ptr = Arc::as_ptr(<span class=\"kw-2\">&amp;</span>x);\n<span class=\"macro\">assert_eq!</span>(x_ptr, Arc::as_ptr(<span class=\"kw-2\">&amp;</span>y));\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw\">unsafe </span>{ <span class=\"kw-2\">&amp;*</span>x_ptr }, <span class=\"string\">\"hello\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1659\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.from_raw_in\" class=\"fn\">from_raw_in</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a>, alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs an <code>Arc&lt;T, A&gt;</code> from a raw pointer.</p>\n<p>The raw pointer must have been previously returned by a call to <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.into_raw\" title=\"associated function alloc::sync::Arc::into_raw\"><code>Arc&lt;U, A&gt;::into_raw</code></a> with the following requirements:</p>\n<ul>\n<li>If <code>U</code> is sized, it must have the same size and alignment as <code>T</code>. This\nis trivially true if <code>U</code> is <code>T</code>.</li>\n<li>If <code>U</code> is unsized, its data pointer must have the same size and\nalignment as <code>T</code>. This is trivially true if <code>Arc&lt;U&gt;</code> was constructed\nthrough <code>Arc&lt;T&gt;</code> and then converted to <code>Arc&lt;U&gt;</code> through an <a href=\"https://doc.rust-lang.org/reference/type-coercions.html#unsized-coercions\">unsized\ncoercion</a>.</li>\n</ul>\n<p>Note that if <code>U</code> or <code>U</code>โs data pointer is not <code>T</code> but has the same size\nand alignment, this is basically like transmuting references of\ndifferent types. See <a href=\"https://doc.rust-lang.org/nightly/core/intrinsics/fn.transmute.html\" title=\"fn core::intrinsics::transmute\"><code>mem::transmute</code></a> for more information\non what restrictions apply in this case.</p>\n<p>The raw pointer must point to a block of memory allocated by <code>alloc</code></p>\n<p>The user of <code>from_raw</code> has to make sure a specific value of <code>T</code> is only\ndropped once.</p>\n<p>This function is unsafe because improper use may lead to memory unsafety,\neven if the returned <code>Arc&lt;T&gt;</code> is never accessed.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>x = Arc::new_in(<span class=\"string\">\"hello\"</span>.to_owned(), System);\n<span class=\"kw\">let </span>x_ptr = Arc::into_raw(x);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// Convert back to an `Arc` to prevent leak.\n    </span><span class=\"kw\">let </span>x = Arc::from_raw_in(x_ptr, System);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;*</span>x, <span class=\"string\">\"hello\"</span>);\n\n    <span class=\"comment\">// Further calls to `Arc::from_raw(x_ptr)` would be memory-unsafe.\n</span>}\n\n<span class=\"comment\">// The memory was freed when `x` went out of scope above, so `x_ptr` is now dangling!</span></code></pre></div>\n<p>Convert a slice back into its original array:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>x: Arc&lt;[u32], <span class=\"kw\">_</span>&gt; = Arc::new_in([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], System);\n<span class=\"kw\">let </span>x_ptr: <span class=\"kw-2\">*const </span>[u32] = Arc::into_raw(x);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>x: Arc&lt;[u32; <span class=\"number\">3</span>], <span class=\"kw\">_</span>&gt; = Arc::from_raw_in(x_ptr.cast::&lt;[u32; <span class=\"number\">3</span>]&gt;(), System);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;*</span>x, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.downgrade\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1684-1686\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.downgrade\" class=\"fn\">downgrade</a>(this: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\">Weak</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a> pointer to this allocation.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"kw\">let </span>weak_five = Arc::downgrade(<span class=\"kw-2\">&amp;</span>five);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.weak_count\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.15.0\">1.15.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1744\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.weak_count\" class=\"fn\">weak_count</a>(this: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Gets the number of <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a> pointers to this allocation.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">ยง</a>Safety</h5>\n<p>This method by itself is safe, but using it correctly requires extra care.\nAnother thread can change the weak count at any time,\nincluding potentially between calling this method and acting on the result.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n<span class=\"kw\">let </span>_weak_five = Arc::downgrade(<span class=\"kw-2\">&amp;</span>five);\n\n<span class=\"comment\">// This assertion is deterministic because we haven't shared\n// the `Arc` or `Weak` between threads.\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1</span>, Arc::weak_count(<span class=\"kw-2\">&amp;</span>five));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strong_count\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.15.0\">1.15.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1774\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.strong_count\" class=\"fn\">strong_count</a>(this: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Gets the number of strong (<code>Arc</code>) pointers to this allocation.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">ยง</a>Safety</h5>\n<p>This method by itself is safe, but using it correctly requires extra care.\nAnother thread can change the strong count at any time,\nincluding potentially between calling this method and acting on the result.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n<span class=\"kw\">let </span>_also_five = Arc::clone(<span class=\"kw-2\">&amp;</span>five);\n\n<span class=\"comment\">// This assertion is deterministic because we haven't shared\n// the `Arc` between threads.\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2</span>, Arc::strong_count(<span class=\"kw-2\">&amp;</span>five));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.increment_strong_count_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1812-1814\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.increment_strong_count_in\" class=\"fn\">increment_strong_count_in</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a>, alloc: A)<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Increments the strong reference count on the <code>Arc&lt;T&gt;</code> associated with the\nprovided pointer by one.</p>\n<h5 id=\"safety-2\"><a class=\"doc-anchor\" href=\"#safety-2\">ยง</a>Safety</h5>\n<p>The pointer must have been obtained through <code>Arc::into_raw</code>, and the\nassociated <code>Arc</code> instance must be valid (i.e. the strong count must be at\nleast 1) for the duration of this method,, and <code>ptr</code> must point to a block of memory\nallocated by <code>alloc</code>.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>five = Arc::new_in(<span class=\"number\">5</span>, System);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>ptr = Arc::into_raw(five);\n    Arc::increment_strong_count_in(ptr, System);\n\n    <span class=\"comment\">// This assertion is deterministic because we haven't shared\n    // the `Arc` between threads.\n    </span><span class=\"kw\">let </span>five = Arc::from_raw_in(ptr, System);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"number\">2</span>, Arc::strong_count(<span class=\"kw-2\">&amp;</span>five));\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decrement_strong_count_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1858\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.decrement_strong_count_in\" class=\"fn\">decrement_strong_count_in</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a>, alloc: A)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Decrements the strong reference count on the <code>Arc&lt;T&gt;</code> associated with the\nprovided pointer by one.</p>\n<h5 id=\"safety-3\"><a class=\"doc-anchor\" href=\"#safety-3\">ยง</a>Safety</h5>\n<p>The pointer must have been obtained through <code>Arc::into_raw</code>,  the\nassociated <code>Arc</code> instance must be valid (i.e. the strong count must be at\nleast 1) when invoking this method, and <code>ptr</code> must point to a block of memory\nallocated by <code>alloc</code>. This method can be used to release the final\n<code>Arc</code> and backing storage, but <strong>should not</strong> be called after the final <code>Arc</code> has been\nreleased.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>five = Arc::new_in(<span class=\"number\">5</span>, System);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>ptr = Arc::into_raw(five);\n    Arc::increment_strong_count_in(ptr, System);\n\n    <span class=\"comment\">// Those assertions are deterministic because we haven't shared\n    // the `Arc` between threads.\n    </span><span class=\"kw\">let </span>five = Arc::from_raw_in(ptr, System);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"number\">2</span>, Arc::strong_count(<span class=\"kw-2\">&amp;</span>five));\n    Arc::decrement_strong_count_in(ptr, System);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"number\">1</span>, Arc::strong_count(<span class=\"kw-2\">&amp;</span>five));\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ptr_eq\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.17.0\">1.17.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1906\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.ptr_eq\" class=\"fn\">ptr_eq</a>(this: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the two <code>Arc</code>s point to the same allocation in a vein similar to\n<a href=\"https://doc.rust-lang.org/nightly/core/ptr/fn.eq.html\" title=\"ptr::eq\"><code>ptr::eq</code></a>. This function ignores the metadata of  <code>dyn Trait</code> pointers.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n<span class=\"kw\">let </span>same_five = Arc::clone(<span class=\"kw-2\">&amp;</span>five);\n<span class=\"kw\">let </span>other_five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert!</span>(Arc::ptr_eq(<span class=\"kw-2\">&amp;</span>five, <span class=\"kw-2\">&amp;</span>same_five));\n<span class=\"macro\">assert!</span>(!Arc::ptr_eq(<span class=\"kw-2\">&amp;</span>five, <span class=\"kw-2\">&amp;</span>other_five));</code></pre></div>\n</div></details></div></details>",0,"ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arc%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2196\">source</a><a href=\"#impl-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.CloneToUninit.html\" title=\"trait core::clone::CloneToUninit\">CloneToUninit</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.make_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2249\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.make_mut\" class=\"fn\">make_mut</a>(this: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\"><p>Makes a mutable reference into the given <code>Arc</code>.</p>\n<p>If there are other <code>Arc</code> pointers to the same allocation, then <code>make_mut</code> will\n<a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" title=\"method core::clone::Clone::clone\"><code>clone</code></a> the inner value to a new allocation to ensure unique ownership.  This is also\nreferred to as clone-on-write.</p>\n<p>However, if there are no other <code>Arc</code> pointers to this allocation, but some <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a>\npointers, then the <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a> pointers will be dissociated and the inner value will not\nbe cloned.</p>\n<p>See also <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.get_mut\" title=\"associated function alloc::sync::Arc::get_mut\"><code>get_mut</code></a>, which will fail rather than cloning the inner value\nor dissociating <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a> pointers.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>data = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"kw-2\">*</span>Arc::make_mut(<span class=\"kw-2\">&amp;mut </span>data) += <span class=\"number\">1</span>;         <span class=\"comment\">// Won't clone anything\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>other_data = Arc::clone(<span class=\"kw-2\">&amp;</span>data); <span class=\"comment\">// Won't clone inner data\n</span><span class=\"kw-2\">*</span>Arc::make_mut(<span class=\"kw-2\">&amp;mut </span>data) += <span class=\"number\">1</span>;         <span class=\"comment\">// Clones inner data\n</span><span class=\"kw-2\">*</span>Arc::make_mut(<span class=\"kw-2\">&amp;mut </span>data) += <span class=\"number\">1</span>;         <span class=\"comment\">// Won't clone anything\n</span><span class=\"kw-2\">*</span>Arc::make_mut(<span class=\"kw-2\">&amp;mut </span>other_data) <span class=\"kw-2\">*</span>= <span class=\"number\">2</span>;   <span class=\"comment\">// Won't clone anything\n\n// Now `data` and `other_data` point to different allocations.\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>data, <span class=\"number\">8</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>other_data, <span class=\"number\">12</span>);</code></pre></div>\n<p><a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a> pointers will be dissociated:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>data = Arc::new(<span class=\"number\">75</span>);\n<span class=\"kw\">let </span>weak = Arc::downgrade(<span class=\"kw-2\">&amp;</span>data);\n\n<span class=\"macro\">assert!</span>(<span class=\"number\">75 </span>== <span class=\"kw-2\">*</span>data);\n<span class=\"macro\">assert!</span>(<span class=\"number\">75 </span>== <span class=\"kw-2\">*</span>weak.upgrade().unwrap());\n\n<span class=\"kw-2\">*</span>Arc::make_mut(<span class=\"kw-2\">&amp;mut </span>data) += <span class=\"number\">1</span>;\n\n<span class=\"macro\">assert!</span>(<span class=\"number\">76 </span>== <span class=\"kw-2\">*</span>data);\n<span class=\"macro\">assert!</span>(weak.upgrade().is_none());</code></pre></div>\n</div></details></div></details>",0,"ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arc%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2322\">source</a><a href=\"#impl-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap_or_clone\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.76.0\">1.76.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2353\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.unwrap_or_clone\" class=\"fn\">unwrap_or_clone</a>(this: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; T</h4></section></summary><div class=\"docblock\"><p>If we have the only reference to <code>T</code> then unwrap it. Otherwise, clone <code>T</code> and return the\nclone.</p>\n<p>Assuming <code>arc_t</code> is of type <code>Arc&lt;T&gt;</code>, this function is functionally equivalent to\n<code>(*arc_t).clone()</code>, but will avoid cloning the inner value where possible.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>inner = String::from(<span class=\"string\">\"test\"</span>);\n<span class=\"kw\">let </span>ptr = inner.as_ptr();\n\n<span class=\"kw\">let </span>arc = Arc::new(inner);\n<span class=\"kw\">let </span>inner = Arc::unwrap_or_clone(arc);\n<span class=\"comment\">// The inner value was not cloned\n</span><span class=\"macro\">assert!</span>(ptr::eq(ptr, inner.as_ptr()));\n\n<span class=\"kw\">let </span>arc = Arc::new(inner);\n<span class=\"kw\">let </span>arc2 = arc.clone();\n<span class=\"kw\">let </span>inner = Arc::unwrap_or_clone(arc);\n<span class=\"comment\">// Because there were 2 references, we had to clone the inner value.\n</span><span class=\"macro\">assert!</span>(!ptr::eq(ptr, inner.as_ptr()));\n<span class=\"comment\">// `arc2` is the last reference, so when we unwrap it we get back\n// the original `String`.\n</span><span class=\"kw\">let </span>inner = Arc::unwrap_or_clone(arc2);\n<span class=\"macro\">assert!</span>(ptr::eq(ptr, inner.as_ptr()));</code></pre></div>\n</div></details></div></details>",0,"ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arc%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2358\">source</a><a href=\"#impl-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2385\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.get_mut\" class=\"fn\">get_mut</a>(this: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference into the given <code>Arc</code>, if there are\nno other <code>Arc</code> or <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a> pointers to the same allocation.</p>\n<p>Returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> otherwise, because it is not safe to\nmutate a shared value.</p>\n<p>See also <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.make_mut\" title=\"associated function alloc::sync::Arc::make_mut\"><code>make_mut</code></a>, which will <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" title=\"method core::clone::Clone::clone\"><code>clone</code></a>\nthe inner value when there are other <code>Arc</code> pointers.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = Arc::new(<span class=\"number\">3</span>);\n<span class=\"kw-2\">*</span>Arc::get_mut(<span class=\"kw-2\">&amp;mut </span>x).unwrap() = <span class=\"number\">4</span>;\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>x, <span class=\"number\">4</span>);\n\n<span class=\"kw\">let </span>_y = Arc::clone(<span class=\"kw-2\">&amp;</span>x);\n<span class=\"macro\">assert!</span>(Arc::get_mut(<span class=\"kw-2\">&amp;mut </span>x).is_none());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2460\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.get_mut_unchecked\" class=\"fn\">get_mut_unchecked</a>(this: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>get_mut_unchecked</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns a mutable reference into the given <code>Arc</code>,\nwithout any check.</p>\n<p>See also <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.get_mut\" title=\"associated function alloc::sync::Arc::get_mut\"><code>get_mut</code></a>, which is safe and does appropriate checks.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">ยง</a>Safety</h5>\n<p>If any other <code>Arc</code> or <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a> pointers to the same allocation exist, then\nthey must not be dereferenced or have active borrows for the duration\nof the returned borrow, and their inner type must be exactly the same as the\ninner type of this Rc (including lifetimes). This is trivially the case if no\nsuch pointers exist, for example immediately after <code>Arc::new</code>.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(get_mut_unchecked)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = Arc::new(String::new());\n<span class=\"kw\">unsafe </span>{\n    Arc::get_mut_unchecked(<span class=\"kw-2\">&amp;mut </span>x).push_str(<span class=\"string\">\"foo\"</span>)\n}\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>x, <span class=\"string\">\"foo\"</span>);</code></pre></div>\n<p>Other <code>Arc</code> pointers to the same allocation must be to the same type.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(get_mut_unchecked)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x: Arc&lt;str&gt; = Arc::from(<span class=\"string\">\"Hello, world!\"</span>);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>y: Arc&lt;[u8]&gt; = x.clone().into();\n<span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// this is Undefined Behavior, because x's inner type is str, not [u8]\n    </span>Arc::get_mut_unchecked(<span class=\"kw-2\">&amp;mut </span>y).fill(<span class=\"number\">0xff</span>); <span class=\"comment\">// 0xff is invalid in UTF-8\n</span>}\n<span class=\"macro\">println!</span>(<span class=\"string\">\"{}\"</span>, <span class=\"kw-2\">&amp;*</span>x); <span class=\"comment\">// Invalid UTF-8 in a str</span></code></pre></div>\n<p>Other <code>Arc</code> pointers to the same allocation must be to the exact same type, including lifetimes.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(get_mut_unchecked)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x: Arc&lt;<span class=\"kw-2\">&amp;</span>str&gt; = Arc::new(<span class=\"string\">\"Hello, world!\"</span>);\n{\n    <span class=\"kw\">let </span>s = String::from(<span class=\"string\">\"Oh, no!\"</span>);\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>y: Arc&lt;<span class=\"kw-2\">&amp;</span>str&gt; = x.clone().into();\n    <span class=\"kw\">unsafe </span>{\n        <span class=\"comment\">// this is Undefined Behavior, because x's inner type\n        // is &amp;'long str, not &amp;'short str\n        </span><span class=\"kw-2\">*</span>Arc::get_mut_unchecked(<span class=\"kw-2\">&amp;mut </span>y) = <span class=\"kw-2\">&amp;</span>s;\n    }\n}\n<span class=\"macro\">println!</span>(<span class=\"string\">\"{}\"</span>, <span class=\"kw-2\">&amp;*</span>x); <span class=\"comment\">// Use-after-free</span></code></pre></div>\n</div></details></div></details>",0,"ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arc%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#630\">source</a><a href=\"#impl-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#646\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new_in\" class=\"fn\">new_in</a>(data: T, alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc&lt;T&gt;</code> in the provided allocator.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>five = Arc::new_in(<span class=\"number\">5</span>, System);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_uninit_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#687\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new_uninit_in\" class=\"fn\">new_uninit_in</a>(alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, A&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc</code> with uninitialized contents in the provided allocator.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(get_mut_unchecked)]\n#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>five = Arc::&lt;u32, <span class=\"kw\">_</span>&gt;::new_uninit_in(System);\n\n<span class=\"kw\">let </span>five = <span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// Deferred initialization:\n    </span>Arc::get_mut_unchecked(<span class=\"kw-2\">&amp;mut </span>five).as_mut_ptr().write(<span class=\"number\">5</span>);\n\n    five.assume_init()\n};\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>five, <span class=\"number\">5</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#725\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new_zeroed_in\" class=\"fn\">new_zeroed_in</a>(alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, A&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc</code> with uninitialized contents, with the memory\nbeing filled with <code>0</code> bytes, in the provided allocator.</p>\n<p>See <a href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html#method.zeroed\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::zeroed\"><code>MaybeUninit::zeroed</code></a> for examples of correct and incorrect usage\nof this method.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>zero = Arc::&lt;u32, <span class=\"kw\">_</span>&gt;::new_zeroed_in(System);\n<span class=\"kw\">let </span>zero = <span class=\"kw\">unsafe </span>{ zero.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>zero, <span class=\"number\">0</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_cyclic_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#770-772\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new_cyclic_in\" class=\"fn\">new_cyclic_in</a>&lt;F&gt;(data_fn: F, alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\">Weak</a>&lt;T, A&gt;) -&gt; T,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc&lt;T, A&gt;</code> in the given allocator while giving you a <code>Weak&lt;T, A&gt;</code> to the allocation,\nto allow you to construct a <code>T</code> which holds a weak pointer to itself.</p>\n<p>Generally, a structure circularly referencing itself, either directly or\nindirectly, should not hold a strong reference to itself to prevent a memory leak.\nUsing this function, you get access to the weak pointer during the\ninitialization of <code>T</code>, before the <code>Arc&lt;T, A&gt;</code> is created, such that you can\nclone and store it inside the <code>T</code>.</p>\n<p><code>new_cyclic_in</code> first allocates the managed allocation for the <code>Arc&lt;T, A&gt;</code>,\nthen calls your closure, giving it a <code>Weak&lt;T, A&gt;</code> to this allocation,\nand only afterwards completes the construction of the <code>Arc&lt;T, A&gt;</code> by placing\nthe <code>T</code> returned from your closure into the allocation.</p>\n<p>Since the new <code>Arc&lt;T, A&gt;</code> is not fully-constructed until <code>Arc&lt;T, A&gt;::new_cyclic_in</code>\nreturns, calling <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html#method.upgrade\" title=\"method alloc::sync::Weak::upgrade\"><code>upgrade</code></a> on the weak reference inside your closure will\nfail and result in a <code>None</code> value.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">ยง</a>Panics</h5>\n<p>If <code>data_fn</code> panics, the panic is propagated to the caller, and the\ntemporary <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak&lt;T&gt;</code></a> is dropped normally.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">ยง</a>Example</h5>\n<p>See <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.new_cyclic\" title=\"associated function alloc::sync::Arc::new_cyclic\"><code>new_cyclic</code></a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pin_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#835-837\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.pin_in\" class=\"fn\">pin_in</a>(data: T, alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;&gt;<div class=\"where\">where\n    A: 'static,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Pin&lt;Arc&lt;T, A&gt;&gt;</code> in the provided allocator. If <code>T</code> does not implement <code>Unpin</code>,\nthen <code>data</code> will be pinned in memory and unable to be moved.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_pin_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#846-848\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_pin_in\" class=\"fn\">try_pin_in</a>(data: T, alloc: A) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;<div class=\"where\">where\n    A: 'static,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Pin&lt;Arc&lt;T, A&gt;&gt;</code> in the provided allocator, return an error if allocation\nfails.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#869\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_new_in\" class=\"fn\">try_new_in</a>(data: T, alloc: A) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc&lt;T, A&gt;</code> in the provided allocator, returning an error if allocation fails.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>five = Arc::try_new_in(<span class=\"number\">5</span>, System)<span class=\"question-mark\">?</span>;</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_uninit_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#911\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_new_uninit_in\" class=\"fn\">try_new_uninit_in</a>(alloc: A) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, A&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc</code> with uninitialized contents, in the provided allocator, returning an\nerror if allocation fails.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n#![feature(get_mut_unchecked)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>five = Arc::&lt;u32, <span class=\"kw\">_</span>&gt;::try_new_uninit_in(System)<span class=\"question-mark\">?</span>;\n\n<span class=\"kw\">let </span>five = <span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// Deferred initialization:\n    </span>Arc::get_mut_unchecked(<span class=\"kw-2\">&amp;mut </span>five).as_mut_ptr().write(<span class=\"number\">5</span>);\n\n    five.assume_init()\n};\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>five, <span class=\"number\">5</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_zeroed_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#950\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_new_zeroed_in\" class=\"fn\">try_new_zeroed_in</a>(alloc: A) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, A&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc</code> with uninitialized contents, with the memory\nbeing filled with <code>0</code> bytes, in the provided allocator, returning an error if allocation\nfails.</p>\n<p>See <a href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html#method.zeroed\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::zeroed\"><code>MaybeUninit::zeroed</code></a> for examples of correct and incorrect usage\nof this method.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>zero = Arc::&lt;u32, <span class=\"kw\">_</span>&gt;::try_new_zeroed_in(System)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>zero = <span class=\"kw\">unsafe </span>{ zero.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>zero, <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_unwrap\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#997\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_unwrap\" class=\"fn\">try_unwrap</a>(this: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the inner value, if the <code>Arc</code> has exactly one strong reference.</p>\n<p>Otherwise, an <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Err\" title=\"variant core::result::Result::Err\"><code>Err</code></a> is returned with the same <code>Arc</code> that was\npassed in.</p>\n<p>This will succeed even if there are outstanding weak references.</p>\n<p>It is strongly recommended to use <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.into_inner\" title=\"associated function alloc::sync::Arc::into_inner\"><code>Arc::into_inner</code></a> instead if you donโt\nkeep the <code>Arc</code> in the <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Err\" title=\"variant core::result::Result::Err\"><code>Err</code></a> case.\nImmediately dropping the <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Err\" title=\"variant core::result::Result::Err\"><code>Err</code></a>-value, as the expression\n<code>Arc::try_unwrap(this).ok()</code> does, can cause the strong count to\ndrop to zero and the inner value of the <code>Arc</code> to be dropped.\nFor instance, if two threads execute such an expression in parallel,\nthere is a race condition without the possibility of unsafety:\nThe threads could first both check whether they own the last instance\nin <code>Arc::try_unwrap</code>, determine that they both do not, and then both\ndiscard and drop their instance in the call to <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#method.ok\" title=\"method core::result::Result::ok\"><code>ok</code></a>.\nIn this scenario, the value inside the <code>Arc</code> is safely destroyed\nby exactly one of the threads, but neither thread will ever be able\nto use the value.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x = Arc::new(<span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(Arc::try_unwrap(x), <span class=\"prelude-val\">Ok</span>(<span class=\"number\">3</span>));\n\n<span class=\"kw\">let </span>x = Arc::new(<span class=\"number\">4</span>);\n<span class=\"kw\">let </span>_y = Arc::clone(<span class=\"kw-2\">&amp;</span>x);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>Arc::try_unwrap(x).unwrap_err(), <span class=\"number\">4</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1112\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(this: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the inner value, if the <code>Arc</code> has exactly one strong reference.</p>\n<p>Otherwise, <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> is returned and the <code>Arc</code> is dropped.</p>\n<p>This will succeed even if there are outstanding weak references.</p>\n<p>If <code>Arc::into_inner</code> is called on every clone of this <code>Arc</code>,\nit is guaranteed that exactly one of the calls returns the inner value.\nThis means in particular that the inner value is not dropped.</p>\n<p><a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.try_unwrap\" title=\"associated function alloc::sync::Arc::try_unwrap\"><code>Arc::try_unwrap</code></a> is conceptually similar to <code>Arc::into_inner</code>, but it\nis meant for different use-cases. If used as a direct replacement\nfor <code>Arc::into_inner</code> anyway, such as with the expression\n<code><a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.try_unwrap\" title=\"associated function alloc::sync::Arc::try_unwrap\">Arc::try_unwrap</a>(this).<a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#method.ok\" title=\"method core::result::Result::ok\">ok</a>()</code>, then it does\n<strong>not</strong> give the same guarantee as described in the previous paragraph.\nFor more information, see the examples below and read the documentation\nof <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.try_unwrap\" title=\"associated function alloc::sync::Arc::try_unwrap\"><code>Arc::try_unwrap</code></a>.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">ยง</a>Examples</h5>\n<p>Minimal example demonstrating the guarantee that <code>Arc::into_inner</code> gives.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x = Arc::new(<span class=\"number\">3</span>);\n<span class=\"kw\">let </span>y = Arc::clone(<span class=\"kw-2\">&amp;</span>x);\n\n<span class=\"comment\">// Two threads calling `Arc::into_inner` on both clones of an `Arc`:\n</span><span class=\"kw\">let </span>x_thread = std::thread::spawn(|| Arc::into_inner(x));\n<span class=\"kw\">let </span>y_thread = std::thread::spawn(|| Arc::into_inner(y));\n\n<span class=\"kw\">let </span>x_inner_value = x_thread.join().unwrap();\n<span class=\"kw\">let </span>y_inner_value = y_thread.join().unwrap();\n\n<span class=\"comment\">// One of the threads is guaranteed to receive the inner value:\n</span><span class=\"macro\">assert!</span>(<span class=\"macro\">matches!</span>(\n    (x_inner_value, y_inner_value),\n    (<span class=\"prelude-val\">None</span>, <span class=\"prelude-val\">Some</span>(<span class=\"number\">3</span>)) | (<span class=\"prelude-val\">Some</span>(<span class=\"number\">3</span>), <span class=\"prelude-val\">None</span>)\n));\n<span class=\"comment\">// The result could also be `(None, None)` if the threads called\n// `Arc::try_unwrap(x).ok()` and `Arc::try_unwrap(y).ok()` instead.</span></code></pre></div>\n<p>A more practical example demonstrating the need for <code>Arc::into_inner</code>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"comment\">// Definition of a simple singly linked list using `Arc`:\n</span><span class=\"attr\">#[derive(Clone)]\n</span><span class=\"kw\">struct </span>LinkedList&lt;T&gt;(<span class=\"prelude-ty\">Option</span>&lt;Arc&lt;Node&lt;T&gt;&gt;&gt;);\n<span class=\"kw\">struct </span>Node&lt;T&gt;(T, <span class=\"prelude-ty\">Option</span>&lt;Arc&lt;Node&lt;T&gt;&gt;&gt;);\n\n<span class=\"comment\">// Dropping a long `LinkedList&lt;T&gt;` relying on the destructor of `Arc`\n// can cause a stack overflow. To prevent this, we can provide a\n// manual `Drop` implementation that does the destruction in a loop:\n</span><span class=\"kw\">impl</span>&lt;T&gt; Drop <span class=\"kw\">for </span>LinkedList&lt;T&gt; {\n    <span class=\"kw\">fn </span>drop(<span class=\"kw-2\">&amp;mut </span><span class=\"self\">self</span>) {\n        <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>link = <span class=\"self\">self</span>.<span class=\"number\">0</span>.take();\n        <span class=\"kw\">while let </span><span class=\"prelude-val\">Some</span>(arc_node) = link.take() {\n            <span class=\"kw\">if let </span><span class=\"prelude-val\">Some</span>(Node(_value, next)) = Arc::into_inner(arc_node) {\n                link = next;\n            }\n        }\n    }\n}\n\n<span class=\"comment\">// Implementation of `new` and `push` omitted\n</span><span class=\"kw\">impl</span>&lt;T&gt; LinkedList&lt;T&gt; {\n    <span class=\"comment\">/* ... */\n</span>}\n\n<span class=\"comment\">// The following code could have still caused a stack overflow\n// despite the manual `Drop` impl if that `Drop` impl had used\n// `Arc::try_unwrap(arc).ok()` instead of `Arc::into_inner(arc)`.\n\n// Create a long list and clone it\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = LinkedList::new();\n<span class=\"kw\">let </span>size = <span class=\"number\">100000</span>;\n<span class=\"kw\">for </span>i <span class=\"kw\">in </span><span class=\"number\">0</span>..size {\n    x.push(i); <span class=\"comment\">// Adds i to the front of x\n</span>}\n<span class=\"kw\">let </span>y = x.clone();\n\n<span class=\"comment\">// Drop the clones in parallel\n</span><span class=\"kw\">let </span>x_thread = std::thread::spawn(|| drop(x));\n<span class=\"kw\">let </span>y_thread = std::thread::spawn(|| drop(y));\nx_thread.join().unwrap();\ny_thread.join().unwrap();</code></pre></div>\n</div></details></div></details>",0,"ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsFd-for-Arc%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0\">1.64.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/os/fd/owned.rs.html#415\">source</a></span><a href=\"#impl-AsFd-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/os/fd/owned/trait.AsFd.html\" title=\"trait std::os::fd::owned::AsFd\">AsFd</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/os/fd/owned/trait.AsFd.html\" title=\"trait std::os::fd::owned::AsFd\">AsFd</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"docblock\"><p>This impl allows implementing traits that require <code>AsFd</code> on Arc.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::net::UdpSocket;\n<span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">trait </span>MyTrait: AsFd {}\n<span class=\"kw\">impl </span>MyTrait <span class=\"kw\">for </span>Arc&lt;UdpSocket&gt; {}\n<span class=\"kw\">impl </span>MyTrait <span class=\"kw\">for </span>Box&lt;UdpSocket&gt; {}</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/os/fd/owned.rs.html#417\">source</a><a href=\"#method.as_fd\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/os/fd/owned/trait.AsFd.html#tymethod.as_fd\" class=\"fn\">as_fd</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/os/fd/owned/struct.BorrowedFd.html\" title=\"struct std::os::fd::owned::BorrowedFd\">BorrowedFd</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Borrows the file descriptor. <a href=\"https://doc.rust-lang.org/nightly/std/os/fd/owned/trait.AsFd.html#tymethod.as_fd\">Read more</a></div></details></div></details>","AsFd","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRawFd-for-Arc%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/os/fd/raw.rs.html#254\">source</a></span><a href=\"#impl-AsRawFd-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/os/fd/raw/trait.AsRawFd.html\" title=\"trait std::os::fd::raw::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/os/fd/raw/trait.AsRawFd.html\" title=\"trait std::os::fd::raw::AsRawFd\">AsRawFd</a>,</div></h3></section></summary><div class=\"docblock\"><p>This impl allows implementing traits that require <code>AsRawFd</code> on Arc.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::net::UdpSocket;\n<span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">trait </span>MyTrait: AsRawFd {\n}\n<span class=\"kw\">impl </span>MyTrait <span class=\"kw\">for </span>Arc&lt;UdpSocket&gt; {}\n<span class=\"kw\">impl </span>MyTrait <span class=\"kw\">for </span>Box&lt;UdpSocket&gt; {}</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_raw_fd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/os/fd/raw.rs.html#256\">source</a><a href=\"#method.as_raw_fd\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/os/fd/raw/trait.AsRawFd.html#tymethod.as_raw_fd\" class=\"fn\">as_raw_fd</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Extracts the raw file descriptor. <a href=\"https://doc.rust-lang.org/nightly/std/os/fd/raw/trait.AsRawFd.html#tymethod.as_raw_fd\">Read more</a></div></details></div></details>","AsRawFd","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CT%3E-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3847\">source</a></span><a href=\"#impl-AsRef%3CT%3E-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3848\">source</a><a href=\"#method.as_ref\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<T>","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3CT%3E-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3840\">source</a></span><a href=\"#impl-Borrow%3CT%3E-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3841\">source</a><a href=\"#method.borrow\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<T>","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BoundDataProvider%3CM%3E-for-Arc%3CP%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_provider/data_provider.rs.html#202-205\">source</a><a href=\"#impl-BoundDataProvider%3CM%3E-for-Arc%3CP%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M, P&gt; <a class=\"trait\" href=\"icu_provider/data_provider/trait.BoundDataProvider.html\" title=\"trait icu_provider::data_provider::BoundDataProvider\">BoundDataProvider</a>&lt;M&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;P&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"icu_provider/marker/trait.DataMarker.html\" title=\"trait icu_provider::marker::DataMarker\">DataMarker</a>,\n    P: <a class=\"trait\" href=\"icu_provider/data_provider/trait.BoundDataProvider.html\" title=\"trait icu_provider::data_provider::BoundDataProvider\">BoundDataProvider</a>&lt;M&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.load_bound\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/icu_provider/data_provider.rs.html#208\">source</a><a href=\"#method.load_bound\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"icu_provider/data_provider/trait.BoundDataProvider.html#tymethod.load_bound\" class=\"fn\">load_bound</a>(&amp;self, req: <a class=\"struct\" href=\"icu_provider/request/struct.DataRequest.html\" title=\"struct icu_provider::request::DataRequest\">DataRequest</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"icu_provider/response/struct.DataResponse.html\" title=\"struct icu_provider::response::DataResponse\">DataResponse</a>&lt;M&gt;, <a class=\"struct\" href=\"icu_provider/error/struct.DataError.html\" title=\"struct icu_provider::error::DataError\">DataError</a>&gt;</h4></section></summary><div class='docblock'>Query the provider for data, returning the result. <a href=\"icu_provider/data_provider/trait.BoundDataProvider.html#tymethod.load_bound\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bound_key\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/icu_provider/data_provider.rs.html#212\">source</a><a href=\"#method.bound_key\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"icu_provider/data_provider/trait.BoundDataProvider.html#tymethod.bound_key\" class=\"fn\">bound_key</a>(&amp;self) -&gt; <a class=\"struct\" href=\"icu_provider/key/struct.DataKey.html\" title=\"struct icu_provider::key::DataKey\">DataKey</a></h4></section></summary><div class='docblock'>Returns the <a href=\"icu_provider/key/struct.DataKey.html\" title=\"struct icu_provider::key::DataKey\"><code>DataKey</code></a> that this provider uses for loading data.</div></details></div></details>","BoundDataProvider<M>","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BufferProvider-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_provider/buf.rs.html#130\">source</a><a href=\"#impl-BufferProvider-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"icu_provider/buf/trait.BufferProvider.html\" title=\"trait icu_provider::buf::BufferProvider\">BufferProvider</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"icu_provider/buf/trait.BufferProvider.html\" title=\"trait icu_provider::buf::BufferProvider\">BufferProvider</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.load_buffer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/icu_provider/buf.rs.html#132-136\">source</a><a href=\"#method.load_buffer\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"icu_provider/buf/trait.BufferProvider.html#tymethod.load_buffer\" class=\"fn\">load_buffer</a>(\n    &amp;self,\n    key: <a class=\"struct\" href=\"icu_provider/key/struct.DataKey.html\" title=\"struct icu_provider::key::DataKey\">DataKey</a>,\n    req: <a class=\"struct\" href=\"icu_provider/request/struct.DataRequest.html\" title=\"struct icu_provider::request::DataRequest\">DataRequest</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"icu_provider/response/struct.DataResponse.html\" title=\"struct icu_provider::response::DataResponse\">DataResponse</a>&lt;<a class=\"struct\" href=\"icu_provider/buf/struct.BufferMarker.html\" title=\"struct icu_provider::buf::BufferMarker\">BufferMarker</a>&gt;, <a class=\"struct\" href=\"icu_provider/error/struct.DataError.html\" title=\"struct icu_provider::error::DataError\">DataError</a>&gt;</h4></section></summary><div class='docblock'>Loads a <a href=\"icu_provider/response/struct.DataPayload.html\" title=\"struct icu_provider::response::DataPayload\"><code>DataPayload</code></a><code>&lt;</code><a href=\"icu_provider/buf/struct.BufferMarker.html\" title=\"struct icu_provider::buf::BufferMarker\"><code>BufferMarker</code></a><code>&gt;</code> according to the key and request.</div></details></div></details>","BufferProvider","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CanonicalDeserialize-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ark_serialize/impls.rs.html#345-346\">source</a><a href=\"#impl-CanonicalDeserialize-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"ark_serialize/trait.CanonicalDeserialize.html\" title=\"trait ark_serialize::CanonicalDeserialize\">CanonicalDeserialize</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"ark_serialize/trait.CanonicalDeserialize.html\" title=\"trait ark_serialize::CanonicalDeserialize\">CanonicalDeserialize</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/trait.ToOwned.html\" title=\"trait alloc::borrow::ToOwned\">ToOwned</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_with_mode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ark_serialize/impls.rs.html#349-353\">source</a><a href=\"#method.deserialize_with_mode\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ark_serialize/trait.CanonicalDeserialize.html#tymethod.deserialize_with_mode\" class=\"fn\">deserialize_with_mode</a>&lt;R&gt;(\n    reader: R,\n    compress: <a class=\"enum\" href=\"ark_serialize/enum.Compress.html\" title=\"enum ark_serialize::Compress\">Compress</a>,\n    validate: <a class=\"enum\" href=\"ark_serialize/enum.Validate.html\" title=\"enum ark_serialize::Validate\">Validate</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;, <a class=\"enum\" href=\"ark_serialize/error/enum.SerializationError.html\" title=\"enum ark_serialize::error::SerializationError\">SerializationError</a>&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section></summary><div class='docblock'>The general deserialize method that takes in customization flags.</div></details><section id=\"method.deserialize_compressed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ark_serialize/lib.rs.html#134\">source</a><a href=\"#method.deserialize_compressed\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ark_serialize/trait.CanonicalDeserialize.html#method.deserialize_compressed\" class=\"fn\">deserialize_compressed</a>&lt;R&gt;(reader: R) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"ark_serialize/error/enum.SerializationError.html\" title=\"enum ark_serialize::error::SerializationError\">SerializationError</a>&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section><section id=\"method.deserialize_compressed_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ark_serialize/lib.rs.html#138\">source</a><a href=\"#method.deserialize_compressed_unchecked\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ark_serialize/trait.CanonicalDeserialize.html#method.deserialize_compressed_unchecked\" class=\"fn\">deserialize_compressed_unchecked</a>&lt;R&gt;(\n    reader: R,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"ark_serialize/error/enum.SerializationError.html\" title=\"enum ark_serialize::error::SerializationError\">SerializationError</a>&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section><section id=\"method.deserialize_uncompressed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ark_serialize/lib.rs.html#142\">source</a><a href=\"#method.deserialize_uncompressed\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ark_serialize/trait.CanonicalDeserialize.html#method.deserialize_uncompressed\" class=\"fn\">deserialize_uncompressed</a>&lt;R&gt;(reader: R) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"ark_serialize/error/enum.SerializationError.html\" title=\"enum ark_serialize::error::SerializationError\">SerializationError</a>&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section><section id=\"method.deserialize_uncompressed_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ark_serialize/lib.rs.html#146\">source</a><a href=\"#method.deserialize_uncompressed_unchecked\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ark_serialize/trait.CanonicalDeserialize.html#method.deserialize_uncompressed_unchecked\" class=\"fn\">deserialize_uncompressed_unchecked</a>&lt;R&gt;(\n    reader: R,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"ark_serialize/error/enum.SerializationError.html\" title=\"enum ark_serialize::error::SerializationError\">SerializationError</a>&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section></div></details>","CanonicalDeserialize","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CanonicalSerialize-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ark_serialize/impls.rs.html#309\">source</a><a href=\"#impl-CanonicalSerialize-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"ark_serialize/trait.CanonicalSerialize.html\" title=\"trait ark_serialize::CanonicalSerialize\">CanonicalSerialize</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"ark_serialize/trait.CanonicalSerialize.html\" title=\"trait ark_serialize::CanonicalSerialize\">CanonicalSerialize</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/trait.ToOwned.html\" title=\"trait alloc::borrow::ToOwned\">ToOwned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize_with_mode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ark_serialize/impls.rs.html#311-315\">source</a><a href=\"#method.serialize_with_mode\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ark_serialize/trait.CanonicalSerialize.html#tymethod.serialize_with_mode\" class=\"fn\">serialize_with_mode</a>&lt;W&gt;(\n    &amp;self,\n    writer: W,\n    compress: <a class=\"enum\" href=\"ark_serialize/enum.Compress.html\" title=\"enum ark_serialize::Compress\">Compress</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"ark_serialize/error/enum.SerializationError.html\" title=\"enum ark_serialize::error::SerializationError\">SerializationError</a>&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,</div></h4></section></summary><div class='docblock'>The general serialize method that takes in customization flags.</div></details><section id=\"method.serialized_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ark_serialize/impls.rs.html#320\">source</a><a href=\"#method.serialized_size\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ark_serialize/trait.CanonicalSerialize.html#tymethod.serialized_size\" class=\"fn\">serialized_size</a>(&amp;self, compress: <a class=\"enum\" href=\"ark_serialize/enum.Compress.html\" title=\"enum ark_serialize::Compress\">Compress</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.serialize_compressed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ark_serialize/lib.rs.html#93\">source</a><a href=\"#method.serialize_compressed\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ark_serialize/trait.CanonicalSerialize.html#method.serialize_compressed\" class=\"fn\">serialize_compressed</a>&lt;W&gt;(&amp;self, writer: W) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"ark_serialize/error/enum.SerializationError.html\" title=\"enum ark_serialize::error::SerializationError\">SerializationError</a>&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,</div></h4></section><section id=\"method.compressed_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ark_serialize/lib.rs.html#97\">source</a><a href=\"#method.compressed_size\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ark_serialize/trait.CanonicalSerialize.html#method.compressed_size\" class=\"fn\">compressed_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.serialize_uncompressed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ark_serialize/lib.rs.html#101\">source</a><a href=\"#method.serialize_uncompressed\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ark_serialize/trait.CanonicalSerialize.html#method.serialize_uncompressed\" class=\"fn\">serialize_uncompressed</a>&lt;W&gt;(&amp;self, writer: W) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"ark_serialize/error/enum.SerializationError.html\" title=\"enum ark_serialize::error::SerializationError\">SerializationError</a>&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,</div></h4></section><section id=\"method.uncompressed_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ark_serialize/lib.rs.html#105\">source</a><a href=\"#method.uncompressed_size\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ark_serialize/trait.CanonicalSerialize.html#method.uncompressed_size\" class=\"fn\">uncompressed_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></div></details>","CanonicalSerialize","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2120\">source</a></span><a href=\"#impl-Clone-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2136\">source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;</h4></section></summary><div class=\"docblock\"><p>Makes a clone of the <code>Arc</code> pointer.</p>\n<p>This creates another pointer to the same allocation, increasing the\nstrong reference count.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"kw\">let _ </span>= Arc::clone(<span class=\"kw-2\">&amp;</span>five);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CounterFn-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/metrics/handles.rs.html#181-183\">source</a><a href=\"#impl-CounterFn-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"metrics/handles/trait.CounterFn.html\" title=\"trait metrics::handles::CounterFn\">CounterFn</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"metrics/handles/trait.CounterFn.html\" title=\"trait metrics::handles::CounterFn\">CounterFn</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.increment\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/metrics/handles.rs.html#185\">source</a><a href=\"#method.increment\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"metrics/handles/trait.CounterFn.html#tymethod.increment\" class=\"fn\">increment</a>(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Increments the counter by the given amount.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.absolute\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/metrics/handles.rs.html#189\">source</a><a href=\"#method.absolute\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"metrics/handles/trait.CounterFn.html#tymethod.absolute\" class=\"fn\">absolute</a>(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Sets the counter to at least the given amount. <a href=\"metrics/handles/trait.CounterFn.html#tymethod.absolute\">Read more</a></div></details></div></details>","CounterFn","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DataProvider%3CM%3E-for-Arc%3CP%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_provider/data_provider.rs.html#60-63\">source</a><a href=\"#impl-DataProvider%3CM%3E-for-Arc%3CP%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M, P&gt; <a class=\"trait\" href=\"icu_provider/data_provider/trait.DataProvider.html\" title=\"trait icu_provider::data_provider::DataProvider\">DataProvider</a>&lt;M&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;P&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"icu_provider/marker/trait.KeyedDataMarker.html\" title=\"trait icu_provider::marker::KeyedDataMarker\">KeyedDataMarker</a>,\n    P: <a class=\"trait\" href=\"icu_provider/data_provider/trait.DataProvider.html\" title=\"trait icu_provider::data_provider::DataProvider\">DataProvider</a>&lt;M&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.load\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/icu_provider/data_provider.rs.html#66\">source</a><a href=\"#method.load\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"icu_provider/data_provider/trait.DataProvider.html#tymethod.load\" class=\"fn\">load</a>(&amp;self, req: <a class=\"struct\" href=\"icu_provider/request/struct.DataRequest.html\" title=\"struct icu_provider::request::DataRequest\">DataRequest</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"icu_provider/response/struct.DataResponse.html\" title=\"struct icu_provider::response::DataResponse\">DataResponse</a>&lt;M&gt;, <a class=\"struct\" href=\"icu_provider/error/struct.DataError.html\" title=\"struct icu_provider::error::DataError\">DataError</a>&gt;</h4></section></summary><div class='docblock'>Query the provider for data, returning the result. <a href=\"icu_provider/data_provider/trait.DataProvider.html#tymethod.load\">Read more</a></div></details></div></details>","DataProvider<M>","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3423\">source</a></span><a href=\"#impl-Debug-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3424\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/open_fastrlp/decode.rs.html#21-23\">source</a><a href=\"#impl-Decodable-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"open_fastrlp/decode/trait.Decodable.html\" title=\"trait open_fastrlp::decode::Decodable\">Decodable</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"open_fastrlp/decode/trait.Decodable.html\" title=\"trait open_fastrlp::decode::Decodable\">Decodable</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/open_fastrlp/decode.rs.html#25\">source</a><a href=\"#method.decode\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"open_fastrlp/decode/trait.Decodable.html#tymethod.decode\" class=\"fn\">decode</a>(buf: &amp;mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;, <a class=\"enum\" href=\"open_fastrlp/decode/enum.DecodeError.html\" title=\"enum open_fastrlp::decode::DecodeError\">DecodeError</a>&gt;</h4></section></div></details>","Decodable","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Arc%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3438\">source</a></span><a href=\"#impl-Default-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3449\">source</a><a href=\"#method.default\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new <code>Arc&lt;T&gt;</code>, with the <code>Default</code> value for <code>T</code>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x: Arc&lt;i32&gt; = Default::default();\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>x, <span class=\"number\">0</span>);</code></pre></div>\n</div></details></div></details>","Default","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2174\">source</a></span><a href=\"#impl-Deref-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2175\">source</a><a href=\"#associatedtype.Target\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = T</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2178\">source</a><a href=\"#method.deref\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#2087-2098\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'de, T&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"docblock\"><p>This impl requires the <a href=\"https://serde.rs/feature-flags.html#-features-rc\"><code>\"rc\"</code></a> Cargo feature of Serde.</p>\n<p>Deserializing a data structure containing <code>Arc</code> will not attempt to\ndeduplicate <code>Arc</code> references to the same data. Every deserialized <code>Arc</code>\nwill end up with a strong count of 1.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#2087-2098\">source</a><a href=\"#method.deserialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DeserializeAs%3C'de,+Arc%3CT%3E%3E-for-Arc%3CU%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde_with/de/impls.rs.html#263-265\">source</a><a href=\"#impl-DeserializeAs%3C'de,+Arc%3CT%3E%3E-for-Arc%3CU%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'de, T, U&gt; <a class=\"trait\" href=\"serde_with/de/trait.DeserializeAs.html\" title=\"trait serde_with::de::DeserializeAs\">DeserializeAs</a>&lt;'de, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"serde_with/de/trait.DeserializeAs.html\" title=\"trait serde_with::de::DeserializeAs\">DeserializeAs</a>&lt;'de, T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_as\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde_with/de/impls.rs.html#267-269\">source</a><a href=\"#method.deserialize_as\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"serde_with/de/trait.DeserializeAs.html#tymethod.deserialize_as\" class=\"fn\">deserialize_as</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer.</div></details></div></details>","DeserializeAs<'de, Arc<T>>","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3416\">source</a></span><a href=\"#impl-Display-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3417\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2496\">source</a></span><a href=\"#impl-Drop-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2523\">source</a><a href=\"#method.drop\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Drops the <code>Arc</code>.</p>\n<p>This will decrement the strong reference count. If the strong reference\ncount reaches zero then the only other references (if any) are\n<a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a>, so we <code>drop</code> the inner value.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">struct </span>Foo;\n\n<span class=\"kw\">impl </span>Drop <span class=\"kw\">for </span>Foo {\n    <span class=\"kw\">fn </span>drop(<span class=\"kw-2\">&amp;mut </span><span class=\"self\">self</span>) {\n        <span class=\"macro\">println!</span>(<span class=\"string\">\"dropped!\"</span>);\n    }\n}\n\n<span class=\"kw\">let </span>foo  = Arc::new(Foo);\n<span class=\"kw\">let </span>foo2 = Arc::clone(<span class=\"kw-2\">&amp;</span>foo);\n\ndrop(foo);    <span class=\"comment\">// Doesn't print anything\n</span>drop(foo2);   <span class=\"comment\">// Prints \"dropped!\"</span></code></pre></div>\n</div></details></div></details>","Drop","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DynamicDataProvider%3CM%3E-for-Arc%3CP%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_provider/data_provider.rs.html#122-125\">source</a><a href=\"#impl-DynamicDataProvider%3CM%3E-for-Arc%3CP%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M, P&gt; <a class=\"trait\" href=\"icu_provider/data_provider/trait.DynamicDataProvider.html\" title=\"trait icu_provider::data_provider::DynamicDataProvider\">DynamicDataProvider</a>&lt;M&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;P&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"icu_provider/marker/trait.DataMarker.html\" title=\"trait icu_provider::marker::DataMarker\">DataMarker</a>,\n    P: <a class=\"trait\" href=\"icu_provider/data_provider/trait.DynamicDataProvider.html\" title=\"trait icu_provider::data_provider::DynamicDataProvider\">DynamicDataProvider</a>&lt;M&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.load_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/icu_provider/data_provider.rs.html#128\">source</a><a href=\"#method.load_data\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"icu_provider/data_provider/trait.DynamicDataProvider.html#tymethod.load_data\" class=\"fn\">load_data</a>(\n    &amp;self,\n    key: <a class=\"struct\" href=\"icu_provider/key/struct.DataKey.html\" title=\"struct icu_provider::key::DataKey\">DataKey</a>,\n    req: <a class=\"struct\" href=\"icu_provider/request/struct.DataRequest.html\" title=\"struct icu_provider::request::DataRequest\">DataRequest</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"icu_provider/response/struct.DataResponse.html\" title=\"struct icu_provider::response::DataResponse\">DataResponse</a>&lt;M&gt;, <a class=\"struct\" href=\"icu_provider/error/struct.DataError.html\" title=\"struct icu_provider::error::DataError\">DataError</a>&gt;</h4></section></summary><div class='docblock'>Query the provider for data, returning the result. <a href=\"icu_provider/data_provider/trait.DynamicDataProvider.html#tymethod.load_data\">Read more</a></div></details></div></details>","DynamicDataProvider<M>","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin/consensus/encode.rs.html#776\">source</a><a href=\"#impl-Encodable-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bitcoin/consensus/encode/trait.Encodable.html\" title=\"trait bitcoin::consensus::encode::Encodable\">Encodable</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bitcoin/consensus/encode/trait.Encodable.html\" title=\"trait bitcoin::consensus::encode::Encodable\">Encodable</a>,</div></h3></section></summary><div class=\"docblock\"><p>Note: This will fail to compile on old Rust for targets that donโt support atomics</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.consensus_encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin/consensus/encode.rs.html#777\">source</a><a href=\"#method.consensus_encode\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bitcoin/consensus/encode/trait.Encodable.html#tymethod.consensus_encode\" class=\"fn\">consensus_encode</a>&lt;W&gt;(&amp;self, w: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut W</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Encodes an object with a well-defined format. <a href=\"bitcoin/consensus/encode/trait.Encodable.html#tymethod.consensus_encode\">Read more</a></div></details></div></details>","Encodable","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/open_fastrlp/encode.rs.html#71\">source</a><a href=\"#impl-Encodable-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"open_fastrlp/encode/trait.Encodable.html\" title=\"trait open_fastrlp::encode::Encodable\">Encodable</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"open_fastrlp/encode/trait.Encodable.html\" title=\"trait open_fastrlp::encode::Encodable\">Encodable</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/open_fastrlp/encode.rs.html#71\">source</a><a href=\"#method.encode\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"open_fastrlp/encode/trait.Encodable.html#tymethod.encode\" class=\"fn\">encode</a>(&amp;self, out: &amp;mut dyn <a class=\"trait\" href=\"bytes/buf/buf_mut/trait.BufMut.html\" title=\"trait bytes::buf::buf_mut::BufMut\">BufMut</a>)</h4></section><section id=\"method.length\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/open_fastrlp/encode.rs.html#71\">source</a><a href=\"#method.length\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"open_fastrlp/encode/trait.Encodable.html#method.length\" class=\"fn\">length</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></div></details>","Encodable","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3646\">source</a></span><a href=\"#impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3658\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;</h4></section></summary><div class=\"docblock\"><p>Move a boxed object to a new, reference-counted allocation.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">ยง</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>unique: Box&lt;str&gt; = Box::from(<span class=\"string\">\"eggplant\"</span>);\n<span class=\"kw\">let </span>shared: Arc&lt;str&gt; = Arc::from(unique);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"eggplant\"</span>, <span class=\"kw-2\">&amp;</span>shared[..]);</code></pre></div>\n</div></details></div></details>","From<Box<T, A>>","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCow%3C'a,+B%3E%3E-for-Arc%3CB%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3694-3697\">source</a></span><a href=\"#impl-From%3CCow%3C'a,+B%3E%3E-for-Arc%3CB%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'a, B&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;B&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/trait.ToOwned.html\" title=\"trait alloc::borrow::ToOwned\">ToOwned</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;B&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a B</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;B as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/trait.ToOwned.html\" title=\"trait alloc::borrow::ToOwned\">ToOwned</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/trait.ToOwned.html#associatedtype.Owned\" title=\"type alloc::borrow::ToOwned::Owned\">Owned</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3712\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(cow: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'a, B&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;B&gt;</h4></section></summary><div class=\"docblock\"><p>Creates an atomically reference-counted pointer from a clone-on-write\npointer by copying its content.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">ยง</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>cow: Cow&lt;<span class=\"lifetime\">'_</span>, str&gt; = Cow::Borrowed(<span class=\"string\">\"eggplant\"</span>);\n<span class=\"kw\">let </span>shared: Arc&lt;str&gt; = Arc::from(cow);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"eggplant\"</span>, <span class=\"kw-2\">&amp;</span>shared[..]);</code></pre></div>\n</div></details></div></details>","From<Cow<'a, B>>","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CT%3E-for-Arc%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3546\">source</a></span><a href=\"#impl-From%3CT%3E-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3561\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(t: T) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a <code>T</code> into an <code>Arc&lt;T&gt;</code></p>\n<p>The conversion moves the value into a\nnewly allocated <code>Arc</code>. It is equivalent to\ncalling <code>Arc::new(t)</code>.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">ยง</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"number\">5</span>;\n<span class=\"kw\">let </span>arc = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert_eq!</span>(Arc::from(x), arc);</code></pre></div>\n</div></details></div></details>","From<T>","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromHex-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/const_hex/traits.rs.html#209\">source</a><a href=\"#impl-FromHex-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"const_hex/traits/trait.FromHex.html\" title=\"trait const_hex::traits::FromHex\">FromHex</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"const_hex/traits/trait.FromHex.html\" title=\"trait const_hex::traits::FromHex\">FromHex</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/const_hex/traits.rs.html#210\">source</a><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"const_hex/traits/trait.FromHex.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &lt;T as <a class=\"trait\" href=\"const_hex/traits/trait.FromHex.html\" title=\"trait const_hex::traits::FromHex\">FromHex</a>&gt;::<a class=\"associatedtype\" href=\"const_hex/traits/trait.FromHex.html#associatedtype.Error\" title=\"type const_hex::traits::FromHex::Error\">Error</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_hex\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/const_hex/traits.rs.html#213\">source</a><a href=\"#method.from_hex\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"const_hex/traits/trait.FromHex.html#tymethod.from_hex\" class=\"fn\">from_hex</a>&lt;U&gt;(hex: U) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt; as <a class=\"trait\" href=\"const_hex/traits/trait.FromHex.html\" title=\"trait const_hex::traits::FromHex\">FromHex</a>&gt;::<a class=\"associatedtype\" href=\"const_hex/traits/trait.FromHex.html#associatedtype.Error\" title=\"type const_hex::traits::FromHex::Error\">Error</a>&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;,</div></h4></section></summary><div class='docblock'>Creates an instance of type <code>Self</code> from the given hex string, or fails\nwith a custom error type. <a href=\"const_hex/traits/trait.FromHex.html#tymethod.from_hex\">Read more</a></div></details></div></details>","FromHex","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GasOracle-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ethers_middleware/gas_oracle/mod.rs.html#116\">source</a><a href=\"#impl-GasOracle-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"ethers_middleware/gas_oracle/trait.GasOracle.html\" title=\"trait ethers_middleware::gas_oracle::GasOracle\">GasOracle</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"ethers_middleware/gas_oracle/trait.GasOracle.html\" title=\"trait ethers_middleware::gas_oracle::GasOracle\">GasOracle</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fetch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_middleware/gas_oracle/mod.rs.html#116\">source</a><a href=\"#method.fetch\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_middleware/gas_oracle/trait.GasOracle.html#tymethod.fetch\" class=\"fn\">fetch</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"primitive_types/struct.U256.html\" title=\"struct primitive_types::U256\">U256</a>, <a class=\"enum\" href=\"ethers_middleware/gas_oracle/enum.GasOracleError.html\" title=\"enum ethers_middleware::gas_oracle::GasOracleError\">GasOracleError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Makes an asynchronous HTTP query to the underlying <a href=\"ethers_middleware/gas_oracle/trait.GasOracle.html\" title=\"trait ethers_middleware::gas_oracle::GasOracle\"><code>GasOracle</code></a> to fetch the current gas\nprice estimate. <a href=\"ethers_middleware/gas_oracle/trait.GasOracle.html#tymethod.fetch\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.estimate_eip1559_fees\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_middleware/gas_oracle/mod.rs.html#116\">source</a><a href=\"#method.estimate_eip1559_fees\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_middleware/gas_oracle/trait.GasOracle.html#tymethod.estimate_eip1559_fees\" class=\"fn\">estimate_eip1559_fees</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"struct\" href=\"primitive_types/struct.U256.html\" title=\"struct primitive_types::U256\">U256</a>, <a class=\"struct\" href=\"primitive_types/struct.U256.html\" title=\"struct primitive_types::U256\">U256</a>), <a class=\"enum\" href=\"ethers_middleware/gas_oracle/enum.GasOracleError.html\" title=\"enum ethers_middleware::gas_oracle::GasOracleError\">GasOracleError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Makes an asynchronous HTTP query to the underlying <a href=\"ethers_middleware/gas_oracle/trait.GasOracle.html\" title=\"trait ethers_middleware::gas_oracle::GasOracle\"><code>GasOracle</code></a> to fetch the current max\ngas fee and priority gas fee estimates. <a href=\"ethers_middleware/gas_oracle/trait.GasOracle.html#tymethod.estimate_eip1559_fees\">Read more</a></div></details></div></details>","GasOracle","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GaugeFn-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/metrics/handles.rs.html#193-195\">source</a><a href=\"#impl-GaugeFn-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"metrics/handles/trait.GaugeFn.html\" title=\"trait metrics::handles::GaugeFn\">GaugeFn</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"metrics/handles/trait.GaugeFn.html\" title=\"trait metrics::handles::GaugeFn\">GaugeFn</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.increment\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/metrics/handles.rs.html#197\">source</a><a href=\"#method.increment\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"metrics/handles/trait.GaugeFn.html#tymethod.increment\" class=\"fn\">increment</a>(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class='docblock'>Increments the gauge by the given amount.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decrement\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/metrics/handles.rs.html#201\">source</a><a href=\"#method.decrement\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"metrics/handles/trait.GaugeFn.html#tymethod.decrement\" class=\"fn\">decrement</a>(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class='docblock'>Decrements the gauge by the given amount.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/metrics/handles.rs.html#205\">source</a><a href=\"#method.set\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"metrics/handles/trait.GaugeFn.html#tymethod.set\" class=\"fn\">set</a>(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class='docblock'>Sets the gauge to the given amount.</div></details></div></details>","GaugeFn","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3538\">source</a></span><a href=\"#impl-Hash-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3539\">source</a><a href=\"#method.hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HistogramFn-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/metrics/handles.rs.html#210-212\">source</a><a href=\"#impl-HistogramFn-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"metrics/handles/trait.HistogramFn.html\" title=\"trait metrics::handles::HistogramFn\">HistogramFn</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"metrics/handles/trait.HistogramFn.html\" title=\"trait metrics::handles::HistogramFn\">HistogramFn</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.record\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/metrics/handles.rs.html#214\">source</a><a href=\"#method.record\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"metrics/handles/trait.HistogramFn.html#tymethod.record\" class=\"fn\">record</a>(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class='docblock'>Records a value into the histogram.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.record_many\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/metrics/handles.rs.html#41\">source</a><a href=\"#method.record_many\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"metrics/handles/trait.HistogramFn.html#method.record_many\" class=\"fn\">record_many</a>(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>, count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Records a value into the histogram multiple times.</div></details></div></details>","HistogramFn","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-JsonRpcClient-for-Arc%3CU%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ethers_providers/rpc/connections.rs.html#9\">source</a><a href=\"#impl-JsonRpcClient-for-Arc%3CU%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;U&gt; <a class=\"trait\" href=\"ethers_providers/rpc/connections/trait.JsonRpcClient.html\" title=\"trait ethers_providers::rpc::connections::JsonRpcClient\">JsonRpcClient</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"ethers_providers/rpc/connections/trait.JsonRpcClient.html\" title=\"trait ethers_providers::rpc::connections::JsonRpcClient\">JsonRpcClient</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/rpc/connections.rs.html#9\">source</a><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"ethers_providers/rpc/connections/trait.JsonRpcClient.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &lt;U as <a class=\"trait\" href=\"ethers_providers/rpc/connections/trait.JsonRpcClient.html\" title=\"trait ethers_providers::rpc::connections::JsonRpcClient\">JsonRpcClient</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/rpc/connections/trait.JsonRpcClient.html#associatedtype.Error\" title=\"type ethers_providers::rpc::connections::JsonRpcClient::Error\">Error</a></h4></section></summary><div class='docblock'>A JSON-RPC Error</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.request\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/rpc/connections.rs.html#9\">source</a><a href=\"#method.request\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/rpc/connections/trait.JsonRpcClient.html#tymethod.request\" class=\"fn\">request</a>&lt;'life0, 'life1, 'async_trait, T, R&gt;(\n    &amp;'life0 self,\n    method: &amp;'life1 <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    params: T,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/rpc/connections/trait.JsonRpcClient.html\" title=\"trait ethers_providers::rpc::connections::JsonRpcClient\">JsonRpcClient</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/rpc/connections/trait.JsonRpcClient.html#associatedtype.Error\" title=\"type ethers_providers::rpc::connections::JsonRpcClient::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'async_trait,\n    R: <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Sends a request with the provided JSON-RPC and parameters serialized as JSON</div></details></div></details>","JsonRpcClient","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-JsonSchema-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/schemars/json_schema_impls/wrapper.rs.html#16\">source</a><a href=\"#impl-JsonSchema-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"schemars/trait.JsonSchema.html\" title=\"trait schemars::JsonSchema\">JsonSchema</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"schemars/trait.JsonSchema.html\" title=\"trait schemars::JsonSchema\">JsonSchema</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_referenceable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/schemars/json_schema_impls/wrapper.rs.html#16\">source</a><a href=\"#method.is_referenceable\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"schemars/trait.JsonSchema.html#method.is_referenceable\" class=\"fn\">is_referenceable</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Whether JSON Schemas generated for this type should be re-used where possible using the <code>$ref</code> keyword. <a href=\"schemars/trait.JsonSchema.html#method.is_referenceable\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schema_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/schemars/json_schema_impls/wrapper.rs.html#16\">source</a><a href=\"#method.schema_name\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"schemars/trait.JsonSchema.html#tymethod.schema_name\" class=\"fn\">schema_name</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>The name of the generated JSON Schema. <a href=\"schemars/trait.JsonSchema.html#tymethod.schema_name\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schema_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/schemars/json_schema_impls/wrapper.rs.html#16\">source</a><a href=\"#method.schema_id\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"schemars/trait.JsonSchema.html#method.schema_id\" class=\"fn\">schema_id</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns a string that uniquely identifies the schema produced by this type. <a href=\"schemars/trait.JsonSchema.html#method.schema_id\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.json_schema\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/schemars/json_schema_impls/wrapper.rs.html#16\">source</a><a href=\"#method.json_schema\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"schemars/trait.JsonSchema.html#tymethod.json_schema\" class=\"fn\">json_schema</a>(gen: &amp;mut <a class=\"struct\" href=\"schemars/gen/struct.SchemaGenerator.html\" title=\"struct schemars::gen::SchemaGenerator\">SchemaGenerator</a>) -&gt; <a class=\"enum\" href=\"schemars/schema/enum.Schema.html\" title=\"enum schemars::schema::Schema\">Schema</a></h4></section></summary><div class='docblock'>Generates a JSON Schema for this type. <a href=\"schemars/trait.JsonSchema.html#tymethod.json_schema\">Read more</a></div></details></div></details>","JsonSchema","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Layer%3CS%3E-for-Arc%3CL%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1241-1244\">source</a><a href=\"#impl-Layer%3CS%3E-for-Arc%3CL%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;L, S&gt; <a class=\"trait\" href=\"tracing_subscriber/layer/trait.Layer.html\" title=\"trait tracing_subscriber::layer::Layer\">Layer</a>&lt;S&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;L&gt;<div class=\"where\">where\n    L: <a class=\"trait\" href=\"tracing_subscriber/layer/trait.Layer.html\" title=\"trait tracing_subscriber::layer::Layer\">Layer</a>&lt;S&gt;,\n    S: <a class=\"trait\" href=\"tracing_core/subscriber/trait.Subscriber.html\" title=\"trait tracing_core::subscriber::Subscriber\">Subscriber</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_layer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1246\">source</a><a href=\"#method.on_layer\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_subscriber/layer/trait.Layer.html#method.on_layer\" class=\"fn\">on_layer</a>(&amp;mut self, subscriber: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut S</a>)</h4></section></summary><div class='docblock'>Performs late initialization when attaching a <code>Layer</code> to a\n<a href=\"tracing_core/subscriber/trait.Subscriber.html\" title=\"trait tracing_core::subscriber::Subscriber\"><code>Subscriber</code></a>. <a href=\"tracing_subscriber/layer/trait.Layer.html#method.on_layer\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_span\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1255\">source</a><a href=\"#method.new_span\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_subscriber/layer/trait.Layer.html#method.new_span\" class=\"fn\">new_span</a>(&amp;self, attrs: &amp;<a class=\"struct\" href=\"tracing_core/span/struct.Attributes.html\" title=\"struct tracing_core::span::Attributes\">Attributes</a>&lt;'_&gt;, id: &amp;<a class=\"struct\" href=\"tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>, ctx: <a class=\"struct\" href=\"tracing_subscriber/layer/context/struct.Context.html\" title=\"struct tracing_subscriber::layer::context::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this layer that a new span was constructed with the given\n<code>Attributes</code> and <code>Id</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_callsite\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1255\">source</a><a href=\"#method.register_callsite\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_subscriber/layer/trait.Layer.html#method.register_callsite\" class=\"fn\">register_callsite</a>(&amp;self, metadata: &amp;'static <a class=\"struct\" href=\"tracing_core/metadata/struct.Metadata.html\" title=\"struct tracing_core::metadata::Metadata\">Metadata</a>&lt;'static&gt;) -&gt; <a class=\"struct\" href=\"tracing_core/subscriber/struct.Interest.html\" title=\"struct tracing_core::subscriber::Interest\">Interest</a></h4></section></summary><div class='docblock'>Registers a new callsite with this layer, returning whether or not\nthe layer is interested in being notified about the callsite, similarly\nto <a href=\"https://docs.rs/tracing-core/latest/tracing_core/trait.Subscriber.html#method.register_callsite\"><code>Subscriber::register_callsite</code></a>. <a href=\"tracing_subscriber/layer/trait.Layer.html#method.register_callsite\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enabled\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1255\">source</a><a href=\"#method.enabled\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_subscriber/layer/trait.Layer.html#method.enabled\" class=\"fn\">enabled</a>(&amp;self, metadata: &amp;<a class=\"struct\" href=\"tracing_core/metadata/struct.Metadata.html\" title=\"struct tracing_core::metadata::Metadata\">Metadata</a>&lt;'_&gt;, ctx: <a class=\"struct\" href=\"tracing_subscriber/layer/context/struct.Context.html\" title=\"struct tracing_subscriber::layer::context::Context\">Context</a>&lt;'_, S&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if this layer is interested in a span or event with the\ngiven <code>metadata</code> in the current <a href=\"../struct.Context.html\"><code>Context</code></a>, similarly to\n<a href=\"https://docs.rs/tracing-core/latest/tracing_core/trait.Subscriber.html#method.enabled\"><code>Subscriber::enabled</code></a>. <a href=\"tracing_subscriber/layer/trait.Layer.html#method.enabled\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_record\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1255\">source</a><a href=\"#method.on_record\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_subscriber/layer/trait.Layer.html#method.on_record\" class=\"fn\">on_record</a>(&amp;self, span: &amp;<a class=\"struct\" href=\"tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>, values: &amp;<a class=\"struct\" href=\"tracing_core/span/struct.Record.html\" title=\"struct tracing_core::span::Record\">Record</a>&lt;'_&gt;, ctx: <a class=\"struct\" href=\"tracing_subscriber/layer/context/struct.Context.html\" title=\"struct tracing_subscriber::layer::context::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this layer that a span with the given <code>Id</code> recorded the given\n<code>values</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_follows_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1255\">source</a><a href=\"#method.on_follows_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_subscriber/layer/trait.Layer.html#method.on_follows_from\" class=\"fn\">on_follows_from</a>(&amp;self, span: &amp;<a class=\"struct\" href=\"tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>, follows: &amp;<a class=\"struct\" href=\"tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>, ctx: <a class=\"struct\" href=\"tracing_subscriber/layer/context/struct.Context.html\" title=\"struct tracing_subscriber::layer::context::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this layer that a span with the ID <code>span</code> recorded that it\nfollows from the span with the ID <code>follows</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1255\">source</a><a href=\"#method.on_event\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_subscriber/layer/trait.Layer.html#method.on_event\" class=\"fn\">on_event</a>(&amp;self, event: &amp;<a class=\"struct\" href=\"tracing_core/event/struct.Event.html\" title=\"struct tracing_core::event::Event\">Event</a>&lt;'_&gt;, ctx: <a class=\"struct\" href=\"tracing_subscriber/layer/context/struct.Context.html\" title=\"struct tracing_subscriber::layer::context::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this layer that an event has occurred.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_enter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1255\">source</a><a href=\"#method.on_enter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_subscriber/layer/trait.Layer.html#method.on_enter\" class=\"fn\">on_enter</a>(&amp;self, id: &amp;<a class=\"struct\" href=\"tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>, ctx: <a class=\"struct\" href=\"tracing_subscriber/layer/context/struct.Context.html\" title=\"struct tracing_subscriber::layer::context::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this layer that a span with the given ID was entered.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_exit\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1255\">source</a><a href=\"#method.on_exit\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_subscriber/layer/trait.Layer.html#method.on_exit\" class=\"fn\">on_exit</a>(&amp;self, id: &amp;<a class=\"struct\" href=\"tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>, ctx: <a class=\"struct\" href=\"tracing_subscriber/layer/context/struct.Context.html\" title=\"struct tracing_subscriber::layer::context::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this layer that the span with the given ID was exited.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_close\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1255\">source</a><a href=\"#method.on_close\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_subscriber/layer/trait.Layer.html#method.on_close\" class=\"fn\">on_close</a>(&amp;self, id: <a class=\"struct\" href=\"tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>, ctx: <a class=\"struct\" href=\"tracing_subscriber/layer/context/struct.Context.html\" title=\"struct tracing_subscriber::layer::context::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this layer that the span with the given ID has been closed.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_id_change\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1255\">source</a><a href=\"#method.on_id_change\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_subscriber/layer/trait.Layer.html#method.on_id_change\" class=\"fn\">on_id_change</a>(&amp;self, old: &amp;<a class=\"struct\" href=\"tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>, new: &amp;<a class=\"struct\" href=\"tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>, ctx: <a class=\"struct\" href=\"tracing_subscriber/layer/context/struct.Context.html\" title=\"struct tracing_subscriber::layer::context::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this layer that a span ID has been cloned, and that the\nsubscriber returned a different ID.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.and_then\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#788-791\">source</a><a href=\"#method.and_then\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_subscriber/layer/trait.Layer.html#method.and_then\" class=\"fn\">and_then</a>&lt;L&gt;(self, layer: L) -&gt; <a class=\"struct\" href=\"tracing_subscriber/layer/layered/struct.Layered.html\" title=\"struct tracing_subscriber::layer::layered::Layered\">Layered</a>&lt;L, Self, S&gt;<div class=\"where\">where\n    L: <a class=\"trait\" href=\"tracing_subscriber/layer/trait.Layer.html\" title=\"trait tracing_subscriber::layer::Layer\">Layer</a>&lt;S&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Composes this layer around the given <code>Layer</code>, returning a <code>Layered</code>\nstruct implementing <code>Layer</code>. <a href=\"tracing_subscriber/layer/trait.Layer.html#method.and_then\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_subscriber\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#840-842\">source</a><a href=\"#method.with_subscriber\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_subscriber/layer/trait.Layer.html#method.with_subscriber\" class=\"fn\">with_subscriber</a>(self, inner: S) -&gt; <a class=\"struct\" href=\"tracing_subscriber/layer/layered/struct.Layered.html\" title=\"struct tracing_subscriber::layer::layered::Layered\">Layered</a>&lt;Self, S&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Composes this <code>Layer</code> with the given <a href=\"https://docs.rs/tracing-core/latest/tracing_core/trait.Subscriber.html\"><code>Subscriber</code></a>, returning a\n<code>Layered</code> struct that implements <a href=\"https://docs.rs/tracing-core/latest/tracing_core/trait.Subscriber.html\"><code>Subscriber</code></a>. <a href=\"tracing_subscriber/layer/trait.Layer.html#method.with_subscriber\">Read more</a></div></details></div></details>","Layer<S>","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LocalSpawn-for-Arc%3CSp%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_task/spawn.rs.html#183\">source</a><a href=\"#impl-LocalSpawn-for-Arc%3CSp%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Sp&gt; <a class=\"trait\" href=\"futures_task/spawn/trait.LocalSpawn.html\" title=\"trait futures_task::spawn::LocalSpawn\">LocalSpawn</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;Sp&gt;<div class=\"where\">where\n    Sp: <a class=\"trait\" href=\"futures_task/spawn/trait.LocalSpawn.html\" title=\"trait futures_task::spawn::LocalSpawn\">LocalSpawn</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.spawn_local_obj\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_task/spawn.rs.html#184\">source</a><a href=\"#method.spawn_local_obj\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"futures_task/spawn/trait.LocalSpawn.html#tymethod.spawn_local_obj\" class=\"fn\">spawn_local_obj</a>(\n    &amp;self,\n    future: <a class=\"struct\" href=\"futures_task/future_obj/struct.LocalFutureObj.html\" title=\"struct futures_task::future_obj::LocalFutureObj\">LocalFutureObj</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"futures_task/spawn/struct.SpawnError.html\" title=\"struct futures_task::spawn::SpawnError\">SpawnError</a>&gt;</h4></section></summary><div class='docblock'>Spawns a future that will be run to completion. <a href=\"futures_task/spawn/trait.LocalSpawn.html#tymethod.spawn_local_obj\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.status_local\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_task/spawn.rs.html#188\">source</a><a href=\"#method.status_local\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"futures_task/spawn/trait.LocalSpawn.html#method.status_local\" class=\"fn\">status_local</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"futures_task/spawn/struct.SpawnError.html\" title=\"struct futures_task::spawn::SpawnError\">SpawnError</a>&gt;</h4></section></summary><div class='docblock'>Determines whether the executor is able to spawn new tasks. <a href=\"futures_task/spawn/trait.LocalSpawn.html#method.status_local\">Read more</a></div></details></div></details>","LocalSpawn","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LockExt%3CT%3E-for-Arc%3CRwLock%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ibc_relayer/util/lock.rs.html#24-36\">source</a><a href=\"#impl-LockExt%3CT%3E-for-Arc%3CRwLock%3CT%3E%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"ibc_relayer/util/lock/trait.LockExt.html\" title=\"trait ibc_relayer::util::lock::LockExt\">LockExt</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/sync/rwlock/struct.RwLock.html\" title=\"struct std::sync::rwlock::RwLock\">RwLock</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.new_lock\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ibc_relayer/util/lock.rs.html#25-27\">source</a><a href=\"#method.new_lock\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ibc_relayer/util/lock/trait.LockExt.html#tymethod.new_lock\" class=\"fn\">new_lock</a>(val: T) -&gt; Self</h4></section><section id=\"method.acquire_read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ibc_relayer/util/lock.rs.html#29-31\">source</a><a href=\"#method.acquire_read\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ibc_relayer/util/lock/trait.LockExt.html#tymethod.acquire_read\" class=\"fn\">acquire_read</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/sync/rwlock/struct.RwLockReadGuard.html\" title=\"struct std::sync::rwlock::RwLockReadGuard\">RwLockReadGuard</a>&lt;'_, T&gt;</h4></section><section id=\"method.acquire_write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ibc_relayer/util/lock.rs.html#33-35\">source</a><a href=\"#method.acquire_write\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ibc_relayer/util/lock/trait.LockExt.html#tymethod.acquire_write\" class=\"fn\">acquire_write</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/sync/rwlock/struct.RwLockWriteGuard.html\" title=\"struct std::sync::rwlock::RwLockWriteGuard\">RwLockWriteGuard</a>&lt;'_, T&gt;</h4></section></div></details>","LockExt<T>","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Log-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/log/lib.rs.html#1251-1253\">source</a><a href=\"#impl-Log-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"log/trait.Log.html\" title=\"trait log::Log\">Log</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"log/trait.Log.html\" title=\"trait log::Log\">Log</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.enabled\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/log/lib.rs.html#1255\">source</a><a href=\"#method.enabled\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"log/trait.Log.html#tymethod.enabled\" class=\"fn\">enabled</a>(&amp;self, metadata: &amp;<a class=\"struct\" href=\"log/struct.Metadata.html\" title=\"struct log::Metadata\">Metadata</a>&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Determines if a log message with the specified metadata would be\nlogged. <a href=\"log/trait.Log.html#tymethod.enabled\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.log\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/log/lib.rs.html#1259\">source</a><a href=\"#method.log\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"log/trait.Log.html#tymethod.log\" class=\"fn\">log</a>(&amp;self, record: &amp;<a class=\"struct\" href=\"log/struct.Record.html\" title=\"struct log::Record\">Record</a>&lt;'_&gt;)</h4></section></summary><div class='docblock'>Logs the <code>Record</code>. <a href=\"log/trait.Log.html#tymethod.log\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/log/lib.rs.html#1262\">source</a><a href=\"#method.flush\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"log/trait.Log.html#tymethod.flush\" class=\"fn\">flush</a>(&amp;self)</h4></section></summary><div class='docblock'>Flushes any buffered records. <a href=\"log/trait.Log.html#tymethod.flush\">Read more</a></div></details></div></details>","Log","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MakeWriter%3C'a%3E-for-Arc%3CW%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/fmt/writer.rs.html#687-689\">source</a><a href=\"#impl-MakeWriter%3C'a%3E-for-Arc%3CW%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, W&gt; <a class=\"trait\" href=\"tracing_subscriber/fmt/writer/trait.MakeWriter.html\" title=\"trait tracing_subscriber::fmt::writer::MakeWriter\">MakeWriter</a>&lt;'a&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;W&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a W</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a> + 'a,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Writer\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/fmt/writer.rs.html#691\">source</a><a href=\"#associatedtype.Writer\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"tracing_subscriber/fmt/writer/trait.MakeWriter.html#associatedtype.Writer\" class=\"associatedtype\">Writer</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a W</a></h4></section></summary><div class='docblock'>The concrete <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html\" title=\"trait std::io::Write\"><code>io::Write</code></a> implementation returned by <a href=\"tracing_subscriber/fmt/writer/trait.MakeWriter.html#tymethod.make_writer\" title=\"method tracing_subscriber::fmt::writer::MakeWriter::make_writer\"><code>make_writer</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.make_writer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/fmt/writer.rs.html#692\">source</a><a href=\"#method.make_writer\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_subscriber/fmt/writer/trait.MakeWriter.html#tymethod.make_writer\" class=\"fn\">make_writer</a>(&amp;'a self) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;W&gt; as <a class=\"trait\" href=\"tracing_subscriber/fmt/writer/trait.MakeWriter.html\" title=\"trait tracing_subscriber::fmt::writer::MakeWriter\">MakeWriter</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"tracing_subscriber/fmt/writer/trait.MakeWriter.html#associatedtype.Writer\" title=\"type tracing_subscriber::fmt::writer::MakeWriter::Writer\">Writer</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&lt;Arc&lt;W&gt; as MakeWriter&lt;&#39;a&gt;&gt;::Writer\">โ</a></h4></section></summary><div class='docblock'>Returns an instance of <a href=\"tracing_subscriber/fmt/writer/trait.MakeWriter.html#associatedtype.Writer\" title=\"associated type tracing_subscriber::fmt::writer::MakeWriter::Writer\"><code>Writer</code></a>. <a href=\"tracing_subscriber/fmt/writer/trait.MakeWriter.html#tymethod.make_writer\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.make_writer_for\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/fmt/writer.rs.html#205\">source</a><a href=\"#method.make_writer_for\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_subscriber/fmt/writer/trait.MakeWriter.html#method.make_writer_for\" class=\"fn\">make_writer_for</a>(&amp;'a self, meta: &amp;<a class=\"struct\" href=\"tracing_core/metadata/struct.Metadata.html\" title=\"struct tracing_core::metadata::Metadata\">Metadata</a>&lt;'_&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"tracing_subscriber/fmt/writer/trait.MakeWriter.html#associatedtype.Writer\" title=\"type tracing_subscriber::fmt::writer::MakeWriter::Writer\">Writer</a></h4></section></summary><div class='docblock'>Returns a <a href=\"tracing_subscriber/fmt/writer/trait.MakeWriter.html#associatedtype.Writer\" title=\"associated type tracing_subscriber::fmt::writer::MakeWriter::Writer\"><code>Writer</code></a> for writing data from the span or event described\nby the provided <a href=\"tracing_core/metadata/struct.Metadata.html\" title=\"struct tracing_core::metadata::Metadata\"><code>Metadata</code></a>. <a href=\"tracing_subscriber/fmt/writer/trait.MakeWriter.html#method.make_writer_for\">Read more</a></div></details></div></details>","MakeWriter<'a>","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/max_encoded_len.rs.html#119\">source</a><a href=\"#impl-MaxEncodedLen-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"parity_scale_codec/max_encoded_len/trait.MaxEncodedLen.html\" title=\"trait parity_scale_codec::max_encoded_len::MaxEncodedLen\">MaxEncodedLen</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"parity_scale_codec/max_encoded_len/trait.MaxEncodedLen.html\" title=\"trait parity_scale_codec::max_encoded_len::MaxEncodedLen\">MaxEncodedLen</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/max_encoded_len.rs.html#120\">source</a><a href=\"#method.max_encoded_len\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"parity_scale_codec/max_encoded_len/trait.MaxEncodedLen.html#tymethod.max_encoded_len\" class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Middleware-for-Arc%3CU%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#impl-Middleware-for-Arc%3CU%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;U&gt; <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &lt;U as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a></h4></section></summary><div class='docblock'>Error type returned by most operations</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Provider\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#associatedtype.Provider\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Provider\" class=\"associatedtype\">Provider</a> = &lt;U as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Provider\" title=\"type ethers_providers::middleware::Middleware::Provider\">Provider</a></h4></section></summary><div class='docblock'>The JSON-RPC client type at the bottom of the stack</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#associatedtype.Inner\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = &lt;U as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Inner\" title=\"type ethers_providers::middleware::Middleware::Inner\">Inner</a></h4></section></summary><div class='docblock'>The next-lower middleware in the middleware stack</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.inner\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Inner\" title=\"type ethers_providers::middleware::Middleware::Inner\">Inner</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&lt;Arc&lt;U&gt; as Middleware&gt;::Inner\">โ</a></h4></section></summary><div class='docblock'>Get a reference to the next-lower middleware in the middleware stack</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.convert_err\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.convert_err\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.convert_err\" class=\"fn\">convert_err</a>(p: <a class=\"enum\" href=\"ethers_providers/errors/enum.ProviderError.html\" title=\"enum ethers_providers::errors::ProviderError\">ProviderError</a>) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&lt;Arc&lt;U&gt; as Middleware&gt;::Error\">โ</a></h4></section></summary><div class='docblock'>Convert a provider error into the associated error type by successively\nconverting it to every intermediate middleware error</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.provider\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.provider\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.provider\" class=\"fn\">provider</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"ethers_providers/rpc/provider/struct.Provider.html\" title=\"struct ethers_providers::rpc::provider::Provider\">Provider</a>&lt;&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Provider\" title=\"type ethers_providers::middleware::Middleware::Provider\">Provider</a>&gt;</h4></section></summary><div class='docblock'>The HTTP or Websocket provider.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_sender\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.default_sender\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.default_sender\" class=\"fn\">default_sender</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"primitive_types/struct.H160.html\" title=\"struct primitive_types::H160\">H160</a>&gt;</h4></section></summary><div class='docblock'>Return the default sender (if any). This will typically be the\nconnected nodeโs first address, or the address of a Signer in a lower\nmiddleware stack</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.client_version\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.client_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.client_version\" class=\"fn\">client_version</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Returns the current client version using the <code>web3_clientVersion</code> RPC.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fill_transaction\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.fill_transaction\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.fill_transaction\" class=\"fn\">fill_transaction</a>&lt;'life0, 'life1, 'async_trait&gt;(\n    &amp;'life0 self,\n    tx: &amp;'life1 mut <a class=\"enum\" href=\"ethers_core/types/transaction/eip2718/enum.TypedTransaction.html\" title=\"enum ethers_core::types::transaction::eip2718::TypedTransaction\">TypedTransaction</a>,\n    block: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"ethers_core/types/block/enum.BlockId.html\" title=\"enum ethers_core::types::block::BlockId\">BlockId</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Fill necessary details of a transaction for dispatch <a href=\"ethers_providers/middleware/trait.Middleware.html#method.fill_transaction\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_block_number\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.get_block_number\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.get_block_number\" class=\"fn\">get_block_number</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ethereum_types/uint/struct.U64.html\" title=\"struct ethereum_types::uint::U64\">U64</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Get the block number</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_header\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.get_header\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.get_header\" class=\"fn\">get_header</a>&lt;'life0, 'async_trait, T&gt;(\n    &amp;'life0 self,\n    block_hash_or_number: T,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"ethers_core/types/block/struct.Block.html\" title=\"struct ethers_core::types::block::Block\">Block</a>&lt;<a class=\"struct\" href=\"ethers_core/types/transaction/response/struct.Transaction.html\" title=\"struct ethers_core::types::transaction::response::Transaction\">Transaction</a>&gt;&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    T: 'async_trait + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"ethers_core/types/block/enum.BlockId.html\" title=\"enum ethers_core::types::block::BlockId\">BlockId</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Get the block header by number or hash</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_transaction\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.send_transaction\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.send_transaction\" class=\"fn\">send_transaction</a>&lt;'life0, 'async_trait, T&gt;(\n    &amp;'life0 self,\n    tx: T,\n    block: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"ethers_core/types/block/enum.BlockId.html\" title=\"enum ethers_core::types::block::BlockId\">BlockId</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ethers_providers/toolbox/pending_transaction/struct.PendingTransaction.html\" title=\"struct ethers_providers::toolbox::pending_transaction::PendingTransaction\">PendingTransaction</a>&lt;'life0, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Provider\" title=\"type ethers_providers::middleware::Middleware::Provider\">Provider</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    T: 'async_trait + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"ethers_core/types/transaction/eip2718/enum.TypedTransaction.html\" title=\"enum ethers_core::types::transaction::eip2718::TypedTransaction\">TypedTransaction</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Sends the transaction to the entire Ethereum network and returns the\ntransactionโs hash. This will consume gas from the account that signed\nthe transaction. This call will fail if no signer is available, and the\nRPC node does  not have an unlocked accounts</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_escalating\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.send_escalating\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.send_escalating\" class=\"fn\">send_escalating</a>&lt;'a, 'life0, 'async_trait&gt;(\n    &amp;'a self,\n    tx: &amp;'life0 <a class=\"enum\" href=\"ethers_core/types/transaction/eip2718/enum.TypedTransaction.html\" title=\"enum ethers_core::types::transaction::eip2718::TypedTransaction\">TypedTransaction</a>,\n    escalations: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    policy: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"primitive_types/struct.U256.html\" title=\"struct primitive_types::U256\">U256</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"primitive_types/struct.U256.html\" title=\"struct primitive_types::U256\">U256</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ethers_providers/toolbox/pending_escalator/struct.EscalatingPending.html\" title=\"struct ethers_providers::toolbox::pending_escalator::EscalatingPending\">EscalatingPending</a>&lt;'a, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Provider\" title=\"type ethers_providers::middleware::Middleware::Provider\">Provider</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'a: 'async_trait,\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Send a transaction with a simple escalation policy. <a href=\"ethers_providers/middleware/trait.Middleware.html#method.send_escalating\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resolve_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.resolve_name\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.resolve_name\" class=\"fn\">resolve_name</a>&lt;'life0, 'life1, 'async_trait&gt;(\n    &amp;'life0 self,\n    ens_name: &amp;'life1 <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"primitive_types/struct.H160.html\" title=\"struct primitive_types::H160\">H160</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Returns the address that the <code>ens_name</code> resolves to (or None if not configured). <a href=\"ethers_providers/middleware/trait.Middleware.html#method.resolve_name\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_address\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.lookup_address\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.lookup_address\" class=\"fn\">lookup_address</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    address: <a class=\"struct\" href=\"primitive_types/struct.H160.html\" title=\"struct primitive_types::H160\">H160</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Returns the ENS name the <code>address</code> resolves to (or None if not configured). <a href=\"ethers_providers/middleware/trait.Middleware.html#method.lookup_address\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resolve_avatar\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.resolve_avatar\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.resolve_avatar\" class=\"fn\">resolve_avatar</a>&lt;'life0, 'life1, 'async_trait&gt;(\n    &amp;'life0 self,\n    ens_name: &amp;'life1 <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"url/struct.Url.html\" title=\"struct url::Url\">Url</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Returns the avatar HTTP link of the avatar that the <code>ens_name</code> resolves to (or None\nif not configured) <a href=\"ethers_providers/middleware/trait.Middleware.html#method.resolve_avatar\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resolve_nft\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.resolve_nft\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.resolve_nft\" class=\"fn\">resolve_nft</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    token: <a class=\"struct\" href=\"ethers_providers/ext/erc/struct.ERCNFT.html\" title=\"struct ethers_providers::ext::erc::ERCNFT\">ERCNFT</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"url/struct.Url.html\" title=\"struct url::Url\">Url</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Returns the URL (not necesserily HTTP) of the image behind a token. <a href=\"ethers_providers/middleware/trait.Middleware.html#method.resolve_nft\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resolve_field\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.resolve_field\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.resolve_field\" class=\"fn\">resolve_field</a>&lt;'life0, 'life1, 'life2, 'async_trait&gt;(\n    &amp;'life0 self,\n    ens_name: &amp;'life1 <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    field: &amp;'life2 <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    'life2: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Fetch a field for the <code>ens_name</code> (no None if not configured). <a href=\"ethers_providers/middleware/trait.Middleware.html#method.resolve_field\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_block\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.get_block\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.get_block\" class=\"fn\">get_block</a>&lt;'life0, 'async_trait, T&gt;(\n    &amp;'life0 self,\n    block_hash_or_number: T,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"ethers_core/types/block/struct.Block.html\" title=\"struct ethers_core::types::block::Block\">Block</a>&lt;<a class=\"struct\" href=\"primitive_types/struct.H256.html\" title=\"struct primitive_types::H256\">H256</a>&gt;&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    T: 'async_trait + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"ethers_core/types/block/enum.BlockId.html\" title=\"enum ethers_core::types::block::BlockId\">BlockId</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Gets the block at <code>block_hash_or_number</code> (transaction hashes only)</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_block_with_txs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.get_block_with_txs\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.get_block_with_txs\" class=\"fn\">get_block_with_txs</a>&lt;'life0, 'async_trait, T&gt;(\n    &amp;'life0 self,\n    block_hash_or_number: T,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"ethers_core/types/block/struct.Block.html\" title=\"struct ethers_core::types::block::Block\">Block</a>&lt;<a class=\"struct\" href=\"ethers_core/types/transaction/response/struct.Transaction.html\" title=\"struct ethers_core::types::transaction::response::Transaction\">Transaction</a>&gt;&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    T: 'async_trait + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"ethers_core/types/block/enum.BlockId.html\" title=\"enum ethers_core::types::block::BlockId\">BlockId</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Gets the block at <code>block_hash_or_number</code> (full transactions included)</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_uncle_count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.get_uncle_count\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.get_uncle_count\" class=\"fn\">get_uncle_count</a>&lt;'life0, 'async_trait, T&gt;(\n    &amp;'life0 self,\n    block_hash_or_number: T,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"primitive_types/struct.U256.html\" title=\"struct primitive_types::U256\">U256</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    T: 'async_trait + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"ethers_core/types/block/enum.BlockId.html\" title=\"enum ethers_core::types::block::BlockId\">BlockId</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Gets the block uncle count at <code>block_hash_or_number</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_uncle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.get_uncle\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.get_uncle\" class=\"fn\">get_uncle</a>&lt;'life0, 'async_trait, T&gt;(\n    &amp;'life0 self,\n    block_hash_or_number: T,\n    idx: <a class=\"struct\" href=\"ethereum_types/uint/struct.U64.html\" title=\"struct ethereum_types::uint::U64\">U64</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"ethers_core/types/block/struct.Block.html\" title=\"struct ethers_core::types::block::Block\">Block</a>&lt;<a class=\"struct\" href=\"primitive_types/struct.H256.html\" title=\"struct primitive_types::H256\">H256</a>&gt;&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    T: 'async_trait + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"ethers_core/types/block/enum.BlockId.html\" title=\"enum ethers_core::types::block::BlockId\">BlockId</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Gets the block uncle at <code>block_hash_or_number</code> and <code>idx</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_transaction_count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.get_transaction_count\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.get_transaction_count\" class=\"fn\">get_transaction_count</a>&lt;'life0, 'async_trait, T&gt;(\n    &amp;'life0 self,\n    from: T,\n    block: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"ethers_core/types/block/enum.BlockId.html\" title=\"enum ethers_core::types::block::BlockId\">BlockId</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"primitive_types/struct.U256.html\" title=\"struct primitive_types::U256\">U256</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    T: 'async_trait + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"ethers_core/types/ens/enum.NameOrAddress.html\" title=\"enum ethers_core::types::ens::NameOrAddress\">NameOrAddress</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Returns the nonce of the address</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.estimate_gas\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.estimate_gas\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.estimate_gas\" class=\"fn\">estimate_gas</a>&lt;'life0, 'life1, 'async_trait&gt;(\n    &amp;'life0 self,\n    tx: &amp;'life1 <a class=\"enum\" href=\"ethers_core/types/transaction/eip2718/enum.TypedTransaction.html\" title=\"enum ethers_core::types::transaction::eip2718::TypedTransaction\">TypedTransaction</a>,\n    block: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"ethers_core/types/block/enum.BlockId.html\" title=\"enum ethers_core::types::block::BlockId\">BlockId</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"primitive_types/struct.U256.html\" title=\"struct primitive_types::U256\">U256</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Sends a transaction to a single Ethereum node and return the estimated amount of gas\nrequired (as a U256) to send it This is free, but only an estimate. Providing too little\ngas will result in a transaction being rejected (while still consuming all provided\ngas).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.call\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.call\" class=\"fn\">call</a>&lt;'life0, 'life1, 'async_trait&gt;(\n    &amp;'life0 self,\n    tx: &amp;'life1 <a class=\"enum\" href=\"ethers_core/types/transaction/eip2718/enum.TypedTransaction.html\" title=\"enum ethers_core::types::transaction::eip2718::TypedTransaction\">TypedTransaction</a>,\n    block: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"ethers_core/types/block/enum.BlockId.html\" title=\"enum ethers_core::types::block::BlockId\">BlockId</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ethers_core/types/bytes/struct.Bytes.html\" title=\"struct ethers_core::types::bytes::Bytes\">Bytes</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Sends the read-only (constant) transaction to a single Ethereum node and return the result\n(as bytes) of executing it. This is free, since it does not change any state on the\nblockchain.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.syncing\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.syncing\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.syncing\" class=\"fn\">syncing</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"ethers_core/types/syncing/enum.SyncingStatus.html\" title=\"enum ethers_core::types::syncing::SyncingStatus\">SyncingStatus</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Return current client syncing status. If IsFalse sync is over.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_chainid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.get_chainid\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.get_chainid\" class=\"fn\">get_chainid</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"primitive_types/struct.U256.html\" title=\"struct primitive_types::U256\">U256</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Returns the currently configured chain id, a value used in replay-protected\ntransaction signing as introduced by EIP-155.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_net_version\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.get_net_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.get_net_version\" class=\"fn\">get_net_version</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Returns the network version.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_balance\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.get_balance\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.get_balance\" class=\"fn\">get_balance</a>&lt;'life0, 'async_trait, T&gt;(\n    &amp;'life0 self,\n    from: T,\n    block: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"ethers_core/types/block/enum.BlockId.html\" title=\"enum ethers_core::types::block::BlockId\">BlockId</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"primitive_types/struct.U256.html\" title=\"struct primitive_types::U256\">U256</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    T: 'async_trait + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"ethers_core/types/ens/enum.NameOrAddress.html\" title=\"enum ethers_core::types::ens::NameOrAddress\">NameOrAddress</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Returns the accountโs balance</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_transaction\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.get_transaction\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.get_transaction\" class=\"fn\">get_transaction</a>&lt;'life0, 'async_trait, T&gt;(\n    &amp;'life0 self,\n    transaction_hash: T,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"ethers_core/types/transaction/response/struct.Transaction.html\" title=\"struct ethers_core::types::transaction::response::Transaction\">Transaction</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    T: 'async_trait + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"primitive_types/struct.H256.html\" title=\"struct primitive_types::H256\">H256</a>&gt;,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Gets the transaction with <code>transaction_hash</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_transaction_by_block_and_index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.get_transaction_by_block_and_index\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.get_transaction_by_block_and_index\" class=\"fn\">get_transaction_by_block_and_index</a>&lt;'life0, 'async_trait, T&gt;(\n    &amp;'life0 self,\n    block_hash_or_number: T,\n    idx: <a class=\"struct\" href=\"ethereum_types/uint/struct.U64.html\" title=\"struct ethereum_types::uint::U64\">U64</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"ethers_core/types/transaction/response/struct.Transaction.html\" title=\"struct ethers_core::types::transaction::response::Transaction\">Transaction</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    T: 'async_trait + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"ethers_core/types/block/enum.BlockId.html\" title=\"enum ethers_core::types::block::BlockId\">BlockId</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Gets the transaction with block and index</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_transaction_receipt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.get_transaction_receipt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.get_transaction_receipt\" class=\"fn\">get_transaction_receipt</a>&lt;'life0, 'async_trait, T&gt;(\n    &amp;'life0 self,\n    transaction_hash: T,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"ethers_core/types/transaction/response/struct.TransactionReceipt.html\" title=\"struct ethers_core::types::transaction::response::TransactionReceipt\">TransactionReceipt</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    T: 'async_trait + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"primitive_types/struct.H256.html\" title=\"struct primitive_types::H256\">H256</a>&gt;,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Gets the transaction receipt with <code>transaction_hash</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_block_receipts\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.get_block_receipts\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.get_block_receipts\" class=\"fn\">get_block_receipts</a>&lt;'life0, 'async_trait, T&gt;(\n    &amp;'life0 self,\n    block: T,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"ethers_core/types/transaction/response/struct.TransactionReceipt.html\" title=\"struct ethers_core::types::transaction::response::TransactionReceipt\">TransactionReceipt</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    T: 'async_trait + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"ethers_core/types/block/enum.BlockNumber.html\" title=\"enum ethers_core::types::block::BlockNumber\">BlockNumber</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Returns all receipts for a block. <a href=\"ethers_providers/middleware/trait.Middleware.html#method.get_block_receipts\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_gas_price\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.get_gas_price\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.get_gas_price\" class=\"fn\">get_gas_price</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"primitive_types/struct.U256.html\" title=\"struct primitive_types::U256\">U256</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Gets the current gas price as estimated by the node</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.estimate_eip1559_fees\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.estimate_eip1559_fees\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.estimate_eip1559_fees\" class=\"fn\">estimate_eip1559_fees</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    estimator: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: <a class=\"struct\" href=\"primitive_types/struct.U256.html\" title=\"struct primitive_types::U256\">U256</a>, _: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"primitive_types/struct.U256.html\" title=\"struct primitive_types::U256\">U256</a>&gt;&gt;) -&gt; (<a class=\"struct\" href=\"primitive_types/struct.U256.html\" title=\"struct primitive_types::U256\">U256</a>, <a class=\"struct\" href=\"primitive_types/struct.U256.html\" title=\"struct primitive_types::U256\">U256</a>)&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"struct\" href=\"primitive_types/struct.U256.html\" title=\"struct primitive_types::U256\">U256</a>, <a class=\"struct\" href=\"primitive_types/struct.U256.html\" title=\"struct primitive_types::U256\">U256</a>), &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Gets a heuristic recommendation of max fee per gas and max priority fee per gas for\nEIP-1559 compatible transactions.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_accounts\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.get_accounts\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.get_accounts\" class=\"fn\">get_accounts</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"primitive_types/struct.H160.html\" title=\"struct primitive_types::H160\">H160</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Gets the accounts on the node</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_raw_transaction\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.send_raw_transaction\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.send_raw_transaction\" class=\"fn\">send_raw_transaction</a>&lt;'a, 'async_trait&gt;(\n    &amp;'a self,\n    tx: <a class=\"struct\" href=\"ethers_core/types/bytes/struct.Bytes.html\" title=\"struct ethers_core::types::bytes::Bytes\">Bytes</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ethers_providers/toolbox/pending_transaction/struct.PendingTransaction.html\" title=\"struct ethers_providers::toolbox::pending_transaction::PendingTransaction\">PendingTransaction</a>&lt;'a, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Provider\" title=\"type ethers_providers::middleware::Middleware::Provider\">Provider</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'a: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Send the raw RLP encoded transaction to the entire Ethereum network and returns the\ntransactionโs hash This will consume gas from the account that signed the transaction.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_signer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.is_signer\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.is_signer\" class=\"fn\">is_signer</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>This returns true if either the middleware stack contains a <code>SignerMiddleware</code>, or the\nJSON-RPC provider has an unlocked key that can sign using the <code>eth_sign</code> call. If none of\nthe above conditions are met, then the middleware stack is not capable of signing data.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.sign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.sign\" class=\"fn\">sign</a>&lt;'life0, 'life1, 'async_trait, T&gt;(\n    &amp;'life0 self,\n    data: T,\n    from: &amp;'life1 <a class=\"struct\" href=\"primitive_types/struct.H160.html\" title=\"struct primitive_types::H160\">H160</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ethers_core/types/signature/struct.Signature.html\" title=\"struct ethers_core::types::signature::Signature\">Signature</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    T: 'async_trait + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"ethers_core/types/bytes/struct.Bytes.html\" title=\"struct ethers_core::types::bytes::Bytes\">Bytes</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Signs data using a specific account. This account needs to be unlocked,\nor the middleware stack must contain a <code>SignerMiddleware</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sign_transaction\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.sign_transaction\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.sign_transaction\" class=\"fn\">sign_transaction</a>&lt;'life0, 'life1, 'async_trait&gt;(\n    &amp;'life0 self,\n    tx: &amp;'life1 <a class=\"enum\" href=\"ethers_core/types/transaction/eip2718/enum.TypedTransaction.html\" title=\"enum ethers_core::types::transaction::eip2718::TypedTransaction\">TypedTransaction</a>,\n    from: <a class=\"struct\" href=\"primitive_types/struct.H160.html\" title=\"struct primitive_types::H160\">H160</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ethers_core/types/signature/struct.Signature.html\" title=\"struct ethers_core::types::signature::Signature\">Signature</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Sign a transaction via RPC call</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_logs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.get_logs\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.get_logs\" class=\"fn\">get_logs</a>&lt;'life0, 'life1, 'async_trait&gt;(\n    &amp;'life0 self,\n    filter: &amp;'life1 <a class=\"struct\" href=\"ethers_core/types/filter/struct.Filter.html\" title=\"struct ethers_core::types::filter::Filter\">Filter</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"ethers_core/types/log/struct.Log.html\" title=\"struct ethers_core::types::log::Log\">Log</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Returns an array (possibly empty) of logs that match the filter</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_logs_paginated\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.get_logs_paginated\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.get_logs_paginated\" class=\"fn\">get_logs_paginated</a>&lt;'a&gt;(\n    &amp;'a self,\n    filter: &amp;<a class=\"struct\" href=\"ethers_core/types/filter/struct.Filter.html\" title=\"struct ethers_core::types::filter::Filter\">Filter</a>,\n    page_size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>,\n) -&gt; <a class=\"struct\" href=\"ethers_providers/toolbox/log_query/struct.LogQuery.html\" title=\"struct ethers_providers::toolbox::log_query::LogQuery\">LogQuery</a>&lt;'a, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Provider\" title=\"type ethers_providers::middleware::Middleware::Provider\">Provider</a>&gt;</h4></section></summary><div class='docblock'>Returns a stream of logs are loaded in pages of given page size</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.watch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.watch\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.watch\" class=\"fn\">watch</a>&lt;'a, 'life0, 'async_trait&gt;(\n    &amp;'a self,\n    filter: &amp;'life0 <a class=\"struct\" href=\"ethers_core/types/filter/struct.Filter.html\" title=\"struct ethers_core::types::filter::Filter\">Filter</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ethers_providers/stream/watcher/struct.FilterWatcher.html\" title=\"struct ethers_providers::stream::watcher::FilterWatcher\">FilterWatcher</a>&lt;'a, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Provider\" title=\"type ethers_providers::middleware::Middleware::Provider\">Provider</a>, <a class=\"struct\" href=\"ethers_core/types/log/struct.Log.html\" title=\"struct ethers_core::types::log::Log\">Log</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'a: 'async_trait,\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Streams event logs matching the filter. <a href=\"ethers_providers/middleware/trait.Middleware.html#method.watch\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.watch_pending_transactions\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.watch_pending_transactions\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.watch_pending_transactions\" class=\"fn\">watch_pending_transactions</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ethers_providers/stream/watcher/struct.FilterWatcher.html\" title=\"struct ethers_providers::stream::watcher::FilterWatcher\">FilterWatcher</a>&lt;'life0, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Provider\" title=\"type ethers_providers::middleware::Middleware::Provider\">Provider</a>, <a class=\"struct\" href=\"primitive_types/struct.H256.html\" title=\"struct primitive_types::H256\">H256</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Streams pending transactions. <a href=\"ethers_providers/middleware/trait.Middleware.html#method.watch_pending_transactions\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.watch_blocks\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.watch_blocks\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.watch_blocks\" class=\"fn\">watch_blocks</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ethers_providers/stream/watcher/struct.FilterWatcher.html\" title=\"struct ethers_providers::stream::watcher::FilterWatcher\">FilterWatcher</a>&lt;'life0, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Provider\" title=\"type ethers_providers::middleware::Middleware::Provider\">Provider</a>, <a class=\"struct\" href=\"primitive_types/struct.H256.html\" title=\"struct primitive_types::H256\">H256</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Streams new block hashes <a href=\"ethers_providers/middleware/trait.Middleware.html#method.watch_blocks\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_code\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.get_code\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.get_code\" class=\"fn\">get_code</a>&lt;'life0, 'async_trait, T&gt;(\n    &amp;'life0 self,\n    at: T,\n    block: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"ethers_core/types/block/enum.BlockId.html\" title=\"enum ethers_core::types::block::BlockId\">BlockId</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ethers_core/types/bytes/struct.Bytes.html\" title=\"struct ethers_core::types::bytes::Bytes\">Bytes</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    T: 'async_trait + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"ethers_core/types/ens/enum.NameOrAddress.html\" title=\"enum ethers_core::types::ens::NameOrAddress\">NameOrAddress</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Returns the deployed code at a given address</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_storage_at\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.get_storage_at\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.get_storage_at\" class=\"fn\">get_storage_at</a>&lt;'life0, 'async_trait, T&gt;(\n    &amp;'life0 self,\n    from: T,\n    location: <a class=\"struct\" href=\"primitive_types/struct.H256.html\" title=\"struct primitive_types::H256\">H256</a>,\n    block: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"ethers_core/types/block/enum.BlockId.html\" title=\"enum ethers_core::types::block::BlockId\">BlockId</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"primitive_types/struct.H256.html\" title=\"struct primitive_types::H256\">H256</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    T: 'async_trait + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"ethers_core/types/ens/enum.NameOrAddress.html\" title=\"enum ethers_core::types::ens::NameOrAddress\">NameOrAddress</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Get the storage of an address for a particular slot location</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_proof\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.get_proof\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.get_proof\" class=\"fn\">get_proof</a>&lt;'life0, 'async_trait, T&gt;(\n    &amp;'life0 self,\n    from: T,\n    locations: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"primitive_types/struct.H256.html\" title=\"struct primitive_types::H256\">H256</a>&gt;,\n    block: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"ethers_core/types/block/enum.BlockId.html\" title=\"enum ethers_core::types::block::BlockId\">BlockId</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ethers_core/types/proof/struct.EIP1186ProofResponse.html\" title=\"struct ethers_core::types::proof::EIP1186ProofResponse\">EIP1186ProofResponse</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    T: 'async_trait + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"ethers_core/types/ens/enum.NameOrAddress.html\" title=\"enum ethers_core::types::ens::NameOrAddress\">NameOrAddress</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Returns the EIP-1186 proof response\n<a href=\"https://github.com/ethereum/EIPs/issues/1186\">https://github.com/ethereum/EIPs/issues/1186</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mining\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.mining\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.mining\" class=\"fn\">mining</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Returns an indication if this node is currently mining.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.import_raw_key\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.import_raw_key\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.import_raw_key\" class=\"fn\">import_raw_key</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    private_key: <a class=\"struct\" href=\"ethers_core/types/bytes/struct.Bytes.html\" title=\"struct ethers_core::types::bytes::Bytes\">Bytes</a>,\n    passphrase: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"primitive_types/struct.H160.html\" title=\"struct primitive_types::H160\">H160</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Sends the given key to the node to be encrypted with the provided\npassphrase and stored. <a href=\"ethers_providers/middleware/trait.Middleware.html#method.import_raw_key\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unlock_account\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.unlock_account\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.unlock_account\" class=\"fn\">unlock_account</a>&lt;'life0, 'async_trait, T&gt;(\n    &amp;'life0 self,\n    account: T,\n    passphrase: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>,\n    duration: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    T: 'async_trait + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"primitive_types/struct.H160.html\" title=\"struct primitive_types::H160\">H160</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Prompts the node to decrypt the given account from its keystore. <a href=\"ethers_providers/middleware/trait.Middleware.html#method.unlock_account\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_peer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.add_peer\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.add_peer\" class=\"fn\">add_peer</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    enode_url: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Requests adding the given peer, returning a boolean representing\nwhether or not the peer was accepted for tracking.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_trusted_peer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.add_trusted_peer\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.add_trusted_peer\" class=\"fn\">add_trusted_peer</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    enode_url: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Requests adding the given peer as a trusted peer, which the node will\nalways connect to even when its peer slots are full.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.node_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.node_info\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.node_info\" class=\"fn\">node_info</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ethers_providers/ext/admin/struct.NodeInfo.html\" title=\"struct ethers_providers::ext::admin::NodeInfo\">NodeInfo</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Returns general information about the node as well as information about the running p2p\nprotocols (e.g. <code>eth</code>, <code>snap</code>).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peers\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.peers\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.peers\" class=\"fn\">peers</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"ethers_providers/ext/admin/struct.PeerInfo.html\" title=\"struct ethers_providers::ext::admin::PeerInfo\">PeerInfo</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Returns the list of peers currently connected to the node.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_peer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.remove_peer\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.remove_peer\" class=\"fn\">remove_peer</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    enode_url: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Requests to remove the given peer, returning true if the enode was successfully parsed and\nthe peer was removed.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_trusted_peer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.remove_trusted_peer\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.remove_trusted_peer\" class=\"fn\">remove_trusted_peer</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    enode_url: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Requests to remove the given peer, returning a boolean representing whether or not the\nenode url passed was validated. A return value of <code>true</code> does not necessarily mean that the\npeer was disconnected.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.start_mining\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.start_mining\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.start_mining\" class=\"fn\">start_mining</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Starts the miner.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stop_mining\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.stop_mining\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.stop_mining\" class=\"fn\">stop_mining</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Stop terminates the miner, both at the consensus engine level as well as at\nthe block creation level.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.txpool_content\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.txpool_content\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.txpool_content\" class=\"fn\">txpool_content</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ethers_core/types/txpool/struct.TxpoolContent.html\" title=\"struct ethers_core::types::txpool::TxpoolContent\">TxpoolContent</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Returns the details of all transactions currently pending for inclusion in the next\nblock(s), as well as the ones that are being scheduled for future execution only.\nRef: <a href=\"https://geth.ethereum.org/docs/rpc/ns-txpool#txpool_content\">Here</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.txpool_inspect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.txpool_inspect\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.txpool_inspect\" class=\"fn\">txpool_inspect</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ethers_core/types/txpool/struct.TxpoolInspect.html\" title=\"struct ethers_core::types::txpool::TxpoolInspect\">TxpoolInspect</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Returns a summary of all the transactions currently pending for inclusion in the next\nblock(s), as well as the ones that are being scheduled for future execution only.\nRef: <a href=\"https://geth.ethereum.org/docs/rpc/ns-txpool#txpool_inspect\">Here</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.txpool_status\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.txpool_status\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.txpool_status\" class=\"fn\">txpool_status</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ethers_core/types/txpool/struct.TxpoolStatus.html\" title=\"struct ethers_core::types::txpool::TxpoolStatus\">TxpoolStatus</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Returns the number of transactions currently pending for inclusion in the next block(s), as\nwell as the ones that are being scheduled for future execution only.\nRef: <a href=\"https://geth.ethereum.org/docs/rpc/ns-txpool#txpool_status\">Here</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.debug_trace_transaction\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.debug_trace_transaction\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.debug_trace_transaction\" class=\"fn\">debug_trace_transaction</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    tx_hash: <a class=\"struct\" href=\"primitive_types/struct.H256.html\" title=\"struct primitive_types::H256\">H256</a>,\n    trace_options: <a class=\"struct\" href=\"ethers_core/types/trace/geth/struct.GethDebugTracingOptions.html\" title=\"struct ethers_core::types::trace::geth::GethDebugTracingOptions\">GethDebugTracingOptions</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"ethers_core/types/trace/geth/enum.GethTrace.html\" title=\"enum ethers_core::types::trace::geth::GethTrace\">GethTrace</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>After replaying any previous transactions in the same block,\nReplays a transaction, returning the traces configured with passed options</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.debug_trace_call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.debug_trace_call\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.debug_trace_call\" class=\"fn\">debug_trace_call</a>&lt;'life0, 'async_trait, T&gt;(\n    &amp;'life0 self,\n    req: T,\n    block: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"ethers_core/types/block/enum.BlockId.html\" title=\"enum ethers_core::types::block::BlockId\">BlockId</a>&gt;,\n    trace_options: <a class=\"struct\" href=\"ethers_core/types/trace/geth/struct.GethDebugTracingCallOptions.html\" title=\"struct ethers_core::types::trace::geth::GethDebugTracingCallOptions\">GethDebugTracingCallOptions</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"ethers_core/types/trace/geth/enum.GethTrace.html\" title=\"enum ethers_core::types::trace::geth::GethTrace\">GethTrace</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    T: 'async_trait + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"ethers_core/types/transaction/eip2718/enum.TypedTransaction.html\" title=\"enum ethers_core::types::transaction::eip2718::TypedTransaction\">TypedTransaction</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Executes the given call and returns a number of possible traces for it</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.debug_trace_block_by_number\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.debug_trace_block_by_number\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.debug_trace_block_by_number\" class=\"fn\">debug_trace_block_by_number</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    block: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"ethers_core/types/block/enum.BlockNumber.html\" title=\"enum ethers_core::types::block::BlockNumber\">BlockNumber</a>&gt;,\n    trace_options: <a class=\"struct\" href=\"ethers_core/types/trace/geth/struct.GethDebugTracingOptions.html\" title=\"struct ethers_core::types::trace::geth::GethDebugTracingOptions\">GethDebugTracingOptions</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"ethers_core/types/trace/geth/enum.GethTrace.html\" title=\"enum ethers_core::types::trace::geth::GethTrace\">GethTrace</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Replays all transactions in a given block (specified by block number) and returns the traces\nconfigured with passed options\nRef:\n<a href=\"https://geth.ethereum.org/docs/interacting-with-geth/rpc/ns-debug#debugtraceblockbynumber\">Here</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.debug_trace_block_by_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.debug_trace_block_by_hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.debug_trace_block_by_hash\" class=\"fn\">debug_trace_block_by_hash</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    block: <a class=\"struct\" href=\"primitive_types/struct.H256.html\" title=\"struct primitive_types::H256\">H256</a>,\n    trace_options: <a class=\"struct\" href=\"ethers_core/types/trace/geth/struct.GethDebugTracingOptions.html\" title=\"struct ethers_core::types::trace::geth::GethDebugTracingOptions\">GethDebugTracingOptions</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"ethers_core/types/trace/geth/enum.GethTrace.html\" title=\"enum ethers_core::types::trace::geth::GethTrace\">GethTrace</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Replays all transactions in a given block (specified by block hash) and returns the traces\nconfigured with passed options\nRef:\n<a href=\"https://geth.ethereum.org/docs/interacting-with-geth/rpc/ns-debug#debugtraceblockbyhash\">Here</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trace_call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.trace_call\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.trace_call\" class=\"fn\">trace_call</a>&lt;'life0, 'async_trait, T&gt;(\n    &amp;'life0 self,\n    req: T,\n    trace_type: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"ethers_core/types/trace/enum.TraceType.html\" title=\"enum ethers_core::types::trace::TraceType\">TraceType</a>&gt;,\n    block: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"ethers_core/types/block/enum.BlockNumber.html\" title=\"enum ethers_core::types::block::BlockNumber\">BlockNumber</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ethers_core/types/trace/struct.BlockTrace.html\" title=\"struct ethers_core::types::trace::BlockTrace\">BlockTrace</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    T: 'async_trait + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"ethers_core/types/transaction/eip2718/enum.TypedTransaction.html\" title=\"enum ethers_core::types::transaction::eip2718::TypedTransaction\">TypedTransaction</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Executes the given call and returns a number of possible traces for it</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trace_call_many\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.trace_call_many\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.trace_call_many\" class=\"fn\">trace_call_many</a>&lt;'life0, 'async_trait, T&gt;(\n    &amp;'life0 self,\n    req: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(T, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"ethers_core/types/trace/enum.TraceType.html\" title=\"enum ethers_core::types::trace::TraceType\">TraceType</a>&gt;)&gt;,\n    block: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"ethers_core/types/block/enum.BlockNumber.html\" title=\"enum ethers_core::types::block::BlockNumber\">BlockNumber</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"ethers_core/types/trace/struct.BlockTrace.html\" title=\"struct ethers_core::types::trace::BlockTrace\">BlockTrace</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    T: 'async_trait + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"ethers_core/types/transaction/eip2718/enum.TypedTransaction.html\" title=\"enum ethers_core::types::transaction::eip2718::TypedTransaction\">TypedTransaction</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Executes given calls and returns a number of possible traces for each\ncall</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trace_raw_transaction\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.trace_raw_transaction\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.trace_raw_transaction\" class=\"fn\">trace_raw_transaction</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    data: <a class=\"struct\" href=\"ethers_core/types/bytes/struct.Bytes.html\" title=\"struct ethers_core::types::bytes::Bytes\">Bytes</a>,\n    trace_type: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"ethers_core/types/trace/enum.TraceType.html\" title=\"enum ethers_core::types::trace::TraceType\">TraceType</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ethers_core/types/trace/struct.BlockTrace.html\" title=\"struct ethers_core::types::trace::BlockTrace\">BlockTrace</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Traces a call to <code>eth_sendRawTransaction</code> without making the call, returning the traces</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trace_replay_transaction\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.trace_replay_transaction\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.trace_replay_transaction\" class=\"fn\">trace_replay_transaction</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    hash: <a class=\"struct\" href=\"primitive_types/struct.H256.html\" title=\"struct primitive_types::H256\">H256</a>,\n    trace_type: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"ethers_core/types/trace/enum.TraceType.html\" title=\"enum ethers_core::types::trace::TraceType\">TraceType</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ethers_core/types/trace/struct.BlockTrace.html\" title=\"struct ethers_core::types::trace::BlockTrace\">BlockTrace</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Replays a transaction, returning the traces</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trace_replay_block_transactions\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.trace_replay_block_transactions\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.trace_replay_block_transactions\" class=\"fn\">trace_replay_block_transactions</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    block: <a class=\"enum\" href=\"ethers_core/types/block/enum.BlockNumber.html\" title=\"enum ethers_core::types::block::BlockNumber\">BlockNumber</a>,\n    trace_type: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"ethers_core/types/trace/enum.TraceType.html\" title=\"enum ethers_core::types::trace::TraceType\">TraceType</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"ethers_core/types/trace/struct.BlockTrace.html\" title=\"struct ethers_core::types::trace::BlockTrace\">BlockTrace</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Replays all transactions in a block returning the requested traces for each transaction</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trace_block\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.trace_block\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.trace_block\" class=\"fn\">trace_block</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    block: <a class=\"enum\" href=\"ethers_core/types/block/enum.BlockNumber.html\" title=\"enum ethers_core::types::block::BlockNumber\">BlockNumber</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"ethers_core/types/trace/filter/struct.Trace.html\" title=\"struct ethers_core::types::trace::filter::Trace\">Trace</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Returns traces created at given block</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trace_filter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.trace_filter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.trace_filter\" class=\"fn\">trace_filter</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    filter: <a class=\"struct\" href=\"ethers_core/types/trace/filter/struct.TraceFilter.html\" title=\"struct ethers_core::types::trace::filter::TraceFilter\">TraceFilter</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"ethers_core/types/trace/filter/struct.Trace.html\" title=\"struct ethers_core::types::trace::filter::Trace\">Trace</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Return traces matching the given filter</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trace_get\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.trace_get\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.trace_get\" class=\"fn\">trace_get</a>&lt;'life0, 'async_trait, T&gt;(\n    &amp;'life0 self,\n    hash: <a class=\"struct\" href=\"primitive_types/struct.H256.html\" title=\"struct primitive_types::H256\">H256</a>,\n    index: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ethers_core/types/trace/filter/struct.Trace.html\" title=\"struct ethers_core::types::trace::filter::Trace\">Trace</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    T: 'async_trait + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"ethereum_types/uint/struct.U64.html\" title=\"struct ethereum_types::uint::U64\">U64</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Returns trace at the given position</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trace_transaction\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.trace_transaction\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.trace_transaction\" class=\"fn\">trace_transaction</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    hash: <a class=\"struct\" href=\"primitive_types/struct.H256.html\" title=\"struct primitive_types::H256\">H256</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"ethers_core/types/trace/filter/struct.Trace.html\" title=\"struct ethers_core::types::trace::filter::Trace\">Trace</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Returns all traces of a given transaction</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parity_block_receipts\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.parity_block_receipts\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.parity_block_receipts\" class=\"fn\">parity_block_receipts</a>&lt;'life0, 'async_trait, T&gt;(\n    &amp;'life0 self,\n    block: T,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"ethers_core/types/transaction/response/struct.TransactionReceipt.html\" title=\"struct ethers_core::types::transaction::response::TransactionReceipt\">TransactionReceipt</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    T: 'async_trait + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"ethers_core/types/block/enum.BlockNumber.html\" title=\"enum ethers_core::types::block::BlockNumber\">BlockNumber</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Returns all receipts for that block. Must be done on a parity node.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.subscribe_blocks\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.subscribe_blocks\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.subscribe_blocks\" class=\"fn\">subscribe_blocks</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ethers_providers/rpc/pubsub/struct.SubscriptionStream.html\" title=\"struct ethers_providers::rpc::pubsub::SubscriptionStream\">SubscriptionStream</a>&lt;'life0, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Provider\" title=\"type ethers_providers::middleware::Middleware::Provider\">Provider</a>, <a class=\"struct\" href=\"ethers_core/types/block/struct.Block.html\" title=\"struct ethers_core::types::block::Block\">Block</a>&lt;<a class=\"struct\" href=\"primitive_types/struct.H256.html\" title=\"struct primitive_types::H256\">H256</a>&gt;&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Provider\" title=\"type ethers_providers::middleware::Middleware::Provider\">Provider</a>: <a class=\"trait\" href=\"ethers_providers/rpc/pubsub/trait.PubsubClient.html\" title=\"trait ethers_providers::rpc::pubsub::PubsubClient\">PubsubClient</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Subscribe to a stream of incoming blocks. <a href=\"ethers_providers/middleware/trait.Middleware.html#method.subscribe_blocks\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.subscribe_pending_txs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.subscribe_pending_txs\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.subscribe_pending_txs\" class=\"fn\">subscribe_pending_txs</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ethers_providers/rpc/pubsub/struct.SubscriptionStream.html\" title=\"struct ethers_providers::rpc::pubsub::SubscriptionStream\">SubscriptionStream</a>&lt;'life0, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Provider\" title=\"type ethers_providers::middleware::Middleware::Provider\">Provider</a>, <a class=\"struct\" href=\"primitive_types/struct.H256.html\" title=\"struct primitive_types::H256\">H256</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Provider\" title=\"type ethers_providers::middleware::Middleware::Provider\">Provider</a>: <a class=\"trait\" href=\"ethers_providers/rpc/pubsub/trait.PubsubClient.html\" title=\"trait ethers_providers::rpc::pubsub::PubsubClient\">PubsubClient</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Subscribe to a stream of pending transaction hashes. <a href=\"ethers_providers/middleware/trait.Middleware.html#method.subscribe_pending_txs\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.subscribe_full_pending_txs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.subscribe_full_pending_txs\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.subscribe_full_pending_txs\" class=\"fn\">subscribe_full_pending_txs</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ethers_providers/rpc/pubsub/struct.SubscriptionStream.html\" title=\"struct ethers_providers::rpc::pubsub::SubscriptionStream\">SubscriptionStream</a>&lt;'life0, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Provider\" title=\"type ethers_providers::middleware::Middleware::Provider\">Provider</a>, <a class=\"struct\" href=\"ethers_core/types/transaction/response/struct.Transaction.html\" title=\"struct ethers_core::types::transaction::response::Transaction\">Transaction</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Provider\" title=\"type ethers_providers::middleware::Middleware::Provider\">Provider</a>: <a class=\"trait\" href=\"ethers_providers/rpc/pubsub/trait.PubsubClient.html\" title=\"trait ethers_providers::rpc::pubsub::PubsubClient\">PubsubClient</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Subscribe to a stream of pending transaction bodies. <a href=\"ethers_providers/middleware/trait.Middleware.html#method.subscribe_full_pending_txs\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.subscribe_logs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.subscribe_logs\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.subscribe_logs\" class=\"fn\">subscribe_logs</a>&lt;'a, 'life0, 'async_trait&gt;(\n    &amp;'a self,\n    filter: &amp;'life0 <a class=\"struct\" href=\"ethers_core/types/filter/struct.Filter.html\" title=\"struct ethers_core::types::filter::Filter\">Filter</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ethers_providers/rpc/pubsub/struct.SubscriptionStream.html\" title=\"struct ethers_providers::rpc::pubsub::SubscriptionStream\">SubscriptionStream</a>&lt;'a, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Provider\" title=\"type ethers_providers::middleware::Middleware::Provider\">Provider</a>, <a class=\"struct\" href=\"ethers_core/types/log/struct.Log.html\" title=\"struct ethers_core::types::log::Log\">Log</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'a: 'async_trait,\n    'life0: 'async_trait,\n    &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Provider\" title=\"type ethers_providers::middleware::Middleware::Provider\">Provider</a>: <a class=\"trait\" href=\"ethers_providers/rpc/pubsub/trait.PubsubClient.html\" title=\"trait ethers_providers::rpc::pubsub::PubsubClient\">PubsubClient</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Subscribe to a stream of event logs matchin the provided <a href=\"ethers_core/types/filter/struct.Filter.html\" title=\"struct ethers_core::types::filter::Filter\"><code>Filter</code></a>. <a href=\"ethers_providers/middleware/trait.Middleware.html#method.subscribe_logs\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fee_history\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.fee_history\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.fee_history\" class=\"fn\">fee_history</a>&lt;'life0, 'life1, 'async_trait, T&gt;(\n    &amp;'life0 self,\n    block_count: T,\n    last_block: <a class=\"enum\" href=\"ethers_core/types/block/enum.BlockNumber.html\" title=\"enum ethers_core::types::block::BlockNumber\">BlockNumber</a>,\n    reward_percentiles: &amp;'life1 [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>],\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ethers_core/types/fee/struct.FeeHistory.html\" title=\"struct ethers_core::types::fee::FeeHistory\">FeeHistory</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    T: 'async_trait + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"primitive_types/struct.U256.html\" title=\"struct primitive_types::U256\">U256</a>&gt; + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Query the node for a <a href=\"ethers_core/types/fee/struct.FeeHistory.html\" title=\"struct ethers_core::types::fee::FeeHistory\"><code>FeeHistory</code></a> object. This objct contains\ninformation about the EIP-1559 base fee in past blocks, as well as gas\nutilization within those blocks. <a href=\"ethers_providers/middleware/trait.Middleware.html#method.fee_history\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_access_list\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ethers_providers/middleware.rs.html#86\">source</a><a href=\"#method.create_access_list\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ethers_providers/middleware/trait.Middleware.html#method.create_access_list\" class=\"fn\">create_access_list</a>&lt;'life0, 'life1, 'async_trait&gt;(\n    &amp;'life0 self,\n    tx: &amp;'life1 <a class=\"enum\" href=\"ethers_core/types/transaction/eip2718/enum.TypedTransaction.html\" title=\"enum ethers_core::types::transaction::eip2718::TypedTransaction\">TypedTransaction</a>,\n    block: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"ethers_core/types/block/enum.BlockId.html\" title=\"enum ethers_core::types::block::BlockId\">BlockId</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ethers_core/types/transaction/eip2930/struct.AccessListWithGasUsed.html\" title=\"struct ethers_core::types::transaction::eip2930::AccessListWithGasUsed\">AccessListWithGasUsed</a>, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt; as <a class=\"trait\" href=\"ethers_providers/middleware/trait.Middleware.html\" title=\"trait ethers_providers::middleware::Middleware\">Middleware</a>&gt;::<a class=\"associatedtype\" href=\"ethers_providers/middleware/trait.Middleware.html#associatedtype.Error\" title=\"type ethers_providers::middleware::Middleware::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Query the node for an EIP-2930 Access List. <a href=\"ethers_providers/middleware/trait.Middleware.html#method.create_access_list\">Read more</a></div></details></div></details>","Middleware","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3393\">source</a></span><a href=\"#impl-Ord-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3408\">source</a><a href=\"#method.cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class=\"docblock\"><p>Comparison for two <code>Arc</code>s.</p>\n<p>The two are compared by calling <code>cmp()</code> on their inner values.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::cmp::Ordering;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert_eq!</span>(Ordering::Less, five.cmp(<span class=\"kw-2\">&amp;</span>Arc::new(<span class=\"number\">6</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#980-982\">source</a></span><a href=\"#method.max\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1001-1003\">source</a></span><a href=\"#method.min\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1027-1029\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3259\">source</a></span><a href=\"#impl-PartialEq-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3278\">source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Equality for two <code>Arc</code>s.</p>\n<p>Two <code>Arc</code>s are equal if their inner values are equal, even if they are\nstored in different allocation.</p>\n<p>If <code>T</code> also implements <code>Eq</code> (implying reflexivity of equality),\ntwo <code>Arc</code>s that point to the same allocation are always equal.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert!</span>(five == Arc::new(<span class=\"number\">5</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3299\">source</a><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Inequality for two <code>Arc</code>s.</p>\n<p>Two <code>Arc</code>s are not equal if their inner values are not equal.</p>\n<p>If <code>T</code> also implements <code>Eq</code> (implying reflexivity of equality),\ntwo <code>Arc</code>s that point to the same value are always equal.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert!</span>(five != Arc::new(<span class=\"number\">6</span>));</code></pre></div>\n</div></details></div></details>","PartialEq","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3305\">source</a></span><a href=\"#impl-PartialOrd-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3320\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Partial comparison for two <code>Arc</code>s.</p>\n<p>The two are compared by calling <code>partial_cmp()</code> on their inner values.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::cmp::Ordering;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(Ordering::Less), five.partial_cmp(<span class=\"kw-2\">&amp;</span>Arc::new(<span class=\"number\">6</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3337\">source</a><a href=\"#method.lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Less-than comparison for two <code>Arc</code>s.</p>\n<p>The two are compared by calling <code>&lt;</code> on their inner values.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert!</span>(five &lt; Arc::new(<span class=\"number\">6</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3354\">source</a><a href=\"#method.le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>โLess than or equal toโ comparison for two <code>Arc</code>s.</p>\n<p>The two are compared by calling <code>&lt;=</code> on their inner values.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert!</span>(five &lt;= Arc::new(<span class=\"number\">5</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3371\">source</a><a href=\"#method.gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Greater-than comparison for two <code>Arc</code>s.</p>\n<p>The two are compared by calling <code>&gt;</code> on their inner values.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert!</span>(five &gt; Arc::new(<span class=\"number\">4</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3388\">source</a><a href=\"#method.ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>โGreater than or equal toโ comparison for two <code>Arc</code>s.</p>\n<p>The two are compared by calling <code>&gt;=</code> on their inner values.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert!</span>(five &gt;= Arc::new(<span class=\"number\">5</span>));</code></pre></div>\n</div></details></div></details>","PartialOrd","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pointer-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3430\">source</a></span><a href=\"#impl-Pointer-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Pointer.html\" title=\"trait core::fmt::Pointer\">Pointer</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3431\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Pointer.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Pointer.html#tymethod.fmt\">Read more</a></div></details></div></details>","Pointer","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Recorder-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/metrics/recorder/mod.rs.html#121\">source</a><a href=\"#impl-Recorder-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"metrics/recorder/trait.Recorder.html\" title=\"trait metrics::recorder::Recorder\">Recorder</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"metrics/recorder/trait.Recorder.html\" title=\"trait metrics::recorder::Recorder\">Recorder</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.describe_counter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/metrics/recorder/mod.rs.html#121\">source</a><a href=\"#method.describe_counter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"metrics/recorder/trait.Recorder.html#tymethod.describe_counter\" class=\"fn\">describe_counter</a>(\n    &amp;self,\n    key: <a class=\"struct\" href=\"metrics/key/struct.KeyName.html\" title=\"struct metrics::key::KeyName\">KeyName</a>,\n    unit: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"metrics/common/enum.Unit.html\" title=\"enum metrics::common::Unit\">Unit</a>&gt;,\n    description: Cow&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;,\n)</h4></section></summary><div class='docblock'>Describes a counter. <a href=\"metrics/recorder/trait.Recorder.html#tymethod.describe_counter\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.describe_gauge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/metrics/recorder/mod.rs.html#121\">source</a><a href=\"#method.describe_gauge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"metrics/recorder/trait.Recorder.html#tymethod.describe_gauge\" class=\"fn\">describe_gauge</a>(\n    &amp;self,\n    key: <a class=\"struct\" href=\"metrics/key/struct.KeyName.html\" title=\"struct metrics::key::KeyName\">KeyName</a>,\n    unit: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"metrics/common/enum.Unit.html\" title=\"enum metrics::common::Unit\">Unit</a>&gt;,\n    description: Cow&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;,\n)</h4></section></summary><div class='docblock'>Describes a gauge. <a href=\"metrics/recorder/trait.Recorder.html#tymethod.describe_gauge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.describe_histogram\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/metrics/recorder/mod.rs.html#121\">source</a><a href=\"#method.describe_histogram\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"metrics/recorder/trait.Recorder.html#tymethod.describe_histogram\" class=\"fn\">describe_histogram</a>(\n    &amp;self,\n    key: <a class=\"struct\" href=\"metrics/key/struct.KeyName.html\" title=\"struct metrics::key::KeyName\">KeyName</a>,\n    unit: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"metrics/common/enum.Unit.html\" title=\"enum metrics::common::Unit\">Unit</a>&gt;,\n    description: Cow&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;,\n)</h4></section></summary><div class='docblock'>Describes a histogram. <a href=\"metrics/recorder/trait.Recorder.html#tymethod.describe_histogram\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_counter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/metrics/recorder/mod.rs.html#121\">source</a><a href=\"#method.register_counter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"metrics/recorder/trait.Recorder.html#tymethod.register_counter\" class=\"fn\">register_counter</a>(&amp;self, key: &amp;<a class=\"struct\" href=\"metrics/key/struct.Key.html\" title=\"struct metrics::key::Key\">Key</a>, metadata: &amp;<a class=\"struct\" href=\"metrics/metadata/struct.Metadata.html\" title=\"struct metrics::metadata::Metadata\">Metadata</a>&lt;'_&gt;) -&gt; <a class=\"struct\" href=\"metrics/handles/struct.Counter.html\" title=\"struct metrics::handles::Counter\">Counter</a></h4></section></summary><div class='docblock'>Registers a counter.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_gauge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/metrics/recorder/mod.rs.html#121\">source</a><a href=\"#method.register_gauge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"metrics/recorder/trait.Recorder.html#tymethod.register_gauge\" class=\"fn\">register_gauge</a>(&amp;self, key: &amp;<a class=\"struct\" href=\"metrics/key/struct.Key.html\" title=\"struct metrics::key::Key\">Key</a>, metadata: &amp;<a class=\"struct\" href=\"metrics/metadata/struct.Metadata.html\" title=\"struct metrics::metadata::Metadata\">Metadata</a>&lt;'_&gt;) -&gt; <a class=\"struct\" href=\"metrics/handles/struct.Gauge.html\" title=\"struct metrics::handles::Gauge\">Gauge</a></h4></section></summary><div class='docblock'>Registers a gauge.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_histogram\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/metrics/recorder/mod.rs.html#121\">source</a><a href=\"#method.register_histogram\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"metrics/recorder/trait.Recorder.html#tymethod.register_histogram\" class=\"fn\">register_histogram</a>(&amp;self, key: &amp;<a class=\"struct\" href=\"metrics/key/struct.Key.html\" title=\"struct metrics::key::Key\">Key</a>, metadata: &amp;<a class=\"struct\" href=\"metrics/metadata/struct.Metadata.html\" title=\"struct metrics::metadata::Metadata\">Metadata</a>&lt;'_&gt;) -&gt; <a class=\"struct\" href=\"metrics/handles/struct.Histogram.html\" title=\"struct metrics::handles::Histogram\">Histogram</a></h4></section></summary><div class='docblock'>Registers a histogram.</div></details></div></details>","Recorder","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#555-567\">source</a><a href=\"#impl-Serialize-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"docblock\"><p>This impl requires the <a href=\"https://serde.rs/feature-flags.html#-features-rc\"><code>\"rc\"</code></a> Cargo feature of Serde.</p>\n<p>Serializing a data structure containing <code>Arc</code> will serialize a copy of\nthe contents of the <code>Arc</code> each time the <code>Arc</code> is referenced within the\ndata structure. Serialization will not attempt to deduplicate these\nrepeated data.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#555-567\">source</a><a href=\"#method.serialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SerializeAs%3CArc%3CT%3E%3E-for-Arc%3CU%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde_with/ser/impls.rs.html#223-225\">source</a><a href=\"#impl-SerializeAs%3CArc%3CT%3E%3E-for-Arc%3CU%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"serde_with/ser/trait.SerializeAs.html\" title=\"trait serde_with::ser::SerializeAs\">SerializeAs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"serde_with/ser/trait.SerializeAs.html\" title=\"trait serde_with::ser::SerializeAs\">SerializeAs</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize_as\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde_with/ser/impls.rs.html#227-229\">source</a><a href=\"#method.serialize_as\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"serde_with/ser/trait.SerializeAs.html#tymethod.serialize_as\" class=\"fn\">serialize_as</a>&lt;S&gt;(\n    source: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer.</div></details></div></details>","SerializeAs<Arc<T>>","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Service%3CRequest%3E-for-Arc%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hyper/service/service.rs.html#91\">source</a><a href=\"#impl-Service%3CRequest%3E-for-Arc%3CS%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Request, S&gt; <a class=\"trait\" href=\"hyper/service/service/trait.Service.html\" title=\"trait hyper::service::service::Service\">Service</a>&lt;Request&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"hyper/service/service/trait.Service.html\" title=\"trait hyper::service::service::Service\">Service</a>&lt;Request&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Response\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/hyper/service/service.rs.html#92\">source</a><a href=\"#associatedtype.Response\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"hyper/service/service/trait.Service.html#associatedtype.Response\" class=\"associatedtype\">Response</a> = &lt;S as <a class=\"trait\" href=\"hyper/service/service/trait.Service.html\" title=\"trait hyper::service::service::Service\">Service</a>&lt;Request&gt;&gt;::<a class=\"associatedtype\" href=\"hyper/service/service/trait.Service.html#associatedtype.Response\" title=\"type hyper::service::service::Service::Response\">Response</a></h4></section></summary><div class='docblock'>Responses given by the service.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/hyper/service/service.rs.html#93\">source</a><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"hyper/service/service/trait.Service.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &lt;S as <a class=\"trait\" href=\"hyper/service/service/trait.Service.html\" title=\"trait hyper::service::service::Service\">Service</a>&lt;Request&gt;&gt;::<a class=\"associatedtype\" href=\"hyper/service/service/trait.Service.html#associatedtype.Error\" title=\"type hyper::service::service::Service::Error\">Error</a></h4></section></summary><div class='docblock'>Errors produced by the service. <a href=\"hyper/service/service/trait.Service.html#associatedtype.Error\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/hyper/service/service.rs.html#94\">source</a><a href=\"#associatedtype.Future\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"hyper/service/service/trait.Service.html#associatedtype.Future\" class=\"associatedtype\">Future</a> = &lt;S as <a class=\"trait\" href=\"hyper/service/service/trait.Service.html\" title=\"trait hyper::service::service::Service\">Service</a>&lt;Request&gt;&gt;::<a class=\"associatedtype\" href=\"hyper/service/service/trait.Service.html#associatedtype.Future\" title=\"type hyper::service::service::Service::Future\">Future</a></h4></section></summary><div class='docblock'>The future response value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hyper/service/service.rs.html#97\">source</a><a href=\"#method.call\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"hyper/service/service/trait.Service.html#tymethod.call\" class=\"fn\">call</a>(&amp;self, req: Request) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;S&gt; as <a class=\"trait\" href=\"hyper/service/service/trait.Service.html\" title=\"trait hyper::service::service::Service\">Service</a>&lt;Request&gt;&gt;::<a class=\"associatedtype\" href=\"hyper/service/service/trait.Service.html#associatedtype.Future\" title=\"type hyper::service::service::Service::Future\">Future</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&lt;Arc&lt;S&gt; as Service&lt;Request&gt;&gt;::Future\">โ</a></h4></section></summary><div class='docblock'>Process the request and return the response asynchronously.\n<code>call</code> takes <code>&amp;self</code> instead of <code>mut &amp;self</code> because: <a href=\"hyper/service/service/trait.Service.html#tymethod.call\">Read more</a></div></details></div></details>","Service<Request>","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Spawn-for-Arc%3CSp%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_task/spawn.rs.html#172\">source</a><a href=\"#impl-Spawn-for-Arc%3CSp%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Sp&gt; <a class=\"trait\" href=\"futures_task/spawn/trait.Spawn.html\" title=\"trait futures_task::spawn::Spawn\">Spawn</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;Sp&gt;<div class=\"where\">where\n    Sp: <a class=\"trait\" href=\"futures_task/spawn/trait.Spawn.html\" title=\"trait futures_task::spawn::Spawn\">Spawn</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.spawn_obj\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_task/spawn.rs.html#173\">source</a><a href=\"#method.spawn_obj\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"futures_task/spawn/trait.Spawn.html#tymethod.spawn_obj\" class=\"fn\">spawn_obj</a>(&amp;self, future: <a class=\"struct\" href=\"futures_task/future_obj/struct.FutureObj.html\" title=\"struct futures_task::future_obj::FutureObj\">FutureObj</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"futures_task/spawn/struct.SpawnError.html\" title=\"struct futures_task::spawn::SpawnError\">SpawnError</a>&gt;</h4></section></summary><div class='docblock'>Spawns a future that will be run to completion. <a href=\"futures_task/spawn/trait.Spawn.html#tymethod.spawn_obj\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.status\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_task/spawn.rs.html#177\">source</a><a href=\"#method.status\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"futures_task/spawn/trait.Spawn.html#method.status\" class=\"fn\">status</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"futures_task/spawn/struct.SpawnError.html\" title=\"struct futures_task::spawn::SpawnError\">SpawnError</a>&gt;</h4></section></summary><div class='docblock'>Determines whether the executor is able to spawn new tasks. <a href=\"futures_task/spawn/trait.Spawn.html#method.status\">Read more</a></div></details></div></details>","Spawn","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StateRead-for-Arc%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cnidarium/read.rs.html#159\">source</a><a href=\"#impl-StateRead-for-Arc%3CS%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"cnidarium/read/trait.StateRead.html\" title=\"trait cnidarium::read::StateRead\">StateRead</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cnidarium/read/trait.StateRead.html\" title=\"trait cnidarium::read::StateRead\">StateRead</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.GetRawFut\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/cnidarium/read.rs.html#160\">source</a><a href=\"#associatedtype.GetRawFut\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"cnidarium/read/trait.StateRead.html#associatedtype.GetRawFut\" class=\"associatedtype\">GetRawFut</a> = &lt;S as <a class=\"trait\" href=\"cnidarium/read/trait.StateRead.html\" title=\"trait cnidarium::read::StateRead\">StateRead</a>&gt;::<a class=\"associatedtype\" href=\"cnidarium/read/trait.StateRead.html#associatedtype.GetRawFut\" title=\"type cnidarium::read::StateRead::GetRawFut\">GetRawFut</a></h4></section><section id=\"associatedtype.PrefixRawStream\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/cnidarium/read.rs.html#161\">source</a><a href=\"#associatedtype.PrefixRawStream\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"cnidarium/read/trait.StateRead.html#associatedtype.PrefixRawStream\" class=\"associatedtype\">PrefixRawStream</a> = &lt;S as <a class=\"trait\" href=\"cnidarium/read/trait.StateRead.html\" title=\"trait cnidarium::read::StateRead\">StateRead</a>&gt;::<a class=\"associatedtype\" href=\"cnidarium/read/trait.StateRead.html#associatedtype.PrefixRawStream\" title=\"type cnidarium::read::StateRead::PrefixRawStream\">PrefixRawStream</a></h4></section><section id=\"associatedtype.PrefixKeysStream\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/cnidarium/read.rs.html#162\">source</a><a href=\"#associatedtype.PrefixKeysStream\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"cnidarium/read/trait.StateRead.html#associatedtype.PrefixKeysStream\" class=\"associatedtype\">PrefixKeysStream</a> = &lt;S as <a class=\"trait\" href=\"cnidarium/read/trait.StateRead.html\" title=\"trait cnidarium::read::StateRead\">StateRead</a>&gt;::<a class=\"associatedtype\" href=\"cnidarium/read/trait.StateRead.html#associatedtype.PrefixKeysStream\" title=\"type cnidarium::read::StateRead::PrefixKeysStream\">PrefixKeysStream</a></h4></section><section id=\"associatedtype.NonconsensusPrefixRawStream\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/cnidarium/read.rs.html#163\">source</a><a href=\"#associatedtype.NonconsensusPrefixRawStream\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"cnidarium/read/trait.StateRead.html#associatedtype.NonconsensusPrefixRawStream\" class=\"associatedtype\">NonconsensusPrefixRawStream</a> = &lt;S as <a class=\"trait\" href=\"cnidarium/read/trait.StateRead.html\" title=\"trait cnidarium::read::StateRead\">StateRead</a>&gt;::<a class=\"associatedtype\" href=\"cnidarium/read/trait.StateRead.html#associatedtype.NonconsensusPrefixRawStream\" title=\"type cnidarium::read::StateRead::NonconsensusPrefixRawStream\">NonconsensusPrefixRawStream</a></h4></section><section id=\"associatedtype.NonconsensusRangeRawStream\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/cnidarium/read.rs.html#164\">source</a><a href=\"#associatedtype.NonconsensusRangeRawStream\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"cnidarium/read/trait.StateRead.html#associatedtype.NonconsensusRangeRawStream\" class=\"associatedtype\">NonconsensusRangeRawStream</a> = &lt;S as <a class=\"trait\" href=\"cnidarium/read/trait.StateRead.html\" title=\"trait cnidarium::read::StateRead\">StateRead</a>&gt;::<a class=\"associatedtype\" href=\"cnidarium/read/trait.StateRead.html#associatedtype.NonconsensusRangeRawStream\" title=\"type cnidarium::read::StateRead::NonconsensusRangeRawStream\">NonconsensusRangeRawStream</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_raw\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cnidarium/read.rs.html#166\">source</a><a href=\"#method.get_raw\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cnidarium/read/trait.StateRead.html#tymethod.get_raw\" class=\"fn\">get_raw</a>(&amp;self, key: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;S&gt; as <a class=\"trait\" href=\"cnidarium/read/trait.StateRead.html\" title=\"trait cnidarium::read::StateRead\">StateRead</a>&gt;::<a class=\"associatedtype\" href=\"cnidarium/read/trait.StateRead.html#associatedtype.GetRawFut\" title=\"type cnidarium::read::StateRead::GetRawFut\">GetRawFut</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&lt;Arc&lt;S&gt; as StateRead&gt;::GetRawFut\">โ</a></h4></section></summary><div class='docblock'>Gets a value from the verifiable key-value store as raw bytes. <a href=\"cnidarium/read/trait.StateRead.html#tymethod.get_raw\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prefix_raw\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cnidarium/read.rs.html#170\">source</a><a href=\"#method.prefix_raw\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cnidarium/read/trait.StateRead.html#tymethod.prefix_raw\" class=\"fn\">prefix_raw</a>(&amp;self, prefix: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; &lt;S as <a class=\"trait\" href=\"cnidarium/read/trait.StateRead.html\" title=\"trait cnidarium::read::StateRead\">StateRead</a>&gt;::<a class=\"associatedtype\" href=\"cnidarium/read/trait.StateRead.html#associatedtype.PrefixRawStream\" title=\"type cnidarium::read::StateRead::PrefixRawStream\">PrefixRawStream</a></h4></section></summary><div class='docblock'>Retrieve all values for keys matching a prefix from the verifiable key-value store, as raw bytes. <a href=\"cnidarium/read/trait.StateRead.html#tymethod.prefix_raw\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prefix_keys\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cnidarium/read.rs.html#174\">source</a><a href=\"#method.prefix_keys\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cnidarium/read/trait.StateRead.html#tymethod.prefix_keys\" class=\"fn\">prefix_keys</a>(&amp;self, prefix: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; &lt;S as <a class=\"trait\" href=\"cnidarium/read/trait.StateRead.html\" title=\"trait cnidarium::read::StateRead\">StateRead</a>&gt;::<a class=\"associatedtype\" href=\"cnidarium/read/trait.StateRead.html#associatedtype.PrefixKeysStream\" title=\"type cnidarium::read::StateRead::PrefixKeysStream\">PrefixKeysStream</a></h4></section></summary><div class='docblock'>Retrieve all keys (but not values) matching a prefix from the verifiable key-value store.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nonverifiable_prefix_raw\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cnidarium/read.rs.html#178\">source</a><a href=\"#method.nonverifiable_prefix_raw\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cnidarium/read/trait.StateRead.html#tymethod.nonverifiable_prefix_raw\" class=\"fn\">nonverifiable_prefix_raw</a>(\n    &amp;self,\n    prefix: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n) -&gt; &lt;S as <a class=\"trait\" href=\"cnidarium/read/trait.StateRead.html\" title=\"trait cnidarium::read::StateRead\">StateRead</a>&gt;::<a class=\"associatedtype\" href=\"cnidarium/read/trait.StateRead.html#associatedtype.NonconsensusPrefixRawStream\" title=\"type cnidarium::read::StateRead::NonconsensusPrefixRawStream\">NonconsensusPrefixRawStream</a></h4></section></summary><div class='docblock'>Retrieve all values for keys matching a prefix from the non-verifiable key-value store, as raw bytes. <a href=\"cnidarium/read/trait.StateRead.html#tymethod.nonverifiable_prefix_raw\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nonverifiable_range_raw\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cnidarium/read.rs.html#182-186\">source</a><a href=\"#method.nonverifiable_range_raw\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cnidarium/read/trait.StateRead.html#tymethod.nonverifiable_range_raw\" class=\"fn\">nonverifiable_range_raw</a>(\n    &amp;self,\n    prefix: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;,\n    range: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;S&gt; as <a class=\"trait\" href=\"cnidarium/read/trait.StateRead.html\" title=\"trait cnidarium::read::StateRead\">StateRead</a>&gt;::<a class=\"associatedtype\" href=\"cnidarium/read/trait.StateRead.html#associatedtype.NonconsensusRangeRawStream\" title=\"type cnidarium::read::StateRead::NonconsensusRangeRawStream\">NonconsensusRangeRawStream</a>, <a class=\"struct\" href=\"anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Retrieve all values for keys in a range from the non-verifiable key-value store, as raw bytes.\nThis method does not support inclusive ranges, and will return an error if passed one. <a href=\"cnidarium/read/trait.StateRead.html#tymethod.nonverifiable_range_raw\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nonverifiable_get_raw\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cnidarium/read.rs.html#190\">source</a><a href=\"#method.nonverifiable_get_raw\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cnidarium/read/trait.StateRead.html#tymethod.nonverifiable_get_raw\" class=\"fn\">nonverifiable_get_raw</a>(&amp;self, key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;S&gt; as <a class=\"trait\" href=\"cnidarium/read/trait.StateRead.html\" title=\"trait cnidarium::read::StateRead\">StateRead</a>&gt;::<a class=\"associatedtype\" href=\"cnidarium/read/trait.StateRead.html#associatedtype.GetRawFut\" title=\"type cnidarium::read::StateRead::GetRawFut\">GetRawFut</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&lt;Arc&lt;S&gt; as StateRead&gt;::GetRawFut\">โ</a></h4></section></summary><div class='docblock'>Gets a byte value from the non-verifiable key-value store. <a href=\"cnidarium/read/trait.StateRead.html#tymethod.nonverifiable_get_raw\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.object_get\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cnidarium/read.rs.html#194\">source</a><a href=\"#method.object_get\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cnidarium/read/trait.StateRead.html#tymethod.object_get\" class=\"fn\">object_get</a>&lt;T&gt;(&amp;self, key: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Gets an object from the ephemeral key-object store. <a href=\"cnidarium/read/trait.StateRead.html#tymethod.object_get\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.object_type\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cnidarium/read.rs.html#198\">source</a><a href=\"#method.object_type\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cnidarium/read/trait.StateRead.html#tymethod.object_type\" class=\"fn\">object_type</a>(&amp;self, key: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>&gt;</h4></section></summary><div class='docblock'>Gets the [<code>TypeId</code>] of the object stored at <code>key</code> in the ephemeral key-object store, if any\nis present.</div></details></div></details>","StateRead","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StdError-for-Arc%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.52.0\">1.52.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3942\">source</a></span><a href=\"#impl-StdError-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.description\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3944\">source</a><a href=\"#method.description\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.description\" class=\"fn\">description</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated since 1.42.0: use the Display impl or to_string()</span></div></span><div class='docblock'> <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.description\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cause\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3949\">source</a><a href=\"#method.cause\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.cause\" class=\"fn\">cause</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated since 1.33.0: replaced by Error::source, which can support downcasting</span></div></span></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.source\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3953\">source</a><a href=\"#method.source\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.source\" class=\"fn\">source</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;(dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns the lower-level source of this error, if any. <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.source\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.provide\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3957\">source</a><a href=\"#method.provide\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.provide\" class=\"fn\">provide</a>&lt;'a&gt;(&amp;'a self, req: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/error/struct.Request.html\" title=\"struct core::error::Request\">Request</a>&lt;'a&gt;)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>error_generic_member_access</code>)</span></div></span><div class='docblock'>Provides type-based access to context intended for error reports. <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.provide\">Read more</a></div></details></div></details>","Error","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Subscriber-for-Arc%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#795-797\">source</a><a href=\"#impl-Subscriber-for-Arc%3CS%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"tracing_core/subscriber/trait.Subscriber.html\" title=\"trait tracing_core::subscriber::Subscriber\">Subscriber</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"tracing_core/subscriber/trait.Subscriber.html\" title=\"trait tracing_core::subscriber::Subscriber\">Subscriber</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_callsite\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#800\">source</a><a href=\"#method.register_callsite\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.register_callsite\" class=\"fn\">register_callsite</a>(&amp;self, metadata: &amp;'static <a class=\"struct\" href=\"tracing_core/metadata/struct.Metadata.html\" title=\"struct tracing_core::metadata::Metadata\">Metadata</a>&lt;'static&gt;) -&gt; <a class=\"struct\" href=\"tracing_core/subscriber/struct.Interest.html\" title=\"struct tracing_core::subscriber::Interest\">Interest</a></h4></section></summary><div class='docblock'>Registers a new <a href=\"tracing_core/callsite/index.html\" title=\"mod tracing_core::callsite\">callsite</a> with this subscriber, returning whether or not\nthe subscriber is interested in being notified about the callsite. <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.register_callsite\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enabled\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#805\">source</a><a href=\"#method.enabled\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.enabled\" class=\"fn\">enabled</a>(&amp;self, metadata: &amp;<a class=\"struct\" href=\"tracing_core/metadata/struct.Metadata.html\" title=\"struct tracing_core::metadata::Metadata\">Metadata</a>&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if a span or event with the specified <a href=\"tracing_core/metadata/struct.Metadata.html\" title=\"struct tracing_core::metadata::Metadata\">metadata</a> would be\nrecorded. <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.enabled\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_level_hint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#810\">source</a><a href=\"#method.max_level_hint\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.max_level_hint\" class=\"fn\">max_level_hint</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"tracing_core/metadata/struct.LevelFilter.html\" title=\"struct tracing_core::metadata::LevelFilter\">LevelFilter</a>&gt;</h4></section></summary><div class='docblock'>Returns the highest <a href=\"tracing_core/metadata/struct.Level.html\" title=\"struct tracing_core::metadata::Level\">verbosity level</a> that this <code>Subscriber</code> will\nenable, or <code>None</code>, if the subscriber does not implement level-based\nfiltering or chooses not to implement this method. <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.max_level_hint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_span\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#815\">source</a><a href=\"#method.new_span\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.new_span\" class=\"fn\">new_span</a>(&amp;self, span: &amp;<a class=\"struct\" href=\"tracing_core/span/struct.Attributes.html\" title=\"struct tracing_core::span::Attributes\">Attributes</a>&lt;'_&gt;) -&gt; <a class=\"struct\" href=\"tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a></h4></section></summary><div class='docblock'>Visit the construction of a new span, returning a new <a href=\"tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">span ID</a> for the\nspan being constructed. <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.new_span\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.record\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#820\">source</a><a href=\"#method.record\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.record\" class=\"fn\">record</a>(&amp;self, span: &amp;<a class=\"struct\" href=\"tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>, values: &amp;<a class=\"struct\" href=\"tracing_core/span/struct.Record.html\" title=\"struct tracing_core::span::Record\">Record</a>&lt;'_&gt;)</h4></section></summary><div class='docblock'>Record a set of values on a span. <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.record\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.record_follows_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#825\">source</a><a href=\"#method.record_follows_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.record_follows_from\" class=\"fn\">record_follows_from</a>(&amp;self, span: &amp;<a class=\"struct\" href=\"tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>, follows: &amp;<a class=\"struct\" href=\"tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>)</h4></section></summary><div class='docblock'>Adds an indication that <code>span</code> follows from the span with the id\n<code>follows</code>. <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.record_follows_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.event_enabled\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#830\">source</a><a href=\"#method.event_enabled\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.event_enabled\" class=\"fn\">event_enabled</a>(&amp;self, event: &amp;<a class=\"struct\" href=\"tracing_core/event/struct.Event.html\" title=\"struct tracing_core::event::Event\">Event</a>&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Determine if an <a href=\"tracing_core/event/struct.Event.html\" title=\"struct tracing_core::event::Event\"><code>Event</code></a> should be recorded. <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.event_enabled\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#835\">source</a><a href=\"#method.event\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.event\" class=\"fn\">event</a>(&amp;self, event: &amp;<a class=\"struct\" href=\"tracing_core/event/struct.Event.html\" title=\"struct tracing_core::event::Event\">Event</a>&lt;'_&gt;)</h4></section></summary><div class='docblock'>Records that an <a href=\"tracing_core/event/struct.Event.html\" title=\"struct tracing_core::event::Event\"><code>Event</code></a> has occurred. <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.event\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#840\">source</a><a href=\"#method.enter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.enter\" class=\"fn\">enter</a>(&amp;self, span: &amp;<a class=\"struct\" href=\"tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>)</h4></section></summary><div class='docblock'>Records that a span has been entered. <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.enter\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exit\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#845\">source</a><a href=\"#method.exit\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.exit\" class=\"fn\">exit</a>(&amp;self, span: &amp;<a class=\"struct\" href=\"tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>)</h4></section></summary><div class='docblock'>Records that a span has been exited. <a href=\"tracing_core/subscriber/trait.Subscriber.html#tymethod.exit\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_span\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#850\">source</a><a href=\"#method.clone_span\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.clone_span\" class=\"fn\">clone_span</a>(&amp;self, id: &amp;<a class=\"struct\" href=\"tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>) -&gt; <a class=\"struct\" href=\"tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a></h4></section></summary><div class='docblock'>Notifies the subscriber that a <a href=\"tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">span ID</a> has been cloned. <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.clone_span\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_close\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#855\">source</a><a href=\"#method.try_close\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.try_close\" class=\"fn\">try_close</a>(&amp;self, id: <a class=\"struct\" href=\"tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Notifies the subscriber that a <a href=\"tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">span ID</a> has been dropped, and returns\n<code>true</code> if there are now 0 IDs that refer to that span. <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.try_close\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop_span\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#861\">source</a><a href=\"#method.drop_span\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.drop_span\" class=\"fn\">drop_span</a>(&amp;self, id: <a class=\"struct\" href=\"tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated since 0.1.2: use <code>Subscriber::try_close</code> instead</span></div></span><div class='docblock'><strong>This method is deprecated.</strong> <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.drop_span\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_span\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#866\">source</a><a href=\"#method.current_span\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.current_span\" class=\"fn\">current_span</a>(&amp;self) -&gt; <a class=\"struct\" href=\"tracing_core/span/struct.Current.html\" title=\"struct tracing_core::span::Current\">Current</a></h4></section></summary><div class='docblock'>Returns a type representing this subscriberโs view of the current span. <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.current_span\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.downcast_raw\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#871\">source</a><a href=\"#method.downcast_raw\" class=\"anchor\">ยง</a><h4 class=\"code-header\">unsafe fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.downcast_raw\" class=\"fn\">downcast_raw</a>(&amp;self, id: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>If <code>self</code> is the same type as the provided <code>TypeId</code>, returns an untyped\n<code>*const</code> pointer to that type. Otherwise, returns <code>None</code>. <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.downcast_raw\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_register_dispatch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#103\">source</a><a href=\"#method.on_register_dispatch\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.on_register_dispatch\" class=\"fn\">on_register_dispatch</a>(&amp;self, subscriber: &amp;<a class=\"struct\" href=\"tracing_core/dispatcher/struct.Dispatch.html\" title=\"struct tracing_core::dispatcher::Dispatch\">Dispatch</a>)</h4></section></summary><div class='docblock'>Invoked when this subscriber becomes a <a href=\"tracing_core/dispatcher/struct.Dispatch.html\" title=\"struct tracing_core::dispatcher::Dispatch\"><code>Dispatch</code></a>. <a href=\"tracing_core/subscriber/trait.Subscriber.html#method.on_register_dispatch\">Read more</a></div></details></div></details>","Subscriber","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToSql-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rusqlite/types/to_sql.rs.html#150\">source</a><a href=\"#impl-ToSql-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"rusqlite/types/to_sql/trait.ToSql.html\" title=\"trait rusqlite::types::to_sql::ToSql\">ToSql</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"rusqlite/types/to_sql/trait.ToSql.html\" title=\"trait rusqlite::types::to_sql::ToSql\">ToSql</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_sql\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rusqlite/types/to_sql.rs.html#152\">source</a><a href=\"#method.to_sql\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"rusqlite/types/to_sql/trait.ToSql.html#tymethod.to_sql\" class=\"fn\">to_sql</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"rusqlite/types/to_sql/enum.ToSqlOutput.html\" title=\"enum rusqlite::types::to_sql::ToSqlOutput\">ToSqlOutput</a>&lt;'_&gt;, <a class=\"enum\" href=\"rusqlite/error/enum.Error.html\" title=\"enum rusqlite::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Converts Rust value to SQLite value</div></details></div></details>","ToSql","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/scale_info/impls.rs.html#302-304\">source</a><a href=\"#impl-TypeInfo-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scale_info/trait.TypeInfo.html\" title=\"trait scale_info::TypeInfo\">TypeInfo</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"scale_info/trait.TypeInfo.html\" title=\"trait scale_info::TypeInfo\">TypeInfo</a> + 'static + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/scale_info/impls.rs.html#306\">source</a><a href=\"#associatedtype.Identity\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"scale_info/trait.TypeInfo.html#associatedtype.Identity\" class=\"associatedtype\">Identity</a> = T</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a href=\"scale_info/trait.TypeInfo.html#associatedtype.Identity\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/scale_info/impls.rs.html#308\">source</a><a href=\"#method.type_info\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"scale_info/trait.TypeInfo.html#tymethod.type_info\" class=\"fn\">type_info</a>() -&gt; <a class=\"struct\" href=\"scale_info/ty/struct.Type.html\" title=\"struct scale_info::ty::Type\">Type</a></h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Valid-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ark_serialize/impls.rs.html#326\">source</a><a href=\"#impl-Valid-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"ark_serialize/trait.Valid.html\" title=\"trait ark_serialize::Valid\">Valid</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"ark_serialize/trait.Valid.html\" title=\"trait ark_serialize::Valid\">Valid</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.check\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ark_serialize/impls.rs.html#328\">source</a><a href=\"#method.check\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ark_serialize/trait.Valid.html#tymethod.check\" class=\"fn\">check</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"ark_serialize/error/enum.SerializationError.html\" title=\"enum ark_serialize::error::SerializationError\">SerializationError</a>&gt;</h4></section><section id=\"method.batch_check\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ark_serialize/impls.rs.html#334-338\">source</a><a href=\"#method.batch_check\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"ark_serialize/trait.Valid.html#method.batch_check\" class=\"fn\">batch_check</a>&lt;'a&gt;(\n    batch: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"ark_serialize/error/enum.SerializationError.html\" title=\"enum ark_serialize::error::SerializationError\">SerializationError</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;: 'a,</div></h4></section></div></details>","Valid","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ValueParserFactory-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/clap_builder/builder/value_parser.rs.html#2412-2416\">source</a><a href=\"#impl-ValueParserFactory-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"clap_builder/builder/value_parser/trait.ValueParserFactory.html\" title=\"trait clap_builder::builder::value_parser::ValueParserFactory\">ValueParserFactory</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"clap_builder/builder/value_parser/trait.ValueParserFactory.html\" title=\"trait clap_builder::builder::value_parser::ValueParserFactory\">ValueParserFactory</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;T as <a class=\"trait\" href=\"clap_builder/builder/value_parser/trait.ValueParserFactory.html\" title=\"trait clap_builder::builder::value_parser::ValueParserFactory\">ValueParserFactory</a>&gt;::<a class=\"associatedtype\" href=\"clap_builder/builder/value_parser/trait.ValueParserFactory.html#associatedtype.Parser\" title=\"type clap_builder::builder::value_parser::ValueParserFactory::Parser\">Parser</a>: <a class=\"trait\" href=\"clap_builder/builder/value_parser/trait.TypedValueParser.html\" title=\"trait clap_builder::builder::value_parser::TypedValueParser\">TypedValueParser</a>&lt;Value = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Parser\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/clap_builder/builder/value_parser.rs.html#2418\">source</a><a href=\"#associatedtype.Parser\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"clap_builder/builder/value_parser/trait.ValueParserFactory.html#associatedtype.Parser\" class=\"associatedtype\">Parser</a> = <a class=\"struct\" href=\"clap_builder/builder/value_parser/struct.MapValueParser.html\" title=\"struct clap_builder::builder::value_parser::MapValueParser\">MapValueParser</a>&lt;&lt;T as <a class=\"trait\" href=\"clap_builder/builder/value_parser/trait.ValueParserFactory.html\" title=\"trait clap_builder::builder::value_parser::ValueParserFactory\">ValueParserFactory</a>&gt;::<a class=\"associatedtype\" href=\"clap_builder/builder/value_parser/trait.ValueParserFactory.html#associatedtype.Parser\" title=\"type clap_builder::builder::value_parser::ValueParserFactory::Parser\">Parser</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: T) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Generated parser, usually <a href=\"clap_builder/builder/value_parser/struct.ValueParser.html\" title=\"struct clap_builder::builder::value_parser::ValueParser\"><code>ValueParser</code></a>. <a href=\"clap_builder/builder/value_parser/trait.ValueParserFactory.html#associatedtype.Parser\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.value_parser\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/clap_builder/builder/value_parser.rs.html#2419\">source</a><a href=\"#method.value_parser\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"clap_builder/builder/value_parser/trait.ValueParserFactory.html#tymethod.value_parser\" class=\"fn\">value_parser</a>() -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt; as <a class=\"trait\" href=\"clap_builder/builder/value_parser/trait.ValueParserFactory.html\" title=\"trait clap_builder::builder::value_parser::ValueParserFactory\">ValueParserFactory</a>&gt;::<a class=\"associatedtype\" href=\"clap_builder/builder/value_parser/trait.ValueParserFactory.html#associatedtype.Parser\" title=\"type clap_builder::builder::value_parser::ValueParserFactory::Parser\">Parser</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&lt;Arc&lt;T&gt; as ValueParserFactory&gt;::Parser\">โ</a></h4></section></summary><div class='docblock'>Create the specified <a href=\"clap_builder/builder/value_parser/trait.ValueParserFactory.html#associatedtype.Parser\" title=\"associated type clap_builder::builder::value_parser::ValueParserFactory::Parser::Parser\"><code>Self::Parser</code></a></div></details></div></details>","ValueParserFactory","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrapperTypeDecode-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#614\">source</a><a href=\"#impl-WrapperTypeDecode-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"parity_scale_codec/codec/trait.WrapperTypeDecode.html\" title=\"trait parity_scale_codec::codec::WrapperTypeDecode\">WrapperTypeDecode</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Wrapped\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#615\">source</a><a href=\"#associatedtype.Wrapped\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"parity_scale_codec/codec/trait.WrapperTypeDecode.html#associatedtype.Wrapped\" class=\"associatedtype\">Wrapped</a> = T</h4></section></summary><div class='docblock'>A wrapped type.</div></details></div></details>","WrapperTypeDecode","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Writeable-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/writeable/impls.rs.html#232\">source</a><a href=\"#impl-Writeable-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"writeable/trait.Writeable.html\" title=\"trait writeable::Writeable\">Writeable</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"writeable/trait.Writeable.html\" title=\"trait writeable::Writeable\">Writeable</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/writeable/impls.rs.html#232\">source</a><a href=\"#method.write_to\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"writeable/trait.Writeable.html#method.write_to\" class=\"fn\">write_to</a>&lt;W&gt;(&amp;self, sink: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut W</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Write.html\" title=\"trait core::fmt::Write\">Write</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Writes a string to the given sink. Errors from the sink are bubbled up.\nThe default implementation delegates to <code>write_to_parts</code>, and discards any\n<code>Part</code> annotations.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_parts\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/writeable/impls.rs.html#232\">source</a><a href=\"#method.write_to_parts\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"writeable/trait.Writeable.html#method.write_to_parts\" class=\"fn\">write_to_parts</a>&lt;W&gt;(&amp;self, sink: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut W</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"writeable/trait.PartsWrite.html\" title=\"trait writeable::PartsWrite\">PartsWrite</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Write bytes and <code>Part</code> annotations to the given sink. Errors from the\nsink are bubbled up. The default implementation delegates to <code>write_to</code>,\nand doesnโt produce any <code>Part</code> annotations.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.writeable_length_hint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/writeable/impls.rs.html#232\">source</a><a href=\"#method.writeable_length_hint\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"writeable/trait.Writeable.html#method.writeable_length_hint\" class=\"fn\">writeable_length_hint</a>(&amp;self) -&gt; <a class=\"struct\" href=\"writeable/struct.LengthHint.html\" title=\"struct writeable::LengthHint\">LengthHint</a></h4></section></summary><div class='docblock'>Returns a hint for the number of UTF-8 bytes that will be written to the sink. <a href=\"writeable/trait.Writeable.html#method.writeable_length_hint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_string\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/writeable/impls.rs.html#232\">source</a><a href=\"#method.write_to_string\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"writeable/trait.Writeable.html#method.write_to_string\" class=\"fn\">write_to_string</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Creates a new <code>String</code> with the data from this <code>Writeable</code>. Like <code>ToString</code>,\nbut smaller and faster. <a href=\"writeable/trait.Writeable.html#method.write_to_string\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.writeable_cmp_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/writeable/impls.rs.html#232\">source</a><a href=\"#method.writeable_cmp_bytes\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"writeable/trait.Writeable.html#method.writeable_cmp_bytes\" class=\"fn\">writeable_cmp_bytes</a>(&amp;self, other: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>Compares the contents of this <code>Writeable</code> to the given bytes\nwithout allocating a String to hold the <code>Writeable</code> contents. <a href=\"writeable/trait.Writeable.html#method.writeable_cmp_bytes\">Read more</a></div></details></div></details>","Writeable","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<section id=\"impl-CartablePointerLike-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/yoke/cartable_ptr.rs.html#232\">source</a><a href=\"#impl-CartablePointerLike-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"yoke/cartable_ptr/trait.CartablePointerLike.html\" title=\"trait yoke::cartable_ptr::CartablePointerLike\">CartablePointerLike</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;</h3></section>","CartablePointerLike","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<section id=\"impl-CloneStableDeref-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/stable_deref_trait/lib.rs.html#176\">source</a><a href=\"#impl-CloneStableDeref-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"stable_deref_trait/trait.CloneStableDeref.html\" title=\"trait stable_deref_trait::CloneStableDeref\">CloneStableDeref</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","CloneStableDeref","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<section id=\"impl-CloneableCart-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/yoke/yoke.rs.html#687\">source</a><a href=\"#impl-CloneableCart-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"yoke/yoke/trait.CloneableCart.html\" title=\"trait yoke::yoke::CloneableCart\">CloneableCart</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","CloneableCart","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<section id=\"impl-CloneableCartablePointerLike-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/yoke/cartable_ptr.rs.html#259\">source</a><a href=\"#impl-CloneableCartablePointerLike-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"yoke/cartable_ptr/trait.CloneableCartablePointerLike.html\" title=\"trait yoke::cartable_ptr::CloneableCartablePointerLike\">CloneableCartablePointerLike</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;</h3></section>","CloneableCartablePointerLike","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<section id=\"impl-CoerceUnsized%3CArc%3CU,+A%3E%3E-for-Arc%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#259\">source</a><a href=\"#impl-CoerceUnsized%3CArc%3CU,+A%3E%3E-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, U, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/unsize/trait.CoerceUnsized.html\" title=\"trait core::ops::unsize::CoerceUnsized\">CoerceUnsized</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U, A&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unsize.html\" title=\"trait core::marker::Unsize\">Unsize</a>&lt;U&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    U: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","CoerceUnsized<Arc<U, A>>","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<section id=\"impl-DecodeWithMemTracking-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#627\">source</a><a href=\"#impl-DecodeWithMemTracking-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"parity_scale_codec/mem_tracking/trait.DecodeWithMemTracking.html\" title=\"trait parity_scale_codec::mem_tracking::DecodeWithMemTracking\">DecodeWithMemTracking</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"parity_scale_codec/mem_tracking/trait.DecodeWithMemTracking.html\" title=\"trait parity_scale_codec::mem_tracking::DecodeWithMemTracking\">DecodeWithMemTracking</a>,</div></h3></section>","DecodeWithMemTracking","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<section id=\"impl-DerefPure-for-Arc%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2190\">source</a><a href=\"#impl-DerefPure-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefPure.html\" title=\"trait core::ops::deref::DerefPure\">DerefPure</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","DerefPure","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<section id=\"impl-DispatchFromDyn%3CArc%3CU%3E%3E-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#262\">source</a><a href=\"#impl-DispatchFromDyn%3CArc%3CU%3E%3E-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/unsize/trait.DispatchFromDyn.html\" title=\"trait core::ops::unsize::DispatchFromDyn\">DispatchFromDyn</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unsize.html\" title=\"trait core::marker::Unsize\">Unsize</a>&lt;U&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    U: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","DispatchFromDyn<Arc<U>>","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<section id=\"impl-EncodeLike%3CArc%3CT%3E%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#407\">source</a><a href=\"#impl-EncodeLike%3CArc%3CT%3E%3E-for-T\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"parity_scale_codec/encode_like/trait.EncodeLike.html\" title=\"trait parity_scale_codec::encode_like::EncodeLike\">EncodeLike</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;&gt; for T<div class=\"where\">where\n    T: <a class=\"trait\" href=\"parity_scale_codec/codec/trait.Encode.html\" title=\"trait parity_scale_codec::codec::Encode\">Encode</a>,</div></h3></section>","EncodeLike<Arc<T>>","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<section id=\"impl-EncodeLike%3CT%3E-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#406\">source</a><a href=\"#impl-EncodeLike%3CT%3E-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"parity_scale_codec/encode_like/trait.EncodeLike.html\" title=\"trait parity_scale_codec::encode_like::EncodeLike\">EncodeLike</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"parity_scale_codec/codec/trait.Encode.html\" title=\"trait parity_scale_codec::codec::Encode\">Encode</a>,</div></h3></section>","EncodeLike<T>","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<section id=\"impl-EncodeLike-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#405\">source</a><a href=\"#impl-EncodeLike-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"parity_scale_codec/encode_like/trait.EncodeLike.html\" title=\"trait parity_scale_codec::encode_like::EncodeLike\">EncodeLike</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"parity_scale_codec/codec/trait.Encode.html\" title=\"trait parity_scale_codec::codec::Encode\">Encode</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","EncodeLike","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<section id=\"impl-Eq-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3413\">source</a></span><a href=\"#impl-Eq-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section>","Eq","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<section id=\"impl-PinCoerceUnsized-for-Arc%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2184\">source</a><a href=\"#impl-PinCoerceUnsized-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/pin/trait.PinCoerceUnsized.html\" title=\"trait core::pin::PinCoerceUnsized\">PinCoerceUnsized</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","PinCoerceUnsized","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<section id=\"impl-Send-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#251\">source</a></span><a href=\"#impl-Send-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section>","Send","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<section id=\"impl-StableDeref-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/stable_deref_trait/lib.rs.html#174\">source</a><a href=\"#impl-StableDeref-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"stable_deref_trait/trait.StableDeref.html\" title=\"trait stable_deref_trait::StableDeref\">StableDeref</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","StableDeref","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<section id=\"impl-Sync-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#253\">source</a></span><a href=\"#impl-Sync-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section>","Sync","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<section id=\"impl-Unpin-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.33.0\">1.33.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3854\">source</a></span><a href=\"#impl-Unpin-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","Unpin","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<section id=\"impl-UnwindSafe-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.9.0\">1.9.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#256\">source</a></span><a href=\"#impl-UnwindSafe-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a>,</div></h3></section>","UnwindSafe","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"],["<section id=\"impl-WrapperTypeEncode-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#404\">source</a><a href=\"#impl-WrapperTypeEncode-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"parity_scale_codec/codec/trait.WrapperTypeEncode.html\" title=\"trait parity_scale_codec::codec::WrapperTypeEncode\">WrapperTypeEncode</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","WrapperTypeEncode","ibc_relayer::telemetry::Telemetry","ibc_relayer::util::lock::RwArc"]]],["yoke",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1361\">source</a><a href=\"#impl-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.17.0\">1.17.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1423\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.from_raw\" class=\"fn\">from_raw</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs an <code>Arc&lt;T&gt;</code> from a raw pointer.</p>\n<p>The raw pointer must have been previously returned by a call to\n<a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.into_raw\" title=\"associated function alloc::sync::Arc::into_raw\"><code>Arc&lt;U&gt;::into_raw</code></a> with the following requirements:</p>\n<ul>\n<li>If <code>U</code> is sized, it must have the same size and alignment as <code>T</code>. This\nis trivially true if <code>U</code> is <code>T</code>.</li>\n<li>If <code>U</code> is unsized, its data pointer must have the same size and\nalignment as <code>T</code>. This is trivially true if <code>Arc&lt;U&gt;</code> was constructed\nthrough <code>Arc&lt;T&gt;</code> and then converted to <code>Arc&lt;U&gt;</code> through an <a href=\"https://doc.rust-lang.org/reference/type-coercions.html#unsized-coercions\">unsized\ncoercion</a>.</li>\n</ul>\n<p>Note that if <code>U</code> or <code>U</code>โs data pointer is not <code>T</code> but has the same size\nand alignment, this is basically like transmuting references of\ndifferent types. See <a href=\"https://doc.rust-lang.org/nightly/core/intrinsics/fn.transmute.html\" title=\"fn core::intrinsics::transmute\"><code>mem::transmute</code></a> for more information\non what restrictions apply in this case.</p>\n<p>The user of <code>from_raw</code> has to make sure a specific value of <code>T</code> is only\ndropped once.</p>\n<p>This function is unsafe because improper use may lead to memory unsafety,\neven if the returned <code>Arc&lt;T&gt;</code> is never accessed.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x = Arc::new(<span class=\"string\">\"hello\"</span>.to_owned());\n<span class=\"kw\">let </span>x_ptr = Arc::into_raw(x);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// Convert back to an `Arc` to prevent leak.\n    </span><span class=\"kw\">let </span>x = Arc::from_raw(x_ptr);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;*</span>x, <span class=\"string\">\"hello\"</span>);\n\n    <span class=\"comment\">// Further calls to `Arc::from_raw(x_ptr)` would be memory-unsafe.\n</span>}\n\n<span class=\"comment\">// The memory was freed when `x` went out of scope above, so `x_ptr` is now dangling!</span></code></pre></div>\n<p>Convert a slice back into its original array:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x: Arc&lt;[u32]&gt; = Arc::new([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);\n<span class=\"kw\">let </span>x_ptr: <span class=\"kw-2\">*const </span>[u32] = Arc::into_raw(x);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>x: Arc&lt;[u32; <span class=\"number\">3</span>]&gt; = Arc::from_raw(x_ptr.cast::&lt;[u32; <span class=\"number\">3</span>]&gt;());\n    <span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;*</span>x, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.increment_strong_count\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1457\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.increment_strong_count\" class=\"fn\">increment_strong_count</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a>)</h4></section></summary><div class=\"docblock\"><p>Increments the strong reference count on the <code>Arc&lt;T&gt;</code> associated with the\nprovided pointer by one.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">ยง</a>Safety</h5>\n<p>The pointer must have been obtained through <code>Arc::into_raw</code>, and the\nassociated <code>Arc</code> instance must be valid (i.e. the strong count must be at\nleast 1) for the duration of this method.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>ptr = Arc::into_raw(five);\n    Arc::increment_strong_count(ptr);\n\n    <span class=\"comment\">// This assertion is deterministic because we haven't shared\n    // the `Arc` between threads.\n    </span><span class=\"kw\">let </span>five = Arc::from_raw(ptr);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"number\">2</span>, Arc::strong_count(<span class=\"kw-2\">&amp;</span>five));\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decrement_strong_count\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1493\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.decrement_strong_count\" class=\"fn\">decrement_strong_count</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a>)</h4></section></summary><div class=\"docblock\"><p>Decrements the strong reference count on the <code>Arc&lt;T&gt;</code> associated with the\nprovided pointer by one.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">ยง</a>Safety</h5>\n<p>The pointer must have been obtained through <code>Arc::into_raw</code>, and the\nassociated <code>Arc</code> instance must be valid (i.e. the strong count must be at\nleast 1) when invoking this method. This method can be used to release the final\n<code>Arc</code> and backing storage, but <strong>should not</strong> be called after the final <code>Arc</code> has been\nreleased.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>ptr = Arc::into_raw(five);\n    Arc::increment_strong_count(ptr);\n\n    <span class=\"comment\">// Those assertions are deterministic because we haven't shared\n    // the `Arc` between threads.\n    </span><span class=\"kw\">let </span>five = Arc::from_raw(ptr);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"number\">2</span>, Arc::strong_count(<span class=\"kw-2\">&amp;</span>five));\n    Arc::decrement_strong_count(ptr);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"number\">1</span>, Arc::strong_count(<span class=\"kw-2\">&amp;</span>five));\n}</code></pre></div>\n</div></details></div></details>",0,"yoke::erased::ErasedArcCart"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#372\">source</a><a href=\"#impl-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#385\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new\" class=\"fn\">new</a>(data: T) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new <code>Arc&lt;T&gt;</code>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_cyclic\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.60.0\">1.60.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#450-452\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new_cyclic\" class=\"fn\">new_cyclic</a>&lt;F&gt;(data_fn: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\">Weak</a>&lt;T&gt;) -&gt; T,</div></h4></section></summary><div class=\"docblock\"><p>Constructs a new <code>Arc&lt;T&gt;</code> while giving you a <code>Weak&lt;T&gt;</code> to the allocation,\nto allow you to construct a <code>T</code> which holds a weak pointer to itself.</p>\n<p>Generally, a structure circularly referencing itself, either directly or\nindirectly, should not hold a strong reference to itself to prevent a memory leak.\nUsing this function, you get access to the weak pointer during the\ninitialization of <code>T</code>, before the <code>Arc&lt;T&gt;</code> is created, such that you can\nclone and store it inside the <code>T</code>.</p>\n<p><code>new_cyclic</code> first allocates the managed allocation for the <code>Arc&lt;T&gt;</code>,\nthen calls your closure, giving it a <code>Weak&lt;T&gt;</code> to this allocation,\nand only afterwards completes the construction of the <code>Arc&lt;T&gt;</code> by placing\nthe <code>T</code> returned from your closure into the allocation.</p>\n<p>Since the new <code>Arc&lt;T&gt;</code> is not fully-constructed until <code>Arc&lt;T&gt;::new_cyclic</code>\nreturns, calling <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html#method.upgrade\" title=\"method alloc::sync::Weak::upgrade\"><code>upgrade</code></a> on the weak reference inside your closure will\nfail and result in a <code>None</code> value.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">ยง</a>Panics</h5>\n<p>If <code>data_fn</code> panics, the panic is propagated to the caller, and the\ntemporary <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak&lt;T&gt;</code></a> is dropped normally.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">ยง</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::{Arc, Weak};\n\n<span class=\"kw\">struct </span>Gadget {\n    me: Weak&lt;Gadget&gt;,\n}\n\n<span class=\"kw\">impl </span>Gadget {\n    <span class=\"doccomment\">/// Constructs a reference counted Gadget.\n    </span><span class=\"kw\">fn </span>new() -&gt; Arc&lt;<span class=\"self\">Self</span>&gt; {\n        <span class=\"comment\">// `me` is a `Weak&lt;Gadget&gt;` pointing at the new allocation of the\n        // `Arc` we're constructing.\n        </span>Arc::new_cyclic(|me| {\n            <span class=\"comment\">// Create the actual struct here.\n            </span>Gadget { me: me.clone() }\n        })\n    }\n\n    <span class=\"doccomment\">/// Returns a reference counted pointer to Self.\n    </span><span class=\"kw\">fn </span>me(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>) -&gt; Arc&lt;<span class=\"self\">Self</span>&gt; {\n        <span class=\"self\">self</span>.me.upgrade().unwrap()\n    }\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_uninit\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.82.0\">1.82.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#479\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new_uninit\" class=\"fn\">new_uninit</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new <code>Arc</code> with uninitialized contents.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(get_mut_unchecked)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>five = Arc::&lt;u32&gt;::new_uninit();\n\n<span class=\"comment\">// Deferred initialization:\n</span>Arc::get_mut(<span class=\"kw-2\">&amp;mut </span>five).unwrap().write(<span class=\"number\">5</span>);\n\n<span class=\"kw\">let </span>five = <span class=\"kw\">unsafe </span>{ five.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>five, <span class=\"number\">5</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#513\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>new_zeroed_alloc</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc</code> with uninitialized contents, with the memory\nbeing filled with <code>0</code> bytes.</p>\n<p>See <a href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html#method.zeroed\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::zeroed\"><code>MaybeUninit::zeroed</code></a> for examples of correct and incorrect usage\nof this method.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(new_zeroed_alloc)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>zero = Arc::&lt;u32&gt;::new_zeroed();\n<span class=\"kw\">let </span>zero = <span class=\"kw\">unsafe </span>{ zero.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>zero, <span class=\"number\">0</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pin\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.33.0\">1.33.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#528\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.pin\" class=\"fn\">pin</a>(data: T) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>, then\n<code>data</code> will be pinned in memory and unable to be moved.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_pin\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#535\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_pin\" class=\"fn\">try_pin</a>(data: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>, return an error if allocation fails.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#552\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_new\" class=\"fn\">try_new</a>(data: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc&lt;T&gt;</code>, returning an error if allocation fails.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::try_new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_uninit\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#586\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_new_uninit\" class=\"fn\">try_new_uninit</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc</code> with uninitialized contents, returning an error\nif allocation fails.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n#![feature(get_mut_unchecked)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>five = Arc::&lt;u32&gt;::try_new_uninit()<span class=\"question-mark\">?</span>;\n\n<span class=\"comment\">// Deferred initialization:\n</span>Arc::get_mut(<span class=\"kw-2\">&amp;mut </span>five).unwrap().write(<span class=\"number\">5</span>);\n\n<span class=\"kw\">let </span>five = <span class=\"kw\">unsafe </span>{ five.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>five, <span class=\"number\">5</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_zeroed\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#619\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_new_zeroed\" class=\"fn\">try_new_zeroed</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc</code> with uninitialized contents, with the memory\nbeing filled with <code>0</code> bytes, returning an error if allocation fails.</p>\n<p>See <a href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html#method.zeroed\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::zeroed\"><code>MaybeUninit::zeroed</code></a> for examples of correct and incorrect usage\nof this method.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature( allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>zero = Arc::&lt;u32&gt;::try_new_zeroed()<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>zero = <span class=\"kw\">unsafe </span>{ zero.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>zero, <span class=\"number\">0</span>);</code></pre></div>\n</div></details></div></details>",0,"yoke::erased::ErasedArcCart"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arc%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1498\">source</a><a href=\"#impl-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.allocator\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1506\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.allocator\" class=\"fn\">allocator</a>(this: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;A</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns a reference to the underlying allocator.</p>\n<p>Note: this is an associated function, which means that you have\nto call it as <code>Arc::allocator(&amp;a)</code> instead of <code>a.allocator()</code>. This\nis so that there is no conflict with a method on the inner type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_raw\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.17.0\">1.17.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1529\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.into_raw\" class=\"fn\">into_raw</a>(this: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a></h4></section></summary><div class=\"docblock\"><p>Consumes the <code>Arc</code>, returning the wrapped pointer.</p>\n<p>To avoid a memory leak the pointer must be converted back to an <code>Arc</code> using\n<a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.from_raw\" title=\"associated function alloc::sync::Arc::from_raw\"><code>Arc::from_raw</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x = Arc::new(<span class=\"string\">\"hello\"</span>.to_owned());\n<span class=\"kw\">let </span>x_ptr = Arc::into_raw(x);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw\">unsafe </span>{ <span class=\"kw-2\">&amp;*</span>x_ptr }, <span class=\"string\">\"hello\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_raw_with_allocator\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1554\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.into_raw_with_allocator\" class=\"fn\">into_raw_with_allocator</a>(this: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a>, A)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Consumes the <code>Arc</code>, returning the wrapped pointer and allocator.</p>\n<p>To avoid a memory leak the pointer must be converted back to an <code>Arc</code> using\n<a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.from_raw_in\" title=\"associated function alloc::sync::Arc::from_raw_in\"><code>Arc::from_raw_in</code></a>.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>x = Arc::new_in(<span class=\"string\">\"hello\"</span>.to_owned(), System);\n<span class=\"kw\">let </span>(ptr, alloc) = Arc::into_raw_with_allocator(x);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw\">unsafe </span>{ <span class=\"kw-2\">&amp;*</span>ptr }, <span class=\"string\">\"hello\"</span>);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Arc::from_raw_in(ptr, alloc) };\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;*</span>x, <span class=\"string\">\"hello\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1581\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.as_ptr\" class=\"fn\">as_ptr</a>(this: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a></h4></section></summary><div class=\"docblock\"><p>Provides a raw pointer to the data.</p>\n<p>The counts are not affected in any way and the <code>Arc</code> is not consumed. The pointer is valid for\nas long as there are strong counts in the <code>Arc</code>.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x = Arc::new(<span class=\"string\">\"hello\"</span>.to_owned());\n<span class=\"kw\">let </span>y = Arc::clone(<span class=\"kw-2\">&amp;</span>x);\n<span class=\"kw\">let </span>x_ptr = Arc::as_ptr(<span class=\"kw-2\">&amp;</span>x);\n<span class=\"macro\">assert_eq!</span>(x_ptr, Arc::as_ptr(<span class=\"kw-2\">&amp;</span>y));\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw\">unsafe </span>{ <span class=\"kw-2\">&amp;*</span>x_ptr }, <span class=\"string\">\"hello\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1659\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.from_raw_in\" class=\"fn\">from_raw_in</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a>, alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs an <code>Arc&lt;T, A&gt;</code> from a raw pointer.</p>\n<p>The raw pointer must have been previously returned by a call to <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.into_raw\" title=\"associated function alloc::sync::Arc::into_raw\"><code>Arc&lt;U, A&gt;::into_raw</code></a> with the following requirements:</p>\n<ul>\n<li>If <code>U</code> is sized, it must have the same size and alignment as <code>T</code>. This\nis trivially true if <code>U</code> is <code>T</code>.</li>\n<li>If <code>U</code> is unsized, its data pointer must have the same size and\nalignment as <code>T</code>. This is trivially true if <code>Arc&lt;U&gt;</code> was constructed\nthrough <code>Arc&lt;T&gt;</code> and then converted to <code>Arc&lt;U&gt;</code> through an <a href=\"https://doc.rust-lang.org/reference/type-coercions.html#unsized-coercions\">unsized\ncoercion</a>.</li>\n</ul>\n<p>Note that if <code>U</code> or <code>U</code>โs data pointer is not <code>T</code> but has the same size\nand alignment, this is basically like transmuting references of\ndifferent types. See <a href=\"https://doc.rust-lang.org/nightly/core/intrinsics/fn.transmute.html\" title=\"fn core::intrinsics::transmute\"><code>mem::transmute</code></a> for more information\non what restrictions apply in this case.</p>\n<p>The raw pointer must point to a block of memory allocated by <code>alloc</code></p>\n<p>The user of <code>from_raw</code> has to make sure a specific value of <code>T</code> is only\ndropped once.</p>\n<p>This function is unsafe because improper use may lead to memory unsafety,\neven if the returned <code>Arc&lt;T&gt;</code> is never accessed.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>x = Arc::new_in(<span class=\"string\">\"hello\"</span>.to_owned(), System);\n<span class=\"kw\">let </span>x_ptr = Arc::into_raw(x);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// Convert back to an `Arc` to prevent leak.\n    </span><span class=\"kw\">let </span>x = Arc::from_raw_in(x_ptr, System);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;*</span>x, <span class=\"string\">\"hello\"</span>);\n\n    <span class=\"comment\">// Further calls to `Arc::from_raw(x_ptr)` would be memory-unsafe.\n</span>}\n\n<span class=\"comment\">// The memory was freed when `x` went out of scope above, so `x_ptr` is now dangling!</span></code></pre></div>\n<p>Convert a slice back into its original array:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>x: Arc&lt;[u32], <span class=\"kw\">_</span>&gt; = Arc::new_in([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], System);\n<span class=\"kw\">let </span>x_ptr: <span class=\"kw-2\">*const </span>[u32] = Arc::into_raw(x);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>x: Arc&lt;[u32; <span class=\"number\">3</span>], <span class=\"kw\">_</span>&gt; = Arc::from_raw_in(x_ptr.cast::&lt;[u32; <span class=\"number\">3</span>]&gt;(), System);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;*</span>x, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.downgrade\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1684-1686\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.downgrade\" class=\"fn\">downgrade</a>(this: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\">Weak</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a> pointer to this allocation.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"kw\">let </span>weak_five = Arc::downgrade(<span class=\"kw-2\">&amp;</span>five);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.weak_count\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.15.0\">1.15.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1744\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.weak_count\" class=\"fn\">weak_count</a>(this: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Gets the number of <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a> pointers to this allocation.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">ยง</a>Safety</h5>\n<p>This method by itself is safe, but using it correctly requires extra care.\nAnother thread can change the weak count at any time,\nincluding potentially between calling this method and acting on the result.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n<span class=\"kw\">let </span>_weak_five = Arc::downgrade(<span class=\"kw-2\">&amp;</span>five);\n\n<span class=\"comment\">// This assertion is deterministic because we haven't shared\n// the `Arc` or `Weak` between threads.\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1</span>, Arc::weak_count(<span class=\"kw-2\">&amp;</span>five));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strong_count\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.15.0\">1.15.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1774\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.strong_count\" class=\"fn\">strong_count</a>(this: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Gets the number of strong (<code>Arc</code>) pointers to this allocation.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">ยง</a>Safety</h5>\n<p>This method by itself is safe, but using it correctly requires extra care.\nAnother thread can change the strong count at any time,\nincluding potentially between calling this method and acting on the result.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n<span class=\"kw\">let </span>_also_five = Arc::clone(<span class=\"kw-2\">&amp;</span>five);\n\n<span class=\"comment\">// This assertion is deterministic because we haven't shared\n// the `Arc` between threads.\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2</span>, Arc::strong_count(<span class=\"kw-2\">&amp;</span>five));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.increment_strong_count_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1812-1814\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.increment_strong_count_in\" class=\"fn\">increment_strong_count_in</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a>, alloc: A)<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Increments the strong reference count on the <code>Arc&lt;T&gt;</code> associated with the\nprovided pointer by one.</p>\n<h5 id=\"safety-2\"><a class=\"doc-anchor\" href=\"#safety-2\">ยง</a>Safety</h5>\n<p>The pointer must have been obtained through <code>Arc::into_raw</code>, and the\nassociated <code>Arc</code> instance must be valid (i.e. the strong count must be at\nleast 1) for the duration of this method,, and <code>ptr</code> must point to a block of memory\nallocated by <code>alloc</code>.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>five = Arc::new_in(<span class=\"number\">5</span>, System);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>ptr = Arc::into_raw(five);\n    Arc::increment_strong_count_in(ptr, System);\n\n    <span class=\"comment\">// This assertion is deterministic because we haven't shared\n    // the `Arc` between threads.\n    </span><span class=\"kw\">let </span>five = Arc::from_raw_in(ptr, System);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"number\">2</span>, Arc::strong_count(<span class=\"kw-2\">&amp;</span>five));\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decrement_strong_count_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1858\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.decrement_strong_count_in\" class=\"fn\">decrement_strong_count_in</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a>, alloc: A)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Decrements the strong reference count on the <code>Arc&lt;T&gt;</code> associated with the\nprovided pointer by one.</p>\n<h5 id=\"safety-3\"><a class=\"doc-anchor\" href=\"#safety-3\">ยง</a>Safety</h5>\n<p>The pointer must have been obtained through <code>Arc::into_raw</code>,  the\nassociated <code>Arc</code> instance must be valid (i.e. the strong count must be at\nleast 1) when invoking this method, and <code>ptr</code> must point to a block of memory\nallocated by <code>alloc</code>. This method can be used to release the final\n<code>Arc</code> and backing storage, but <strong>should not</strong> be called after the final <code>Arc</code> has been\nreleased.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>five = Arc::new_in(<span class=\"number\">5</span>, System);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>ptr = Arc::into_raw(five);\n    Arc::increment_strong_count_in(ptr, System);\n\n    <span class=\"comment\">// Those assertions are deterministic because we haven't shared\n    // the `Arc` between threads.\n    </span><span class=\"kw\">let </span>five = Arc::from_raw_in(ptr, System);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"number\">2</span>, Arc::strong_count(<span class=\"kw-2\">&amp;</span>five));\n    Arc::decrement_strong_count_in(ptr, System);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"number\">1</span>, Arc::strong_count(<span class=\"kw-2\">&amp;</span>five));\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ptr_eq\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.17.0\">1.17.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1906\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.ptr_eq\" class=\"fn\">ptr_eq</a>(this: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the two <code>Arc</code>s point to the same allocation in a vein similar to\n<a href=\"https://doc.rust-lang.org/nightly/core/ptr/fn.eq.html\" title=\"ptr::eq\"><code>ptr::eq</code></a>. This function ignores the metadata of  <code>dyn Trait</code> pointers.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n<span class=\"kw\">let </span>same_five = Arc::clone(<span class=\"kw-2\">&amp;</span>five);\n<span class=\"kw\">let </span>other_five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert!</span>(Arc::ptr_eq(<span class=\"kw-2\">&amp;</span>five, <span class=\"kw-2\">&amp;</span>same_five));\n<span class=\"macro\">assert!</span>(!Arc::ptr_eq(<span class=\"kw-2\">&amp;</span>five, <span class=\"kw-2\">&amp;</span>other_five));</code></pre></div>\n</div></details></div></details>",0,"yoke::erased::ErasedArcCart"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arc%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2196\">source</a><a href=\"#impl-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.CloneToUninit.html\" title=\"trait core::clone::CloneToUninit\">CloneToUninit</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.make_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2249\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.make_mut\" class=\"fn\">make_mut</a>(this: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\"><p>Makes a mutable reference into the given <code>Arc</code>.</p>\n<p>If there are other <code>Arc</code> pointers to the same allocation, then <code>make_mut</code> will\n<a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" title=\"method core::clone::Clone::clone\"><code>clone</code></a> the inner value to a new allocation to ensure unique ownership.  This is also\nreferred to as clone-on-write.</p>\n<p>However, if there are no other <code>Arc</code> pointers to this allocation, but some <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a>\npointers, then the <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a> pointers will be dissociated and the inner value will not\nbe cloned.</p>\n<p>See also <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.get_mut\" title=\"associated function alloc::sync::Arc::get_mut\"><code>get_mut</code></a>, which will fail rather than cloning the inner value\nor dissociating <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a> pointers.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>data = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"kw-2\">*</span>Arc::make_mut(<span class=\"kw-2\">&amp;mut </span>data) += <span class=\"number\">1</span>;         <span class=\"comment\">// Won't clone anything\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>other_data = Arc::clone(<span class=\"kw-2\">&amp;</span>data); <span class=\"comment\">// Won't clone inner data\n</span><span class=\"kw-2\">*</span>Arc::make_mut(<span class=\"kw-2\">&amp;mut </span>data) += <span class=\"number\">1</span>;         <span class=\"comment\">// Clones inner data\n</span><span class=\"kw-2\">*</span>Arc::make_mut(<span class=\"kw-2\">&amp;mut </span>data) += <span class=\"number\">1</span>;         <span class=\"comment\">// Won't clone anything\n</span><span class=\"kw-2\">*</span>Arc::make_mut(<span class=\"kw-2\">&amp;mut </span>other_data) <span class=\"kw-2\">*</span>= <span class=\"number\">2</span>;   <span class=\"comment\">// Won't clone anything\n\n// Now `data` and `other_data` point to different allocations.\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>data, <span class=\"number\">8</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>other_data, <span class=\"number\">12</span>);</code></pre></div>\n<p><a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a> pointers will be dissociated:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>data = Arc::new(<span class=\"number\">75</span>);\n<span class=\"kw\">let </span>weak = Arc::downgrade(<span class=\"kw-2\">&amp;</span>data);\n\n<span class=\"macro\">assert!</span>(<span class=\"number\">75 </span>== <span class=\"kw-2\">*</span>data);\n<span class=\"macro\">assert!</span>(<span class=\"number\">75 </span>== <span class=\"kw-2\">*</span>weak.upgrade().unwrap());\n\n<span class=\"kw-2\">*</span>Arc::make_mut(<span class=\"kw-2\">&amp;mut </span>data) += <span class=\"number\">1</span>;\n\n<span class=\"macro\">assert!</span>(<span class=\"number\">76 </span>== <span class=\"kw-2\">*</span>data);\n<span class=\"macro\">assert!</span>(weak.upgrade().is_none());</code></pre></div>\n</div></details></div></details>",0,"yoke::erased::ErasedArcCart"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arc%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2322\">source</a><a href=\"#impl-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap_or_clone\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.76.0\">1.76.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2353\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.unwrap_or_clone\" class=\"fn\">unwrap_or_clone</a>(this: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; T</h4></section></summary><div class=\"docblock\"><p>If we have the only reference to <code>T</code> then unwrap it. Otherwise, clone <code>T</code> and return the\nclone.</p>\n<p>Assuming <code>arc_t</code> is of type <code>Arc&lt;T&gt;</code>, this function is functionally equivalent to\n<code>(*arc_t).clone()</code>, but will avoid cloning the inner value where possible.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>inner = String::from(<span class=\"string\">\"test\"</span>);\n<span class=\"kw\">let </span>ptr = inner.as_ptr();\n\n<span class=\"kw\">let </span>arc = Arc::new(inner);\n<span class=\"kw\">let </span>inner = Arc::unwrap_or_clone(arc);\n<span class=\"comment\">// The inner value was not cloned\n</span><span class=\"macro\">assert!</span>(ptr::eq(ptr, inner.as_ptr()));\n\n<span class=\"kw\">let </span>arc = Arc::new(inner);\n<span class=\"kw\">let </span>arc2 = arc.clone();\n<span class=\"kw\">let </span>inner = Arc::unwrap_or_clone(arc);\n<span class=\"comment\">// Because there were 2 references, we had to clone the inner value.\n</span><span class=\"macro\">assert!</span>(!ptr::eq(ptr, inner.as_ptr()));\n<span class=\"comment\">// `arc2` is the last reference, so when we unwrap it we get back\n// the original `String`.\n</span><span class=\"kw\">let </span>inner = Arc::unwrap_or_clone(arc2);\n<span class=\"macro\">assert!</span>(ptr::eq(ptr, inner.as_ptr()));</code></pre></div>\n</div></details></div></details>",0,"yoke::erased::ErasedArcCart"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arc%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2358\">source</a><a href=\"#impl-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2385\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.get_mut\" class=\"fn\">get_mut</a>(this: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference into the given <code>Arc</code>, if there are\nno other <code>Arc</code> or <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a> pointers to the same allocation.</p>\n<p>Returns <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> otherwise, because it is not safe to\nmutate a shared value.</p>\n<p>See also <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.make_mut\" title=\"associated function alloc::sync::Arc::make_mut\"><code>make_mut</code></a>, which will <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" title=\"method core::clone::Clone::clone\"><code>clone</code></a>\nthe inner value when there are other <code>Arc</code> pointers.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = Arc::new(<span class=\"number\">3</span>);\n<span class=\"kw-2\">*</span>Arc::get_mut(<span class=\"kw-2\">&amp;mut </span>x).unwrap() = <span class=\"number\">4</span>;\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>x, <span class=\"number\">4</span>);\n\n<span class=\"kw\">let </span>_y = Arc::clone(<span class=\"kw-2\">&amp;</span>x);\n<span class=\"macro\">assert!</span>(Arc::get_mut(<span class=\"kw-2\">&amp;mut </span>x).is_none());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2460\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.get_mut_unchecked\" class=\"fn\">get_mut_unchecked</a>(this: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>get_mut_unchecked</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns a mutable reference into the given <code>Arc</code>,\nwithout any check.</p>\n<p>See also <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.get_mut\" title=\"associated function alloc::sync::Arc::get_mut\"><code>get_mut</code></a>, which is safe and does appropriate checks.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">ยง</a>Safety</h5>\n<p>If any other <code>Arc</code> or <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a> pointers to the same allocation exist, then\nthey must not be dereferenced or have active borrows for the duration\nof the returned borrow, and their inner type must be exactly the same as the\ninner type of this Rc (including lifetimes). This is trivially the case if no\nsuch pointers exist, for example immediately after <code>Arc::new</code>.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(get_mut_unchecked)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = Arc::new(String::new());\n<span class=\"kw\">unsafe </span>{\n    Arc::get_mut_unchecked(<span class=\"kw-2\">&amp;mut </span>x).push_str(<span class=\"string\">\"foo\"</span>)\n}\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>x, <span class=\"string\">\"foo\"</span>);</code></pre></div>\n<p>Other <code>Arc</code> pointers to the same allocation must be to the same type.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(get_mut_unchecked)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x: Arc&lt;str&gt; = Arc::from(<span class=\"string\">\"Hello, world!\"</span>);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>y: Arc&lt;[u8]&gt; = x.clone().into();\n<span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// this is Undefined Behavior, because x's inner type is str, not [u8]\n    </span>Arc::get_mut_unchecked(<span class=\"kw-2\">&amp;mut </span>y).fill(<span class=\"number\">0xff</span>); <span class=\"comment\">// 0xff is invalid in UTF-8\n</span>}\n<span class=\"macro\">println!</span>(<span class=\"string\">\"{}\"</span>, <span class=\"kw-2\">&amp;*</span>x); <span class=\"comment\">// Invalid UTF-8 in a str</span></code></pre></div>\n<p>Other <code>Arc</code> pointers to the same allocation must be to the exact same type, including lifetimes.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(get_mut_unchecked)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x: Arc&lt;<span class=\"kw-2\">&amp;</span>str&gt; = Arc::new(<span class=\"string\">\"Hello, world!\"</span>);\n{\n    <span class=\"kw\">let </span>s = String::from(<span class=\"string\">\"Oh, no!\"</span>);\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>y: Arc&lt;<span class=\"kw-2\">&amp;</span>str&gt; = x.clone().into();\n    <span class=\"kw\">unsafe </span>{\n        <span class=\"comment\">// this is Undefined Behavior, because x's inner type\n        // is &amp;'long str, not &amp;'short str\n        </span><span class=\"kw-2\">*</span>Arc::get_mut_unchecked(<span class=\"kw-2\">&amp;mut </span>y) = <span class=\"kw-2\">&amp;</span>s;\n    }\n}\n<span class=\"macro\">println!</span>(<span class=\"string\">\"{}\"</span>, <span class=\"kw-2\">&amp;*</span>x); <span class=\"comment\">// Use-after-free</span></code></pre></div>\n</div></details></div></details>",0,"yoke::erased::ErasedArcCart"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arc%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#630\">source</a><a href=\"#impl-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#646\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new_in\" class=\"fn\">new_in</a>(data: T, alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc&lt;T&gt;</code> in the provided allocator.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>five = Arc::new_in(<span class=\"number\">5</span>, System);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_uninit_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#687\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new_uninit_in\" class=\"fn\">new_uninit_in</a>(alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, A&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc</code> with uninitialized contents in the provided allocator.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(get_mut_unchecked)]\n#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>five = Arc::&lt;u32, <span class=\"kw\">_</span>&gt;::new_uninit_in(System);\n\n<span class=\"kw\">let </span>five = <span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// Deferred initialization:\n    </span>Arc::get_mut_unchecked(<span class=\"kw-2\">&amp;mut </span>five).as_mut_ptr().write(<span class=\"number\">5</span>);\n\n    five.assume_init()\n};\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>five, <span class=\"number\">5</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#725\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new_zeroed_in\" class=\"fn\">new_zeroed_in</a>(alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, A&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc</code> with uninitialized contents, with the memory\nbeing filled with <code>0</code> bytes, in the provided allocator.</p>\n<p>See <a href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html#method.zeroed\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::zeroed\"><code>MaybeUninit::zeroed</code></a> for examples of correct and incorrect usage\nof this method.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>zero = Arc::&lt;u32, <span class=\"kw\">_</span>&gt;::new_zeroed_in(System);\n<span class=\"kw\">let </span>zero = <span class=\"kw\">unsafe </span>{ zero.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>zero, <span class=\"number\">0</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_cyclic_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#770-772\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.new_cyclic_in\" class=\"fn\">new_cyclic_in</a>&lt;F&gt;(data_fn: F, alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\">Weak</a>&lt;T, A&gt;) -&gt; T,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc&lt;T, A&gt;</code> in the given allocator while giving you a <code>Weak&lt;T, A&gt;</code> to the allocation,\nto allow you to construct a <code>T</code> which holds a weak pointer to itself.</p>\n<p>Generally, a structure circularly referencing itself, either directly or\nindirectly, should not hold a strong reference to itself to prevent a memory leak.\nUsing this function, you get access to the weak pointer during the\ninitialization of <code>T</code>, before the <code>Arc&lt;T, A&gt;</code> is created, such that you can\nclone and store it inside the <code>T</code>.</p>\n<p><code>new_cyclic_in</code> first allocates the managed allocation for the <code>Arc&lt;T, A&gt;</code>,\nthen calls your closure, giving it a <code>Weak&lt;T, A&gt;</code> to this allocation,\nand only afterwards completes the construction of the <code>Arc&lt;T, A&gt;</code> by placing\nthe <code>T</code> returned from your closure into the allocation.</p>\n<p>Since the new <code>Arc&lt;T, A&gt;</code> is not fully-constructed until <code>Arc&lt;T, A&gt;::new_cyclic_in</code>\nreturns, calling <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html#method.upgrade\" title=\"method alloc::sync::Weak::upgrade\"><code>upgrade</code></a> on the weak reference inside your closure will\nfail and result in a <code>None</code> value.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">ยง</a>Panics</h5>\n<p>If <code>data_fn</code> panics, the panic is propagated to the caller, and the\ntemporary <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak&lt;T&gt;</code></a> is dropped normally.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">ยง</a>Example</h5>\n<p>See <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.new_cyclic\" title=\"associated function alloc::sync::Arc::new_cyclic\"><code>new_cyclic</code></a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pin_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#835-837\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.pin_in\" class=\"fn\">pin_in</a>(data: T, alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;&gt;<div class=\"where\">where\n    A: 'static,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Pin&lt;Arc&lt;T, A&gt;&gt;</code> in the provided allocator. If <code>T</code> does not implement <code>Unpin</code>,\nthen <code>data</code> will be pinned in memory and unable to be moved.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_pin_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#846-848\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_pin_in\" class=\"fn\">try_pin_in</a>(data: T, alloc: A) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;<div class=\"where\">where\n    A: 'static,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Pin&lt;Arc&lt;T, A&gt;&gt;</code> in the provided allocator, return an error if allocation\nfails.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#869\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_new_in\" class=\"fn\">try_new_in</a>(data: T, alloc: A) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc&lt;T, A&gt;</code> in the provided allocator, returning an error if allocation fails.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>five = Arc::try_new_in(<span class=\"number\">5</span>, System)<span class=\"question-mark\">?</span>;</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_uninit_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#911\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_new_uninit_in\" class=\"fn\">try_new_uninit_in</a>(alloc: A) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, A&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc</code> with uninitialized contents, in the provided allocator, returning an\nerror if allocation fails.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n#![feature(get_mut_unchecked)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>five = Arc::&lt;u32, <span class=\"kw\">_</span>&gt;::try_new_uninit_in(System)<span class=\"question-mark\">?</span>;\n\n<span class=\"kw\">let </span>five = <span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// Deferred initialization:\n    </span>Arc::get_mut_unchecked(<span class=\"kw-2\">&amp;mut </span>five).as_mut_ptr().write(<span class=\"number\">5</span>);\n\n    five.assume_init()\n};\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>five, <span class=\"number\">5</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_zeroed_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#950\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_new_zeroed_in\" class=\"fn\">try_new_zeroed_in</a>(alloc: A) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, A&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Arc</code> with uninitialized contents, with the memory\nbeing filled with <code>0</code> bytes, in the provided allocator, returning an error if allocation\nfails.</p>\n<p>See <a href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html#method.zeroed\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::zeroed\"><code>MaybeUninit::zeroed</code></a> for examples of correct and incorrect usage\nof this method.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>zero = Arc::&lt;u32, <span class=\"kw\">_</span>&gt;::try_new_zeroed_in(System)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>zero = <span class=\"kw\">unsafe </span>{ zero.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>zero, <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_unwrap\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#997\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.try_unwrap\" class=\"fn\">try_unwrap</a>(this: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the inner value, if the <code>Arc</code> has exactly one strong reference.</p>\n<p>Otherwise, an <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Err\" title=\"variant core::result::Result::Err\"><code>Err</code></a> is returned with the same <code>Arc</code> that was\npassed in.</p>\n<p>This will succeed even if there are outstanding weak references.</p>\n<p>It is strongly recommended to use <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.into_inner\" title=\"associated function alloc::sync::Arc::into_inner\"><code>Arc::into_inner</code></a> instead if you donโt\nkeep the <code>Arc</code> in the <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Err\" title=\"variant core::result::Result::Err\"><code>Err</code></a> case.\nImmediately dropping the <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#variant.Err\" title=\"variant core::result::Result::Err\"><code>Err</code></a>-value, as the expression\n<code>Arc::try_unwrap(this).ok()</code> does, can cause the strong count to\ndrop to zero and the inner value of the <code>Arc</code> to be dropped.\nFor instance, if two threads execute such an expression in parallel,\nthere is a race condition without the possibility of unsafety:\nThe threads could first both check whether they own the last instance\nin <code>Arc::try_unwrap</code>, determine that they both do not, and then both\ndiscard and drop their instance in the call to <a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#method.ok\" title=\"method core::result::Result::ok\"><code>ok</code></a>.\nIn this scenario, the value inside the <code>Arc</code> is safely destroyed\nby exactly one of the threads, but neither thread will ever be able\nto use the value.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x = Arc::new(<span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(Arc::try_unwrap(x), <span class=\"prelude-val\">Ok</span>(<span class=\"number\">3</span>));\n\n<span class=\"kw\">let </span>x = Arc::new(<span class=\"number\">4</span>);\n<span class=\"kw\">let </span>_y = Arc::clone(<span class=\"kw-2\">&amp;</span>x);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>Arc::try_unwrap(x).unwrap_err(), <span class=\"number\">4</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#1112\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(this: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the inner value, if the <code>Arc</code> has exactly one strong reference.</p>\n<p>Otherwise, <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> is returned and the <code>Arc</code> is dropped.</p>\n<p>This will succeed even if there are outstanding weak references.</p>\n<p>If <code>Arc::into_inner</code> is called on every clone of this <code>Arc</code>,\nit is guaranteed that exactly one of the calls returns the inner value.\nThis means in particular that the inner value is not dropped.</p>\n<p><a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.try_unwrap\" title=\"associated function alloc::sync::Arc::try_unwrap\"><code>Arc::try_unwrap</code></a> is conceptually similar to <code>Arc::into_inner</code>, but it\nis meant for different use-cases. If used as a direct replacement\nfor <code>Arc::into_inner</code> anyway, such as with the expression\n<code><a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.try_unwrap\" title=\"associated function alloc::sync::Arc::try_unwrap\">Arc::try_unwrap</a>(this).<a href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html#method.ok\" title=\"method core::result::Result::ok\">ok</a>()</code>, then it does\n<strong>not</strong> give the same guarantee as described in the previous paragraph.\nFor more information, see the examples below and read the documentation\nof <a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html#method.try_unwrap\" title=\"associated function alloc::sync::Arc::try_unwrap\"><code>Arc::try_unwrap</code></a>.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">ยง</a>Examples</h5>\n<p>Minimal example demonstrating the guarantee that <code>Arc::into_inner</code> gives.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x = Arc::new(<span class=\"number\">3</span>);\n<span class=\"kw\">let </span>y = Arc::clone(<span class=\"kw-2\">&amp;</span>x);\n\n<span class=\"comment\">// Two threads calling `Arc::into_inner` on both clones of an `Arc`:\n</span><span class=\"kw\">let </span>x_thread = std::thread::spawn(|| Arc::into_inner(x));\n<span class=\"kw\">let </span>y_thread = std::thread::spawn(|| Arc::into_inner(y));\n\n<span class=\"kw\">let </span>x_inner_value = x_thread.join().unwrap();\n<span class=\"kw\">let </span>y_inner_value = y_thread.join().unwrap();\n\n<span class=\"comment\">// One of the threads is guaranteed to receive the inner value:\n</span><span class=\"macro\">assert!</span>(<span class=\"macro\">matches!</span>(\n    (x_inner_value, y_inner_value),\n    (<span class=\"prelude-val\">None</span>, <span class=\"prelude-val\">Some</span>(<span class=\"number\">3</span>)) | (<span class=\"prelude-val\">Some</span>(<span class=\"number\">3</span>), <span class=\"prelude-val\">None</span>)\n));\n<span class=\"comment\">// The result could also be `(None, None)` if the threads called\n// `Arc::try_unwrap(x).ok()` and `Arc::try_unwrap(y).ok()` instead.</span></code></pre></div>\n<p>A more practical example demonstrating the need for <code>Arc::into_inner</code>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"comment\">// Definition of a simple singly linked list using `Arc`:\n</span><span class=\"attr\">#[derive(Clone)]\n</span><span class=\"kw\">struct </span>LinkedList&lt;T&gt;(<span class=\"prelude-ty\">Option</span>&lt;Arc&lt;Node&lt;T&gt;&gt;&gt;);\n<span class=\"kw\">struct </span>Node&lt;T&gt;(T, <span class=\"prelude-ty\">Option</span>&lt;Arc&lt;Node&lt;T&gt;&gt;&gt;);\n\n<span class=\"comment\">// Dropping a long `LinkedList&lt;T&gt;` relying on the destructor of `Arc`\n// can cause a stack overflow. To prevent this, we can provide a\n// manual `Drop` implementation that does the destruction in a loop:\n</span><span class=\"kw\">impl</span>&lt;T&gt; Drop <span class=\"kw\">for </span>LinkedList&lt;T&gt; {\n    <span class=\"kw\">fn </span>drop(<span class=\"kw-2\">&amp;mut </span><span class=\"self\">self</span>) {\n        <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>link = <span class=\"self\">self</span>.<span class=\"number\">0</span>.take();\n        <span class=\"kw\">while let </span><span class=\"prelude-val\">Some</span>(arc_node) = link.take() {\n            <span class=\"kw\">if let </span><span class=\"prelude-val\">Some</span>(Node(_value, next)) = Arc::into_inner(arc_node) {\n                link = next;\n            }\n        }\n    }\n}\n\n<span class=\"comment\">// Implementation of `new` and `push` omitted\n</span><span class=\"kw\">impl</span>&lt;T&gt; LinkedList&lt;T&gt; {\n    <span class=\"comment\">/* ... */\n</span>}\n\n<span class=\"comment\">// The following code could have still caused a stack overflow\n// despite the manual `Drop` impl if that `Drop` impl had used\n// `Arc::try_unwrap(arc).ok()` instead of `Arc::into_inner(arc)`.\n\n// Create a long list and clone it\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x = LinkedList::new();\n<span class=\"kw\">let </span>size = <span class=\"number\">100000</span>;\n<span class=\"kw\">for </span>i <span class=\"kw\">in </span><span class=\"number\">0</span>..size {\n    x.push(i); <span class=\"comment\">// Adds i to the front of x\n</span>}\n<span class=\"kw\">let </span>y = x.clone();\n\n<span class=\"comment\">// Drop the clones in parallel\n</span><span class=\"kw\">let </span>x_thread = std::thread::spawn(|| drop(x));\n<span class=\"kw\">let </span>y_thread = std::thread::spawn(|| drop(y));\nx_thread.join().unwrap();\ny_thread.join().unwrap();</code></pre></div>\n</div></details></div></details>",0,"yoke::erased::ErasedArcCart"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsFd-for-Arc%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0\">1.64.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/os/fd/owned.rs.html#415\">source</a></span><a href=\"#impl-AsFd-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/os/fd/owned/trait.AsFd.html\" title=\"trait std::os::fd::owned::AsFd\">AsFd</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/os/fd/owned/trait.AsFd.html\" title=\"trait std::os::fd::owned::AsFd\">AsFd</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"docblock\"><p>This impl allows implementing traits that require <code>AsFd</code> on Arc.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::net::UdpSocket;\n<span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">trait </span>MyTrait: AsFd {}\n<span class=\"kw\">impl </span>MyTrait <span class=\"kw\">for </span>Arc&lt;UdpSocket&gt; {}\n<span class=\"kw\">impl </span>MyTrait <span class=\"kw\">for </span>Box&lt;UdpSocket&gt; {}</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/os/fd/owned.rs.html#417\">source</a><a href=\"#method.as_fd\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/os/fd/owned/trait.AsFd.html#tymethod.as_fd\" class=\"fn\">as_fd</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/os/fd/owned/struct.BorrowedFd.html\" title=\"struct std::os::fd::owned::BorrowedFd\">BorrowedFd</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Borrows the file descriptor. <a href=\"https://doc.rust-lang.org/nightly/std/os/fd/owned/trait.AsFd.html#tymethod.as_fd\">Read more</a></div></details></div></details>","AsFd","yoke::erased::ErasedArcCart"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRawFd-for-Arc%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/os/fd/raw.rs.html#254\">source</a></span><a href=\"#impl-AsRawFd-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/os/fd/raw/trait.AsRawFd.html\" title=\"trait std::os::fd::raw::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/os/fd/raw/trait.AsRawFd.html\" title=\"trait std::os::fd::raw::AsRawFd\">AsRawFd</a>,</div></h3></section></summary><div class=\"docblock\"><p>This impl allows implementing traits that require <code>AsRawFd</code> on Arc.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::net::UdpSocket;\n<span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">trait </span>MyTrait: AsRawFd {\n}\n<span class=\"kw\">impl </span>MyTrait <span class=\"kw\">for </span>Arc&lt;UdpSocket&gt; {}\n<span class=\"kw\">impl </span>MyTrait <span class=\"kw\">for </span>Box&lt;UdpSocket&gt; {}</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_raw_fd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/os/fd/raw.rs.html#256\">source</a><a href=\"#method.as_raw_fd\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/os/fd/raw/trait.AsRawFd.html#tymethod.as_raw_fd\" class=\"fn\">as_raw_fd</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Extracts the raw file descriptor. <a href=\"https://doc.rust-lang.org/nightly/std/os/fd/raw/trait.AsRawFd.html#tymethod.as_raw_fd\">Read more</a></div></details></div></details>","AsRawFd","yoke::erased::ErasedArcCart"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CT%3E-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3847\">source</a></span><a href=\"#impl-AsRef%3CT%3E-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3848\">source</a><a href=\"#method.as_ref\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<T>","yoke::erased::ErasedArcCart"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3CT%3E-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3840\">source</a></span><a href=\"#impl-Borrow%3CT%3E-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3841\">source</a><a href=\"#method.borrow\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<T>","yoke::erased::ErasedArcCart"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2120\">source</a></span><a href=\"#impl-Clone-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2136\">source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;</h4></section></summary><div class=\"docblock\"><p>Makes a clone of the <code>Arc</code> pointer.</p>\n<p>This creates another pointer to the same allocation, increasing the\nstrong reference count.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"kw\">let _ </span>= Arc::clone(<span class=\"kw-2\">&amp;</span>five);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","yoke::erased::ErasedArcCart"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3423\">source</a></span><a href=\"#impl-Debug-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3424\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","yoke::erased::ErasedArcCart"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Arc%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3438\">source</a></span><a href=\"#impl-Default-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3449\">source</a><a href=\"#method.default\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new <code>Arc&lt;T&gt;</code>, with the <code>Default</code> value for <code>T</code>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>x: Arc&lt;i32&gt; = Default::default();\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>x, <span class=\"number\">0</span>);</code></pre></div>\n</div></details></div></details>","Default","yoke::erased::ErasedArcCart"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2174\">source</a></span><a href=\"#impl-Deref-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2175\">source</a><a href=\"#associatedtype.Target\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = T</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2178\">source</a><a href=\"#method.deref\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","yoke::erased::ErasedArcCart"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3416\">source</a></span><a href=\"#impl-Display-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3417\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","yoke::erased::ErasedArcCart"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2496\">source</a></span><a href=\"#impl-Drop-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2523\">source</a><a href=\"#method.drop\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Drops the <code>Arc</code>.</p>\n<p>This will decrement the strong reference count. If the strong reference\ncount reaches zero then the only other references (if any) are\n<a href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\"><code>Weak</code></a>, so we <code>drop</code> the inner value.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">struct </span>Foo;\n\n<span class=\"kw\">impl </span>Drop <span class=\"kw\">for </span>Foo {\n    <span class=\"kw\">fn </span>drop(<span class=\"kw-2\">&amp;mut </span><span class=\"self\">self</span>) {\n        <span class=\"macro\">println!</span>(<span class=\"string\">\"dropped!\"</span>);\n    }\n}\n\n<span class=\"kw\">let </span>foo  = Arc::new(Foo);\n<span class=\"kw\">let </span>foo2 = Arc::clone(<span class=\"kw-2\">&amp;</span>foo);\n\ndrop(foo);    <span class=\"comment\">// Doesn't print anything\n</span>drop(foo2);   <span class=\"comment\">// Prints \"dropped!\"</span></code></pre></div>\n</div></details></div></details>","Drop","yoke::erased::ErasedArcCart"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Error-for-Arc%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.52.0\">1.52.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3942\">source</a></span><a href=\"#impl-Error-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.description\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3944\">source</a><a href=\"#method.description\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.description\" class=\"fn\">description</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated since 1.42.0: use the Display impl or to_string()</span></div></span><div class='docblock'> <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.description\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cause\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3949\">source</a><a href=\"#method.cause\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.cause\" class=\"fn\">cause</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated since 1.33.0: replaced by Error::source, which can support downcasting</span></div></span></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.source\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3953\">source</a><a href=\"#method.source\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.source\" class=\"fn\">source</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;(dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns the lower-level source of this error, if any. <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.source\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.provide\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3957\">source</a><a href=\"#method.provide\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.provide\" class=\"fn\">provide</a>&lt;'a&gt;(&amp;'a self, req: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/error/struct.Request.html\" title=\"struct core::error::Request\">Request</a>&lt;'a&gt;)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>error_generic_member_access</code>)</span></div></span><div class='docblock'>Provides type-based access to context intended for error reports. <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.provide\">Read more</a></div></details></div></details>","Error","yoke::erased::ErasedArcCart"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3646\">source</a></span><a href=\"#impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3658\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;</h4></section></summary><div class=\"docblock\"><p>Move a boxed object to a new, reference-counted allocation.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">ยง</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>unique: Box&lt;str&gt; = Box::from(<span class=\"string\">\"eggplant\"</span>);\n<span class=\"kw\">let </span>shared: Arc&lt;str&gt; = Arc::from(unique);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"eggplant\"</span>, <span class=\"kw-2\">&amp;</span>shared[..]);</code></pre></div>\n</div></details></div></details>","From<Box<T, A>>","yoke::erased::ErasedArcCart"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCow%3C'a,+B%3E%3E-for-Arc%3CB%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3694-3697\">source</a></span><a href=\"#impl-From%3CCow%3C'a,+B%3E%3E-for-Arc%3CB%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'a, B&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;B&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/trait.ToOwned.html\" title=\"trait alloc::borrow::ToOwned\">ToOwned</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;B&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a B</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;B as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/trait.ToOwned.html\" title=\"trait alloc::borrow::ToOwned\">ToOwned</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/trait.ToOwned.html#associatedtype.Owned\" title=\"type alloc::borrow::ToOwned::Owned\">Owned</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3712\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(cow: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'a, B&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;B&gt;</h4></section></summary><div class=\"docblock\"><p>Creates an atomically reference-counted pointer from a clone-on-write\npointer by copying its content.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">ยง</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>cow: Cow&lt;<span class=\"lifetime\">'_</span>, str&gt; = Cow::Borrowed(<span class=\"string\">\"eggplant\"</span>);\n<span class=\"kw\">let </span>shared: Arc&lt;str&gt; = Arc::from(cow);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"eggplant\"</span>, <span class=\"kw-2\">&amp;</span>shared[..]);</code></pre></div>\n</div></details></div></details>","From<Cow<'a, B>>","yoke::erased::ErasedArcCart"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CT%3E-for-Arc%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3546\">source</a></span><a href=\"#impl-From%3CT%3E-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3561\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(t: T) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a <code>T</code> into an <code>Arc&lt;T&gt;</code></p>\n<p>The conversion moves the value into a\nnewly allocated <code>Arc</code>. It is equivalent to\ncalling <code>Arc::new(t)</code>.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">ยง</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"number\">5</span>;\n<span class=\"kw\">let </span>arc = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert_eq!</span>(Arc::from(x), arc);</code></pre></div>\n</div></details></div></details>","From<T>","yoke::erased::ErasedArcCart"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3538\">source</a></span><a href=\"#impl-Hash-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3539\">source</a><a href=\"#method.hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","yoke::erased::ErasedArcCart"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3393\">source</a></span><a href=\"#impl-Ord-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3408\">source</a><a href=\"#method.cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class=\"docblock\"><p>Comparison for two <code>Arc</code>s.</p>\n<p>The two are compared by calling <code>cmp()</code> on their inner values.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::cmp::Ordering;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert_eq!</span>(Ordering::Less, five.cmp(<span class=\"kw-2\">&amp;</span>Arc::new(<span class=\"number\">6</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#980-982\">source</a></span><a href=\"#method.max\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1001-1003\">source</a></span><a href=\"#method.min\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1027-1029\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","yoke::erased::ErasedArcCart"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3259\">source</a></span><a href=\"#impl-PartialEq-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3278\">source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Equality for two <code>Arc</code>s.</p>\n<p>Two <code>Arc</code>s are equal if their inner values are equal, even if they are\nstored in different allocation.</p>\n<p>If <code>T</code> also implements <code>Eq</code> (implying reflexivity of equality),\ntwo <code>Arc</code>s that point to the same allocation are always equal.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert!</span>(five == Arc::new(<span class=\"number\">5</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3299\">source</a><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Inequality for two <code>Arc</code>s.</p>\n<p>Two <code>Arc</code>s are not equal if their inner values are not equal.</p>\n<p>If <code>T</code> also implements <code>Eq</code> (implying reflexivity of equality),\ntwo <code>Arc</code>s that point to the same value are always equal.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert!</span>(five != Arc::new(<span class=\"number\">6</span>));</code></pre></div>\n</div></details></div></details>","PartialEq","yoke::erased::ErasedArcCart"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3305\">source</a></span><a href=\"#impl-PartialOrd-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3320\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Partial comparison for two <code>Arc</code>s.</p>\n<p>The two are compared by calling <code>partial_cmp()</code> on their inner values.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">use </span>std::cmp::Ordering;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(Ordering::Less), five.partial_cmp(<span class=\"kw-2\">&amp;</span>Arc::new(<span class=\"number\">6</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3337\">source</a><a href=\"#method.lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Less-than comparison for two <code>Arc</code>s.</p>\n<p>The two are compared by calling <code>&lt;</code> on their inner values.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert!</span>(five &lt; Arc::new(<span class=\"number\">6</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3354\">source</a><a href=\"#method.le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>โLess than or equal toโ comparison for two <code>Arc</code>s.</p>\n<p>The two are compared by calling <code>&lt;=</code> on their inner values.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert!</span>(five &lt;= Arc::new(<span class=\"number\">5</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3371\">source</a><a href=\"#method.gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Greater-than comparison for two <code>Arc</code>s.</p>\n<p>The two are compared by calling <code>&gt;</code> on their inner values.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert!</span>(five &gt; Arc::new(<span class=\"number\">4</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3388\">source</a><a href=\"#method.ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>โGreater than or equal toโ comparison for two <code>Arc</code>s.</p>\n<p>The two are compared by calling <code>&gt;=</code> on their inner values.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::sync::Arc;\n\n<span class=\"kw\">let </span>five = Arc::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert!</span>(five &gt;= Arc::new(<span class=\"number\">5</span>));</code></pre></div>\n</div></details></div></details>","PartialOrd","yoke::erased::ErasedArcCart"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pointer-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3430\">source</a></span><a href=\"#impl-Pointer-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Pointer.html\" title=\"trait core::fmt::Pointer\">Pointer</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3431\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Pointer.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Pointer.html#tymethod.fmt\">Read more</a></div></details></div></details>","Pointer","yoke::erased::ErasedArcCart"],["<section id=\"impl-CartablePointerLike-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/yoke/cartable_ptr.rs.html#232-253\">source</a><a href=\"#impl-CartablePointerLike-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"yoke/cartable_ptr/trait.CartablePointerLike.html\" title=\"trait yoke::cartable_ptr::CartablePointerLike\">CartablePointerLike</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;</h3></section>","CartablePointerLike","yoke::erased::ErasedArcCart"],["<section id=\"impl-CloneStableDeref-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/stable_deref_trait/lib.rs.html#176\">source</a><a href=\"#impl-CloneStableDeref-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"stable_deref_trait/trait.CloneStableDeref.html\" title=\"trait stable_deref_trait::CloneStableDeref\">CloneStableDeref</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","CloneStableDeref","yoke::erased::ErasedArcCart"],["<section id=\"impl-CloneableCart-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/yoke/yoke.rs.html#687\">source</a><a href=\"#impl-CloneableCart-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"yoke/trait.CloneableCart.html\" title=\"trait yoke::CloneableCart\">CloneableCart</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;</h3></section>","CloneableCart","yoke::erased::ErasedArcCart"],["<section id=\"impl-CloneableCartablePointerLike-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/yoke/cartable_ptr.rs.html#259-270\">source</a><a href=\"#impl-CloneableCartablePointerLike-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"yoke/cartable_ptr/trait.CloneableCartablePointerLike.html\" title=\"trait yoke::cartable_ptr::CloneableCartablePointerLike\">CloneableCartablePointerLike</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;</h3></section>","CloneableCartablePointerLike","yoke::erased::ErasedArcCart"],["<section id=\"impl-CoerceUnsized%3CArc%3CU,+A%3E%3E-for-Arc%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#259\">source</a><a href=\"#impl-CoerceUnsized%3CArc%3CU,+A%3E%3E-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, U, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/unsize/trait.CoerceUnsized.html\" title=\"trait core::ops::unsize::CoerceUnsized\">CoerceUnsized</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U, A&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unsize.html\" title=\"trait core::marker::Unsize\">Unsize</a>&lt;U&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    U: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","CoerceUnsized<Arc<U, A>>","yoke::erased::ErasedArcCart"],["<section id=\"impl-DerefPure-for-Arc%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2190\">source</a><a href=\"#impl-DerefPure-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefPure.html\" title=\"trait core::ops::deref::DerefPure\">DerefPure</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","DerefPure","yoke::erased::ErasedArcCart"],["<section id=\"impl-DispatchFromDyn%3CArc%3CU%3E%3E-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#262\">source</a><a href=\"#impl-DispatchFromDyn%3CArc%3CU%3E%3E-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/unsize/trait.DispatchFromDyn.html\" title=\"trait core::ops::unsize::DispatchFromDyn\">DispatchFromDyn</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;U&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unsize.html\" title=\"trait core::marker::Unsize\">Unsize</a>&lt;U&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    U: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","DispatchFromDyn<Arc<U>>","yoke::erased::ErasedArcCart"],["<section id=\"impl-Eq-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3413\">source</a></span><a href=\"#impl-Eq-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section>","Eq","yoke::erased::ErasedArcCart"],["<section id=\"impl-PinCoerceUnsized-for-Arc%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#2184\">source</a><a href=\"#impl-PinCoerceUnsized-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/pin/trait.PinCoerceUnsized.html\" title=\"trait core::pin::PinCoerceUnsized\">PinCoerceUnsized</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","PinCoerceUnsized","yoke::erased::ErasedArcCart"],["<section id=\"impl-Send-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#251\">source</a></span><a href=\"#impl-Send-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section>","Send","yoke::erased::ErasedArcCart"],["<section id=\"impl-StableDeref-for-Arc%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/stable_deref_trait/lib.rs.html#174\">source</a><a href=\"#impl-StableDeref-for-Arc%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"stable_deref_trait/trait.StableDeref.html\" title=\"trait stable_deref_trait::StableDeref\">StableDeref</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","StableDeref","yoke::erased::ErasedArcCart"],["<section id=\"impl-Sync-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#253\">source</a></span><a href=\"#impl-Sync-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section>","Sync","yoke::erased::ErasedArcCart"],["<section id=\"impl-Unpin-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.33.0\">1.33.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#3854\">source</a></span><a href=\"#impl-Unpin-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","Unpin","yoke::erased::ErasedArcCart"],["<section id=\"impl-UnwindSafe-for-Arc%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.9.0\">1.9.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/sync.rs.html#256\">source</a></span><a href=\"#impl-UnwindSafe-for-Arc%3CT,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a>,</div></h3></section>","UnwindSafe","yoke::erased::ErasedArcCart"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[320228,563651,173869]}