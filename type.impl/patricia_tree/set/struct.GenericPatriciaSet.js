(function() {
    var type_impls = Object.fromEntries([["patricia_tree",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-GenericPatriciaSet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#278-284\">source</a><a href=\"#impl-Clone-for-GenericPatriciaSet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"patricia_tree/set/struct.GenericPatriciaSet.html\" title=\"struct patricia_tree::set::GenericPatriciaSet\">GenericPatriciaSet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#279-283\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","patricia_tree::set::PatriciaSet","patricia_tree::set::StringPatriciaSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-GenericPatriciaSet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#273-277\">source</a><a href=\"#impl-Debug-for-GenericPatriciaSet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"patricia_tree/trait.Bytes.html\" title=\"trait patricia_tree::Bytes\">Bytes</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"patricia_tree/set/struct.GenericPatriciaSet.html\" title=\"struct patricia_tree::set::GenericPatriciaSet\">GenericPatriciaSet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#274-276\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","patricia_tree::set::PatriciaSet","patricia_tree::set::StringPatriciaSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-GenericPatriciaSet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#285-289\">source</a><a href=\"#impl-Default-for-GenericPatriciaSet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"patricia_tree/set/struct.GenericPatriciaSet.html\" title=\"struct patricia_tree::set::GenericPatriciaSet\">GenericPatriciaSet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#286-288\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","patricia_tree::set::PatriciaSet","patricia_tree::set::StringPatriciaSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3CU%3E-for-GenericPatriciaSet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#309-318\">source</a><a href=\"#impl-Extend%3CU%3E-for-GenericPatriciaSet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"patricia_tree/trait.Bytes.html\" title=\"trait patricia_tree::Bytes\">Bytes</a>, U: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T::<a class=\"associatedtype\" href=\"patricia_tree/trait.Bytes.html#associatedtype.Borrowed\" title=\"type patricia_tree::Bytes::Borrowed\">Borrowed</a>&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;U&gt; for <a class=\"struct\" href=\"patricia_tree/set/struct.GenericPatriciaSet.html\" title=\"struct patricia_tree::set::GenericPatriciaSet\">GenericPatriciaSet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#310-317\">source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I&gt;(&amp;mut self, iter: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = U&gt;,</div></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#454\">source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#462\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<U>","patricia_tree::set::PatriciaSet","patricia_tree::set::StringPatriciaSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CU%3E-for-GenericPatriciaSet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#297-308\">source</a><a href=\"#impl-FromIterator%3CU%3E-for-GenericPatriciaSet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"patricia_tree/trait.Bytes.html\" title=\"trait patricia_tree::Bytes\">Bytes</a>, U: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T::<a class=\"associatedtype\" href=\"patricia_tree/trait.Bytes.html#associatedtype.Borrowed\" title=\"type patricia_tree::Bytes::Borrowed\">Borrowed</a>&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;U&gt; for <a class=\"struct\" href=\"patricia_tree/set/struct.GenericPatriciaSet.html\" title=\"struct patricia_tree::set::GenericPatriciaSet\">GenericPatriciaSet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#298-307\">source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I&gt;(iter: I) -&gt; Self<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = U&gt;,</div></h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<U>","patricia_tree::set::PatriciaSet","patricia_tree::set::StringPatriciaSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GenericPatriciaSet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#105-250\">source</a><a href=\"#impl-GenericPatriciaSet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"patricia_tree/trait.Bytes.html\" title=\"trait patricia_tree::Bytes\">Bytes</a>&gt; <a class=\"struct\" href=\"patricia_tree/set/struct.GenericPatriciaSet.html\" title=\"struct patricia_tree::set::GenericPatriciaSet\">GenericPatriciaSet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#118-120\">source</a><h4 class=\"code-header\">pub fn <a href=\"patricia_tree/set/struct.GenericPatriciaSet.html#tymethod.contains\" class=\"fn\">contains</a>&lt;U: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T::<a class=\"associatedtype\" href=\"patricia_tree/trait.Bytes.html#associatedtype.Borrowed\" title=\"type patricia_tree::Bytes::Borrowed\">Borrowed</a>&gt;&gt;(&amp;self, value: U) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if this set contains a value.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>patricia_tree::PatriciaSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = PatriciaSet::new();\nset.insert(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert!</span>(set.contains(<span class=\"string\">\"foo\"</span>));\n<span class=\"macro\">assert!</span>(!set.contains(<span class=\"string\">\"bar\"</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_longest_common_prefix\" class=\"method\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#139-144\">source</a><h4 class=\"code-header\">pub fn <a href=\"patricia_tree/set/struct.GenericPatriciaSet.html#tymethod.get_longest_common_prefix\" class=\"fn\">get_longest_common_prefix</a>&lt;'a, U&gt;(\n    &amp;self,\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a U</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'a T::<a class=\"associatedtype\" href=\"patricia_tree/trait.Bytes.html#associatedtype.Borrowed\" title=\"type patricia_tree::Bytes::Borrowed\">Borrowed</a>&gt;<div class=\"where\">where\n    U: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T::<a class=\"associatedtype\" href=\"patricia_tree/trait.Bytes.html#associatedtype.Borrowed\" title=\"type patricia_tree::Bytes::Borrowed\">Borrowed</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Finds the longest common prefix of <code>value</code> and the elements in this set.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>patricia_tree::PatriciaSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = PatriciaSet::new();\n\nset.insert(<span class=\"string\">\"foo\"</span>);\nset.insert(<span class=\"string\">\"foobar\"</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_longest_common_prefix(<span class=\"string\">\"fo\"</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(set.get_longest_common_prefix(<span class=\"string\">\"foo\"</span>), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>.as_bytes()));\n<span class=\"macro\">assert_eq!</span>(set.get_longest_common_prefix(<span class=\"string\">\"fooba\"</span>), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foo\"</span>.as_bytes()));\n<span class=\"macro\">assert_eq!</span>(set.get_longest_common_prefix(<span class=\"string\">\"foobar\"</span>), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foobar\"</span>.as_bytes()));\n<span class=\"macro\">assert_eq!</span>(set.get_longest_common_prefix(<span class=\"string\">\"foobarbaz\"</span>), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"foobar\"</span>.as_bytes()));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.longest_common_prefix_len\" class=\"method\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#165-170\">source</a><h4 class=\"code-header\">pub fn <a href=\"patricia_tree/set/struct.GenericPatriciaSet.html#tymethod.longest_common_prefix_len\" class=\"fn\">longest_common_prefix_len</a>&lt;U&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;U</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a><div class=\"where\">where\n    U: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T::<a class=\"associatedtype\" href=\"patricia_tree/trait.Bytes.html#associatedtype.Borrowed\" title=\"type patricia_tree::Bytes::Borrowed\">Borrowed</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Returns the longest common prefix length of <code>value</code> and the elements in this set.</p>\n<p>Unlike <code>get_longest_common_prefix()</code>, this method does not check if there is a element that matches the prefix in this set.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>patricia_tree::PatriciaSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = PatriciaSet::new();\nset.insert(<span class=\"string\">\"foo\"</span>);\nset.insert(<span class=\"string\">\"foobar\"</span>);\n<span class=\"macro\">assert_eq!</span>(set.longest_common_prefix_len(<span class=\"string\">\"fo\"</span>), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(set.longest_common_prefix_len(<span class=\"string\">\"foo\"</span>), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(set.longest_common_prefix_len(<span class=\"string\">\"fooba\"</span>), <span class=\"number\">5</span>);\n<span class=\"macro\">assert_eq!</span>(set.longest_common_prefix_len(<span class=\"string\">\"foobar\"</span>), <span class=\"number\">6</span>);\n<span class=\"macro\">assert_eq!</span>(set.longest_common_prefix_len(<span class=\"string\">\"foobarbaz\"</span>), <span class=\"number\">6</span>);\n<span class=\"macro\">assert_eq!</span>(set.longest_common_prefix_len(<span class=\"string\">\"foba\"</span>), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#187-189\">source</a><h4 class=\"code-header\">pub fn <a href=\"patricia_tree/set/struct.GenericPatriciaSet.html#tymethod.insert\" class=\"fn\">insert</a>&lt;U: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T::<a class=\"associatedtype\" href=\"patricia_tree/trait.Bytes.html#associatedtype.Borrowed\" title=\"type patricia_tree::Bytes::Borrowed\">Borrowed</a>&gt;&gt;(&amp;mut self, value: U) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Adds a value to this set.</p>\n<p>If the set did not have this value present, <code>true</code> is returned.\nIf the set did have this value present, <code>false</code> is returned, and the entry is not updated.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>patricia_tree::PatriciaSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = PatriciaSet::new();\n<span class=\"macro\">assert!</span>(set.insert(<span class=\"string\">\"foo\"</span>));\n<span class=\"macro\">assert!</span>(!set.insert(<span class=\"string\">\"foo\"</span>));\n<span class=\"macro\">assert_eq!</span>(set.len(), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#203-205\">source</a><h4 class=\"code-header\">pub fn <a href=\"patricia_tree/set/struct.GenericPatriciaSet.html#tymethod.remove\" class=\"fn\">remove</a>&lt;U: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T::<a class=\"associatedtype\" href=\"patricia_tree/trait.Bytes.html#associatedtype.Borrowed\" title=\"type patricia_tree::Bytes::Borrowed\">Borrowed</a>&gt;&gt;(&amp;mut self, value: U) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Removes a value from the set. Returns <code>true</code> is the value was present in this set.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>patricia_tree::PatriciaSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = PatriciaSet::new();\nset.insert(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(set.remove(<span class=\"string\">\"foo\"</span>), <span class=\"bool-val\">true</span>);\n<span class=\"macro\">assert_eq!</span>(set.remove(<span class=\"string\">\"foo\"</span>), <span class=\"bool-val\">false</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split_by_prefix\" class=\"method\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#227-231\">source</a><h4 class=\"code-header\">pub fn <a href=\"patricia_tree/set/struct.GenericPatriciaSet.html#tymethod.split_by_prefix\" class=\"fn\">split_by_prefix</a>&lt;U: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T::<a class=\"associatedtype\" href=\"patricia_tree/trait.Bytes.html#associatedtype.Borrowed\" title=\"type patricia_tree::Bytes::Borrowed\">Borrowed</a>&gt;&gt;(&amp;mut self, prefix: U) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Splits the set into two at the given prefix.</p>\n<p>The returned set contains all the entries that prefixed by <code>prefix</code>.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>patricia_tree::PatriciaSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>a = PatriciaSet::new();\na.insert(<span class=\"string\">\"rust\"</span>);\na.insert(<span class=\"string\">\"ruby\"</span>);\na.insert(<span class=\"string\">\"python\"</span>);\na.insert(<span class=\"string\">\"erlang\"</span>);\n\n<span class=\"kw\">let </span>b = a.split_by_prefix(<span class=\"string\">\"ru\"</span>);\n\n<span class=\"macro\">assert_eq!</span>(a.iter().collect::&lt;Vec&lt;<span class=\"kw\">_</span>&gt;&gt;(), [<span class=\"string\">b\"erlang\"</span>, <span class=\"string\">b\"python\"</span>]);\n<span class=\"macro\">assert_eq!</span>(b.iter().collect::&lt;Vec&lt;<span class=\"kw\">_</span>&gt;&gt;(), [<span class=\"string\">b\"ruby\"</span>, <span class=\"string\">b\"rust\"</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#247-249\">source</a><h4 class=\"code-header\">pub fn <a href=\"patricia_tree/set/struct.GenericPatriciaSet.html#tymethod.iter\" class=\"fn\">iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"patricia_tree/set/struct.Iter.html\" title=\"struct patricia_tree::set::Iter\">Iter</a>&lt;'_, T&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;&#39;_, T&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Gets an iterator over the contents of this set, in sorted order.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>patricia_tree::PatriciaSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = PatriciaSet::new();\nset.insert(<span class=\"string\">\"foo\"</span>);\nset.insert(<span class=\"string\">\"bar\"</span>);\nset.insert(<span class=\"string\">\"baz\"</span>);\n\n<span class=\"macro\">assert_eq!</span>(set.iter().collect::&lt;Vec&lt;<span class=\"kw\">_</span>&gt;&gt;(), [Vec::from(<span class=\"string\">\"bar\"</span>), <span class=\"string\">\"baz\"</span>.into(), <span class=\"string\">\"foo\"</span>.into()]);</code></pre></div>\n</div></details></div></details>",0,"patricia_tree::set::PatriciaSet","patricia_tree::set::StringPatriciaSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GenericPatriciaSet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#19-104\">source</a><a href=\"#impl-GenericPatriciaSet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"patricia_tree/set/struct.GenericPatriciaSet.html\" title=\"struct patricia_tree::set::GenericPatriciaSet\">GenericPatriciaSet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#30-34\">source</a><h4 class=\"code-header\">pub fn <a href=\"patricia_tree/set/struct.GenericPatriciaSet.html#tymethod.new\" class=\"fn\">new</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Makes a new empty <a href=\"patricia_tree/set/struct.GenericPatriciaSet.html\" title=\"struct patricia_tree::set::GenericPatriciaSet\"><code>GenericPatriciaSet</code></a> instance.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>patricia_tree::PatriciaSet;\n\n<span class=\"kw\">let </span>set = PatriciaSet::new();\n<span class=\"macro\">assert!</span>(set.is_empty());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#48-50\">source</a><h4 class=\"code-header\">pub fn <a href=\"patricia_tree/set/struct.GenericPatriciaSet.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of elements in this set.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>patricia_tree::PatriciaSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = PatriciaSet::new();\nset.insert(<span class=\"string\">\"foo\"</span>);\nset.insert(<span class=\"string\">\"bar\"</span>);\n<span class=\"macro\">assert_eq!</span>(set.len(), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#68-70\">source</a><h4 class=\"code-header\">pub fn <a href=\"patricia_tree/set/struct.GenericPatriciaSet.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if this set contains no elements.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>patricia_tree::PatriciaSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = PatriciaSet::new();\n<span class=\"macro\">assert!</span>(set.is_empty());\n\nset.insert(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert!</span>(!set.is_empty());\n\nset.clear();\n<span class=\"macro\">assert!</span>(set.is_empty());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#84-86\">source</a><h4 class=\"code-header\">pub fn <a href=\"patricia_tree/set/struct.GenericPatriciaSet.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clears this set, removing all values.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>patricia_tree::PatriciaSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = PatriciaSet::new();\nset.insert(<span class=\"string\">\"foo\"</span>);\nset.clear();\n<span class=\"macro\">assert!</span>(set.is_empty());</code></pre></div>\n</div></details></div></details>",0,"patricia_tree::set::PatriciaSet","patricia_tree::set::StringPatriciaSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GenericPatriciaSet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#251-272\">source</a><a href=\"#impl-GenericPatriciaSet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"patricia_tree/trait.Bytes.html\" title=\"trait patricia_tree::Bytes\">Bytes</a>&gt; <a class=\"struct\" href=\"patricia_tree/set/struct.GenericPatriciaSet.html\" title=\"struct patricia_tree::set::GenericPatriciaSet\">GenericPatriciaSet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_prefix\" class=\"method\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#266-271\">source</a><h4 class=\"code-header\">pub fn <a href=\"patricia_tree/set/struct.GenericPatriciaSet.html#tymethod.iter_prefix\" class=\"fn\">iter_prefix</a>&lt;'a, 'b&gt;(\n    &amp;'a self,\n    prefix: &amp;'b T::<a class=\"associatedtype\" href=\"patricia_tree/trait.Bytes.html#associatedtype.Borrowed\" title=\"type patricia_tree::Bytes::Borrowed\">Borrowed</a>,\n) -&gt; impl 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = T&gt;<div class=\"where\">where\n    'b: 'a,</div></h4></section></summary><div class=\"docblock\"><p>Gets an iterator over the contents having the given prefix of this set, in sorted order.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>patricia_tree::PatriciaSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = PatriciaSet::new();\nset.insert(<span class=\"string\">\"foo\"</span>);\nset.insert(<span class=\"string\">\"bar\"</span>);\nset.insert(<span class=\"string\">\"baz\"</span>);\n\n<span class=\"macro\">assert_eq!</span>(set.iter_prefix(<span class=\"string\">b\"ba\"</span>).collect::&lt;Vec&lt;<span class=\"kw\">_</span>&gt;&gt;(), [Vec::from(<span class=\"string\">\"bar\"</span>), <span class=\"string\">\"baz\"</span>.into()]);</code></pre></div>\n</div></details></div></details>",0,"patricia_tree::set::PatriciaSet","patricia_tree::set::StringPatriciaSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-GenericPatriciaSet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#290-296\">source</a><a href=\"#impl-IntoIterator-for-GenericPatriciaSet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"patricia_tree/trait.Bytes.html\" title=\"trait patricia_tree::Bytes\">Bytes</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"patricia_tree/set/struct.GenericPatriciaSet.html\" title=\"struct patricia_tree::set::GenericPatriciaSet\">GenericPatriciaSet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#291\">source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#292\">source</a><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"patricia_tree/set/struct.IntoIter.html\" title=\"struct patricia_tree::set::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/patricia_tree/set.rs.html#293-295\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","patricia_tree::set::PatriciaSet","patricia_tree::set::StringPatriciaSet"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[36296]}