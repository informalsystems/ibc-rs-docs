(function() {var type_impls = {
"bitcoin":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Xpriv\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin/bip32.rs.html#75\">source</a><a href=\"#impl-Clone-for-Xpriv\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"bitcoin/bip32/struct.Xpriv.html\" title=\"struct bitcoin::bip32::Xpriv\">Xpriv</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin/bip32.rs.html#75\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bitcoin/bip32/struct.Xpriv.html\" title=\"struct bitcoin::bip32::Xpriv\">Xpriv</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","bitcoin::bip32::ExtendendPrivKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Xpriv\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin/bip32.rs.html#76\">source</a><a href=\"#impl-Debug-for-Xpriv\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"bitcoin/bip32/struct.Xpriv.html\" title=\"struct bitcoin::bip32::Xpriv\">Xpriv</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin/bip32.rs.html#76\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","bitcoin::bip32::ExtendendPrivKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Xpriv\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin/bip32.rs.html#92\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Xpriv\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"bitcoin/bip32/struct.Xpriv.html\" title=\"struct bitcoin::bip32::Xpriv\">Xpriv</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin/bip32.rs.html#92\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(deserializer: D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"bitcoin/bip32/struct.Xpriv.html\" title=\"struct bitcoin::bip32::Xpriv\">Xpriv</a>, D::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","bitcoin::bip32::ExtendendPrivKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Xpriv\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin/bip32.rs.html#837-841\">source</a><a href=\"#impl-Display-for-Xpriv\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"bitcoin/bip32/struct.Xpriv.html\" title=\"struct bitcoin::bip32::Xpriv\">Xpriv</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin/bip32.rs.html#838-840\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","bitcoin::bip32::ExtendendPrivKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-Xpriv\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin/bip32.rs.html#843-855\">source</a><a href=\"#impl-FromStr-for-Xpriv\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"struct\" href=\"bitcoin/bip32/struct.Xpriv.html\" title=\"struct bitcoin::bip32::Xpriv\">Xpriv</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"enum\" href=\"bitcoin/bip32/enum.Error.html\" title=\"enum bitcoin::bip32::Error\">Error</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin/bip32.rs.html#846-854\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(inp: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"bitcoin/bip32/struct.Xpriv.html\" title=\"struct bitcoin::bip32::Xpriv\">Xpriv</a>, <a class=\"enum\" href=\"bitcoin/bip32/enum.Error.html\" title=\"enum bitcoin::bip32::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","bitcoin::bip32::ExtendendPrivKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetKey-for-Xpriv\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin/psbt/mod.rs.html#579-600\">source</a><a href=\"#impl-GetKey-for-Xpriv\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bitcoin/psbt/trait.GetKey.html\" title=\"trait bitcoin::psbt::GetKey\">GetKey</a> for <a class=\"struct\" href=\"bitcoin/bip32/struct.Xpriv.html\" title=\"struct bitcoin::bip32::Xpriv\">Xpriv</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bitcoin/psbt/trait.GetKey.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"bitcoin/psbt/enum.GetKeyError.html\" title=\"enum bitcoin::psbt::GetKeyError\">GetKeyError</a></h4></section></summary><div class='docblock'>An error occurred while getting the key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_key\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin/psbt/mod.rs.html#582-599\">source</a><a href=\"#method.get_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bitcoin/psbt/trait.GetKey.html#tymethod.get_key\" class=\"fn\">get_key</a>&lt;C: <a class=\"trait\" href=\"secp256k1/context/trait.Signing.html\" title=\"trait secp256k1::context::Signing\">Signing</a>&gt;(\n    &amp;self,\n    key_request: <a class=\"enum\" href=\"bitcoin/psbt/enum.KeyRequest.html\" title=\"enum bitcoin::psbt::KeyRequest\">KeyRequest</a>,\n    secp: &amp;<a class=\"struct\" href=\"bitcoin/key/struct.Secp256k1.html\" title=\"struct bitcoin::key::Secp256k1\">Secp256k1</a>&lt;C&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"bitcoin/key/struct.PrivateKey.html\" title=\"struct bitcoin::key::PrivateKey\">PrivateKey</a>&gt;, Self::<a class=\"associatedtype\" href=\"bitcoin/psbt/trait.GetKey.html#associatedtype.Error\" title=\"type bitcoin::psbt::GetKey::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Attempts to get the private key for <code>key_request</code>. <a href=\"bitcoin/psbt/trait.GetKey.html#tymethod.get_key\">Read more</a></div></details></div></details>","GetKey","bitcoin::bip32::ExtendendPrivKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Xpriv\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin/bip32.rs.html#75\">source</a><a href=\"#impl-PartialEq-for-Xpriv\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"bitcoin/bip32/struct.Xpriv.html\" title=\"struct bitcoin::bip32::Xpriv\">Xpriv</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin/bip32.rs.html#75\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"bitcoin/bip32/struct.Xpriv.html\" title=\"struct bitcoin::bip32::Xpriv\">Xpriv</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","bitcoin::bip32::ExtendendPrivKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Xpriv\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin/bip32.rs.html#92\">source</a><a href=\"#impl-Serialize-for-Xpriv\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"bitcoin/bip32/struct.Xpriv.html\" title=\"struct bitcoin::bip32::Xpriv\">Xpriv</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin/bip32.rs.html#92\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(&amp;self, serializer: S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;S::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, S::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","bitcoin::bip32::ExtendendPrivKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Xpriv\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin/bip32.rs.html#566-702\">source</a><a href=\"#impl-Xpriv\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"bitcoin/bip32/struct.Xpriv.html\" title=\"struct bitcoin::bip32::Xpriv\">Xpriv</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_master\" class=\"method\"><a class=\"src rightside\" href=\"src/bitcoin/bip32.rs.html#568-581\">source</a><h4 class=\"code-header\">pub fn <a href=\"bitcoin/bip32/struct.Xpriv.html#tymethod.new_master\" class=\"fn\">new_master</a>(network: <a class=\"enum\" href=\"bitcoin/network/enum.Network.html\" title=\"enum bitcoin::network::Network\">Network</a>, seed: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"bitcoin/bip32/struct.Xpriv.html\" title=\"struct bitcoin::bip32::Xpriv\">Xpriv</a>, <a class=\"enum\" href=\"bitcoin/bip32/enum.Error.html\" title=\"enum bitcoin::bip32::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Construct a new master key from a seed value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_priv\" class=\"method\"><a class=\"src rightside\" href=\"src/bitcoin/bip32.rs.html#584-586\">source</a><h4 class=\"code-header\">pub fn <a href=\"bitcoin/bip32/struct.Xpriv.html#tymethod.to_priv\" class=\"fn\">to_priv</a>(self) -&gt; <a class=\"struct\" href=\"bitcoin/key/struct.PrivateKey.html\" title=\"struct bitcoin::key::PrivateKey\">PrivateKey</a></h4></section></summary><div class=\"docblock\"><p>Constructs ECDSA compressed private key matching internal secret key representation.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_keypair\" class=\"method\"><a class=\"src rightside\" href=\"src/bitcoin/bip32.rs.html#590-593\">source</a><h4 class=\"code-header\">pub fn <a href=\"bitcoin/bip32/struct.Xpriv.html#tymethod.to_keypair\" class=\"fn\">to_keypair</a>&lt;C: <a class=\"trait\" href=\"secp256k1/context/trait.Signing.html\" title=\"trait secp256k1::context::Signing\">Signing</a>&gt;(self, secp: &amp;<a class=\"struct\" href=\"bitcoin/key/struct.Secp256k1.html\" title=\"struct bitcoin::key::Secp256k1\">Secp256k1</a>&lt;C&gt;) -&gt; <a class=\"struct\" href=\"bitcoin/key/struct.Keypair.html\" title=\"struct bitcoin::key::Keypair\">Keypair</a></h4></section></summary><div class=\"docblock\"><p>Constructs BIP340 keypair for Schnorr signatures and Taproot use matching the internal\nsecret key representation.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.derive_priv\" class=\"method\"><a class=\"src rightside\" href=\"src/bitcoin/bip32.rs.html#598-608\">source</a><h4 class=\"code-header\">pub fn <a href=\"bitcoin/bip32/struct.Xpriv.html#tymethod.derive_priv\" class=\"fn\">derive_priv</a>&lt;C: <a class=\"trait\" href=\"secp256k1/context/trait.Signing.html\" title=\"trait secp256k1::context::Signing\">Signing</a>, P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"enum\" href=\"bitcoin/bip32/enum.ChildNumber.html\" title=\"enum bitcoin::bip32::ChildNumber\">ChildNumber</a>]&gt;&gt;(\n    &amp;self,\n    secp: &amp;<a class=\"struct\" href=\"bitcoin/key/struct.Secp256k1.html\" title=\"struct bitcoin::key::Secp256k1\">Secp256k1</a>&lt;C&gt;,\n    path: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;P</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"bitcoin/bip32/struct.Xpriv.html\" title=\"struct bitcoin::bip32::Xpriv\">Xpriv</a>, <a class=\"enum\" href=\"bitcoin/bip32/enum.Error.html\" title=\"enum bitcoin::bip32::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to derive an extended private key from a path.</p>\n<p>The <code>path</code> argument can be both of type <code>DerivationPath</code> or <code>Vec&lt;ChildNumber&gt;</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method\"><a class=\"src rightside\" href=\"src/bitcoin/bip32.rs.html#649-675\">source</a><h4 class=\"code-header\">pub fn <a href=\"bitcoin/bip32/struct.Xpriv.html#tymethod.decode\" class=\"fn\">decode</a>(data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"bitcoin/bip32/struct.Xpriv.html\" title=\"struct bitcoin::bip32::Xpriv\">Xpriv</a>, <a class=\"enum\" href=\"bitcoin/bip32/enum.Error.html\" title=\"enum bitcoin::bip32::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Decoding extended private key from binary data according to BIP 32</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method\"><a class=\"src rightside\" href=\"src/bitcoin/bip32.rs.html#678-691\">source</a><h4 class=\"code-header\">pub fn <a href=\"bitcoin/bip32/struct.Xpriv.html#tymethod.encode\" class=\"fn\">encode</a>(&amp;self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">78</a>]</h4></section></summary><div class=\"docblock\"><p>Extended private key binary encoding according to BIP 32</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.identifier\" class=\"method\"><a class=\"src rightside\" href=\"src/bitcoin/bip32.rs.html#694-696\">source</a><h4 class=\"code-header\">pub fn <a href=\"bitcoin/bip32/struct.Xpriv.html#tymethod.identifier\" class=\"fn\">identifier</a>&lt;C: <a class=\"trait\" href=\"secp256k1/context/trait.Signing.html\" title=\"trait secp256k1::context::Signing\">Signing</a>&gt;(&amp;self, secp: &amp;<a class=\"struct\" href=\"bitcoin/key/struct.Secp256k1.html\" title=\"struct bitcoin::key::Secp256k1\">Secp256k1</a>&lt;C&gt;) -&gt; <a class=\"struct\" href=\"bitcoin/bip32/struct.XKeyIdentifier.html\" title=\"struct bitcoin::bip32::XKeyIdentifier\">XKeyIdentifier</a></h4></section></summary><div class=\"docblock\"><p>Returns the HASH160 of the public key belonging to the xpriv</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fingerprint\" class=\"method\"><a class=\"src rightside\" href=\"src/bitcoin/bip32.rs.html#699-701\">source</a><h4 class=\"code-header\">pub fn <a href=\"bitcoin/bip32/struct.Xpriv.html#tymethod.fingerprint\" class=\"fn\">fingerprint</a>&lt;C: <a class=\"trait\" href=\"secp256k1/context/trait.Signing.html\" title=\"trait secp256k1::context::Signing\">Signing</a>&gt;(&amp;self, secp: &amp;<a class=\"struct\" href=\"bitcoin/key/struct.Secp256k1.html\" title=\"struct bitcoin::key::Secp256k1\">Secp256k1</a>&lt;C&gt;) -&gt; <a class=\"struct\" href=\"bitcoin/bip32/struct.Fingerprint.html\" title=\"struct bitcoin::bip32::Fingerprint\">Fingerprint</a></h4></section></summary><div class=\"docblock\"><p>Returns the first four bytes of the identifier</p>\n</div></details></div></details>",0,"bitcoin::bip32::ExtendendPrivKey"],["<section id=\"impl-Copy-for-Xpriv\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin/bip32.rs.html#75\">source</a><a href=\"#impl-Copy-for-Xpriv\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"bitcoin/bip32/struct.Xpriv.html\" title=\"struct bitcoin::bip32::Xpriv\">Xpriv</a></h3></section>","Copy","bitcoin::bip32::ExtendendPrivKey"],["<section id=\"impl-Eq-for-Xpriv\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin/bip32.rs.html#75\">source</a><a href=\"#impl-Eq-for-Xpriv\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"bitcoin/bip32/struct.Xpriv.html\" title=\"struct bitcoin::bip32::Xpriv\">Xpriv</a></h3></section>","Eq","bitcoin::bip32::ExtendendPrivKey"],["<section id=\"impl-StructuralPartialEq-for-Xpriv\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin/bip32.rs.html#75\">source</a><a href=\"#impl-StructuralPartialEq-for-Xpriv\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"bitcoin/bip32/struct.Xpriv.html\" title=\"struct bitcoin::bip32::Xpriv\">Xpriv</a></h3></section>","StructuralPartialEq","bitcoin::bip32::ExtendendPrivKey"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()