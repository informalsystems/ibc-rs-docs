searchState.loadedDescShard("ed25519_dalek_bip32", 0, "A simple BIP32 implementation for ed25519 public keys. …\nAn index in a DerivationPath\nA list of ChildIndex items\nContains the error value\nErrors thrown while deriving secret keys\nAn expanded secret key with chain code and meta data\nContains the success value\nA convenience wrapper for a <code>core::result::Result</code> with an …\ned25519 signing key which can be used to produce …\nAn ed25519 public key.\nConvert this <code>SigningKey</code> into a <code>SecretKey</code> reference\nView this public key as a byte array.\nBuild a BIP32 style DerivationPath. This will fail if the …\nBuild a BIP44 style DerivationPath: …\nBuild a BIP49 style DerivationPath: …\nChain code\nChild index of the key used to derive from parent (…\nHow many derivations this key is from the root (0 for root)\nDerive an extended secret key fom the current using a …\nDerive a child extended secret key with an index\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDerive this public key from its corresponding …\nBuild a ChildIndex from a u32 representing the type and a …\nConstruct a <code>SigningKey</code> from a <code>SecretKey</code>\nConstruct a <code>VerifyingKey</code> from a slice of bytes.\nConstruct a <code>SigningKey</code> from the bytes of a <code>VerifyingKey</code> …\nCreate a new extended secret key from a seed\nGenerate an ed25519 signing key.\nCreate a ChildIndex::Hardened instance from a u32. This …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if the ChildIndex is “hardened”\nCheck if the ChildIndex is “normal”\nReturns whether this is a <em>weak</em> public key, i.e., if this …\nBuild a DerivationPath from a list of ChildIndex items\nCreate a ChildIndex::Normal instance from a u32. This will …\nGet a reference to the list of ChildIndex items\nGet the DerivationPathType. This will check the “purpose…\nSigning Key\nConvert ChildIndex to a u32 representing the type and a 31 …\nConvert this <code>SigningKey</code> into a <code>SecretKey</code>\nConvert this public key to a byte array.\nConvert this signing key to a 64-byte keypair.\nConvert this verifying key into Montgomery form.\nConvert this signing key into a Curve25519 scalar. This is …\nConvert this signing key into a byte representation of an …\nConvert ChildIndex to its inner u32\nSign a message with this signing key’s secret key.\nVerify a signature on a message with this signing key’s …\nVerify a signature on a message with this signing key’s …\nVerify a signature on a message with this keypair’s …\nStrictly verify a signature on a message with this signing …\nStrictly verify a signature on a message with this keypair…\nGet the associated verifying key\nGet the <code>VerifyingKey</code> for this <code>SigningKey</code>.")