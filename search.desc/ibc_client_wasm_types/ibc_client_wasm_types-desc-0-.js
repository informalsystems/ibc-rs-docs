searchState.loadedDescShard("ibc_client_wasm_types", 0, "Definitions of domain types used in the ICS-08 Wasm light …\nDefines the client message type for the ICS-08 Wasm light …\nDefines the client state type for the ICS-08 Wasm light …\nReturns the wasm <code>ClientType</code>\nDefines the consensus state type for the ICS-08 Wasm light …\nContains definitions of message types for the ICS-08 Wasm …\nRe-exports ICS-08 Wasm light client proto types from …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDefines the message type for migrating a Wasm contract on …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDefines the message type for removing a checksum from the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDefines the message type for storing the Wasm byte code on …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nChecksums defines a list of all checksums that are stored\nWasm light client message (either header(s) or …\nWasm light client’s Client state\nWasm light client’s ConsensusState\nContract stores contract code\nGenesisState defines 08-wasm’s keeper genesis state\nMsgMigrateContract defines the request type for the …\nMsgMigrateContractResponse defines the response type for …\nMsgRemoveChecksum defines the request type for the …\nMsgStoreChecksumResponse defines the response type for the …\nMsgStoreCode defines the request type for the StoreCode …\nMsgStoreCodeResponse defines the response type for the …\nQueryChecksumsRequest is the request type for the …\nQueryChecksumsResponse is the response type for the …\nQueryCodeRequest is the request type for the Query/Code …\nQueryCodeResponse is the response type for the Query/Code …\nchecksum is the sha256 hash of the stored code\nchecksum is the sha256 hash to be removed from the store\nchecksum is the sha256 hash of the new wasm byte code for …\nchecksum is a hex encoded string of the code stored.\nchecksums is a list of the hex encoded checksums of all …\nthe client id of the contract\ncontract byte code\nuploaded light client wasm contracts\nbytes encoding the client state of the underlying light …\nbytes encoding the consensus state of the underlying light …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nthe json encoded message to be passed to the contract on …\nGenerated client implementations.\nGenerated server implementations.\npagination defines an optional pagination for the request.\npagination defines the pagination in the response.\nGenerated client implementations.\nGenerated server implementations.\nsigner address\nsigner address\nsigner address\nwasm byte code of light client contract. It can be raw or …\nMsg defines the ibc/08-wasm Msg service.\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nMigrateContract defines a rpc handler method for …\nRemoveChecksum defines a rpc handler method for …\nCompress requests with the given encoding.\nStoreCode defines a rpc handler method for MsgStoreCode.\nGenerated trait containing gRPC methods that should be …\nMsg defines the ibc/08-wasm Msg service.\nEnable decompressing requests with the given encoding.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nMigrateContract defines a rpc handler method for …\nRemoveChecksum defines a rpc handler method for …\nCompress responses with the given encoding, if the client …\nStoreCode defines a rpc handler method for MsgStoreCode.\nQuery service for wasm module\nEnable decompressing responses.\nGet all Wasm checksums\nGet Wasm code for given checksum\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nGenerated trait containing gRPC methods that should be …\nQuery service for wasm module\nEnable decompressing requests with the given encoding.\nGet all Wasm checksums\nGet Wasm code for given checksum\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress responses with the given encoding, if the client …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")