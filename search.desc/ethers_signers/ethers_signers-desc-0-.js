searchState.loadedDescShard("ethers_signers", 0, "ethers-signers\nError propagated from the BIP-32 crate\nError propagated from the BIP-39 crate\nError propagated from k256’s ECDSA module\nError type from Eip712Error message\nUnderlying eth keystore error\nError propagated from the hex crate.\nError propagated by IO operations\nA wallet instantiated with a locally stored private key\nRepresents a structure that can resolve into a …\nError propagated from the mnemonic builder module.\nTrait for signing transactions and messages\nAn Ethereum private-public key pair which can be used for …\nError thrown by the Wallet module\nReturns the signer’s Ethereum Address\nBuilds a <code>LocalWallet</code> using the parameters set in mnemonic …\nBuilds a <code>LocalWallet</code> using the parameters set in the …\nReturns the signer’s chain id\nGets the wallet’s chain id\nRe-export the BIP-32 crate so that wordlists can be …\nDecrypts an encrypted JSON from the provided path to …\nSets the derivation path of the child key to be derived.\nCreates a new encrypted JSON with the provided private key …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new Wallet instance from a raw scalar value (big …\nSets the derivation path of the child key to be derived. …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new random keypair seeded with the provided RNG\nCreates a new random encrypted JSON with the provided …\nConstruct a new wallet with an external Signer\nSets the password used to construct the seed from the …\nSets the phrase in the mnemonic builder. The phrase can …\nSigns the provided hash.\nSigns the hash of the provided message after prefixing it\nSigns the transaction\nSynchronously signs the provided transaction, normalizing …\nEncodes and signs the typed data according EIP-712. …\nGets the wallet’s signer\nApplies EIP155\nSets the signer’s chain id\nSets the wallet’s chain_id, used in conjunction with …\nSets the word count of a mnemonic phrase to be generated …\nSets the path to which the randomly generated phrase will …")