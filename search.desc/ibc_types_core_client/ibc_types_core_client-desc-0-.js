searchState.loadedDescShard("ibc_types_core_client", 0, "IBC client-related types.\nmismatch between client and arguments types\nclient is frozen: <code>{client_id}</code>\nAn IBC client identifier.\nClient identifier constructor failed for type <code>{client_type}</code>…\nclient not found: <code>{client_id}</code>\nclient specific error: <code>{description}</code>\nType of the client, depending on the specific consensus …\nconsensus state not found at: <code>{client_id}</code> at height …\ndecode error: <code>{0}</code>\nempty prefix\nEncode error: <code>{0}</code>\nA catch-all error type.\nfailed to build Tendermint domain type trust threshold …\nheader not within trusting period: expires_at=<code>{latest_time}</code>…\nheader verification failed with reason: <code>{reason}</code>\nAn IBC height, containing a revision number (epoch) and a …\ncannot convert into a <code>Height</code> type from string <code>{height}</code>\nAn error while parsing a <code>Height</code>.\nimplementation specific error\ninvalid any client consensus state error: <code>{0}</code>\ninvalid channel end error: <code>{0}</code>\ninvalid client identifier error: <code>{0}</code>\ninvalid connection end error: <code>{0}</code>\ntimestamp is invalid or missing, timestamp=<code>{time1}</code>,  now=…\nattempted to parse a height with invalid format (not in …\nrevision height cannot be zero\nheight cannot end up zero or negative\ninvalid client id in the update client message: <code>{0}</code>\ninvalid packet timeout timestamp value error: <code>{0}</code>\ninvalid raw header error: <code>{0}</code>\ninvalid raw misbehaviour error: <code>{0}</code>\nfailed to build trust threshold from fraction: <code>{numerator}</code>/…\ninvalid proof for the upgraded client state error: <code>{0}</code>\ninvalid proof for the upgraded consensus state error: <code>{0}</code>\nreceived header height (<code>{header_height}</code>) is lower than (or …\nupgraded client height <code>{upgraded_height}</code> must be at …\nmisbehaviour handling failed with reason: <code>{reason}</code>\nthe local consensus state could not be retrieved for …\nmissing raw client message\nmissing raw client state\nmissing raw client consensus state\nmissing raw header\nmissing raw misbehaviour\nother error: <code>{description}</code>\nunknown client state type: <code>{client_state_type}</code>\nunknown client consensus state type: <code>{consensus_state_type}</code>\nunknown header type: <code>{header_type}</code>\nunknown misbehaviour type: <code>{misbehaviour_type}</code>\nattempted to parse an invalid zero height\nGet this identifier as a borrowed byte slice\nGet this identifier as a borrowed <code>&amp;str</code>\nYields this identifier as a borrowed <code>&amp;str</code>\nTypes for ABCI <code>Event</code>s that inform relayers about IBC …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDefinitions of client-related messages that a relayer …\nConstruct a new client identifier from a client type and a …\nThe height of a block\nPreviously known as “epoch”\nClientMisbehaviour event signals the update of an on-chain …\nCreateClient event signals the creation of a new on-chain …\nAn error while parsing an <code>Event</code>.\nMissing expected event attribute “{0}”\nError parsing height in “{key}”: {e}\nError parsing hex bytes in “{key}”: {e}\nUnexpected event attribute “{0}”\nUpdateClient event signals a recent update of an on-chain …\nSignals a recent upgrade of an on-chain client (IBC …\nWrong event type: expected {expected}\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThis can’t be an Any because we don’t have a type URL.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA type of message that triggers the creation of a new …\nA type of message that submits client misbehaviour proof.\nA type of message that triggers the update of an on-chain …\nA type of message that triggers the upgrade of an on-chain …\nclient unique identifier\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nmisbehaviour used for freezing the light client\nsigner address")