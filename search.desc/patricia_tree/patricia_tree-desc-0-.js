searchState.loadedDescShard("patricia_tree", 0, "Memory-efficient data structures based on patricia tree …\nBorrowed type of this type.\nBorrowed type of <code>Bytes</code>.\nThis trait represents a bytes type that can be used as the …\nReturns the byte representation of this instance.\nCompares the first item of this instance with the first …\nConverts the given bytes to an instance of this type.\nReturns <code>true</code> if this instance is empty, otherwise <code>false</code>.\nReturns <code>true</code> if the given bytes is a valid representation …\nA map based on a patricia tree.\nA set based on a patricia tree.\nReturns a suffix of this instance not containing the …\nSame as [<code>strip_common_prefix()</code>], but also returns the …\nReturns a suffix of this instance not containing the first …\nAn iterator over entries in a <code>PatriciaMap</code> that share a …\nPatricia tree based map.\nAn owning iterator over a <code>PatriciaMap</code>’s entries.\nAn iterator over a <code>PatriciaMap</code>’s entries.\nA mutable iterator over a <code>PatriciaMap</code>’s entries.\nAn iterator over a <code>PatriciaMap</code>’s keys.\nPatricia tree based map with <code>Vec&lt;u8&gt;</code> as key.\nPatricia tree based map with <code>String</code> as key.\nAn iterator over a <code>PatriciaMap</code>’s values.\nA mutable iterator over a <code>PatriciaMap</code>’s values.\nClears this map, removing all values.\nReturns an iterator that collects all values of entries in …\nReturns an iterator that collects all entries in the map …\nReturns <code>true</code> if this map contains a value for the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a reference to the value corresponding to the key.\nFinds the longest common prefix of <code>key</code> and the keys in …\nFinds the longest common prefix of <code>key</code> and the keys in …\nReturns a mutable reference to the value corresponding to …\nInserts a key-value pair into this map.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if this map contains no elements.\nGets an iterator over the entries of this map, sorted by …\nGets a mutable iterator over the entries of this map, …\nGets an iterator over the entries having the given prefix …\nGets a mutable iterator over the entries having the given …\nGets an iterator over the keys of this map, in sorted …\nReturns the number of elements in this map.\nReturns the longest common prefix length of <code>key</code> and the …\nMakes a new empty <code>PatriciaMap</code> instance.\nRemoves a key from this map, returning the value at the …\nSplits the map into two at the given prefix.\nGets an iterator over the values of this map, in order by …\nGets a mutable iterator over the values of this map, in …\nPatricia tree based set.\nAn owning iterator over a <code>PatriciaSet</code>’s items.\nAn Iterator over a <code>PatriciaSet</code>’s items.\nPatricia tree based set with <code>Vec&lt;u8&gt;</code> as key.\nPatricia tree based set with <code>String</code> as key.\nClears this set, removing all values.\nReturns <code>true</code> if this set contains a value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFinds the longest common prefix of <code>value</code> and the elements …\nAdds a value to this set.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if this set contains no elements.\nGets an iterator over the contents of this set, in sorted …\nGets an iterator over the contents having the given prefix …\nReturns the number of elements in this set.\nReturns the longest common prefix length of <code>value</code> and the …\nMakes a new empty <code>GenericPatriciaSet</code> instance.\nRemoves a value from the set. Returns <code>true</code> is the value …\nSplits the set into two at the given prefix.")