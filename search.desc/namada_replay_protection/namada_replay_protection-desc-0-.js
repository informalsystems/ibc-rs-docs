searchState.loadedDescShard("namada_replay_protection", 0, "Replay protection storage keys\nA storage key is made of storage key segments <code>DbKeySeg</code>, …\nGet the key under which we store a hash which is commitment\nGet the transaction hash key under the <code>current</code> subkey\nGet the transaction hash prefix under the <code>current</code> subkey\nReturns the addresses from the key segments\nReturns the first segment of the key, or <code>None</code> if it is …\nReturns the argument unchanged.\nReturns the address from the first key segment if it’s …\nReturn the segment at the index parameter\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the key is empty\nCheck if the given key is a key to a validity predicate. …\nIterates over all addresses in the key segments\nReturns a new key with segments of <code>Self</code> and the given key\nGet the transaction hash key\nReturns the last segment of the key, or <code>None</code> if it is …\nReturns the length\nParses string and returns a key\nReturns a key from the given DB key path that has the …\nReturns a new key with segments of <code>Self</code> and the given …\nThe segments of the key in the original (left-to-right) …\nReturns the prefix before the last segment and last …\nCheck if the key begins with the given prefix and returns:\nReturns a sub key without the first segment\nReturns a key of the validity predicate of the given …\nReturns a key of the wasm code of the given hash\nReturns a key of the wasm code’s length of the given hash\nReturns a key of wasm code’s hash of the given name\nReturns a key of the wasm code hash of the given code path\nTakes ownership of the key, appends a new segment to it, …")