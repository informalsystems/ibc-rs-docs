searchState.loadedDescShard("namada_core", 0, "The core Namada types, helpers and re-exported …\nImplements transparent addresses as described in Accounts …\nArithmetics helpers\nBoolean related functionality.\nBorsh binary encoding (re-exported) from official crate …\nBytes hex formatting\nChain related data types\nRe-exports of collection types.\nControl flow utilities.\nA non-negative fixed precision decimal type.\nDecode a value with borsh\nEncode a value with borsh\nThis module defines encoding methods compatible with …\nThe necessary type definitions for the contents of the …\nTypes representing data intended for Namada via Ethereum …\nEthereum bridge struct re-exports and types to do with …\nReturns the argument unchanged.\nTypes for working with 32 bytes hashes.\nCompiler hints, to improve the performance of certain …\nIBC-related data types\nImplement <code>std::fmt::Display</code> and <code>std::str::FromStr</code> via …\nShared internal types between the host env and guest …\nCalls <code>U::from(self)</code>.\nThis module is for hashing Namada types using the keccak256\nCryptographic keys\nMASP types\nProtocol parameters types\nStorage types\nNamada’s standard string encoding for public types.\nFunctionality to abstract spawning tasks onto a thread …\nRe-export of tendermint v0.37\nRe-export of tendermint-proto v0.37\nTypes for dealing with time and durations.\nA basic fungible token\nAn unsigned 256 integer type. Used for, among other things,\nTypes that are used in validity predicates.\nThis module contains types related with validator voting …\nThe length of <code>Address</code> encoded with Bech32m.\nAn account’s address\nError from decoding address from string\nThe length of an established <code>Address</code> encoded with Borsh.\nInternal Eth bridge address\nERC20 token for Ethereum bridge\nContains the error value\nAn established address is generated on-chain\nAn established address is generated on-chain\nA generator of established addresses\nBridge to Ethereum\nThe pool of transactions to be relayed to Ethereum\nInternal Governance address\nGovernance address\nLength of a hash of an address as a hexadecimal string\nLength of a trimmed hash of an address.\nInternal IBC address\nInter-blockchain communication\nIBC-related token\nAn implicit address is derived from a cryptographic key\nAn implicit address is derived from a cryptographic key\nAn internal address represents a module with a native VP\nAn internal address represents a module with a native VP\nInternal MASP address\nInternal Multitoken address\nMasp\nMultitoken\nNon-usable ERC20 tokens\nContains the success value\nInternal ledger parameters address\nInternal Public Goods funding address\nInternal PoS address\nInternal PoS slash pool address\nProtocol parameters\nPgf\nProof-of-stake\nProof-of-stake slash pool contains slashed tokens\nReplay protection\nResult of decoding address from string\nSHA-256 hash len\nAddress with temporary storage is used to pass data from …\nAddress with temporary storage is used to pass data from …\nDecode an address from Bech32m encoding\nEncode an address with Bech32m encoding\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerate a new established address. Unlike …\nGenerate a new established address.\nGenerate a new established address. Requires a source of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf the address established?\nIf the address implicit?\nIf the address internal?\nInitialize a new address generator with a given randomness …\nTry to get a raw hash of an address, only defined for …\nPrint the type of the address and its bech32m encoded value\nCertain internal addresses have reserved aliases.\nPerforms addition, returning <code>None</code> if overflow occurred.\nPerforms division, returning <code>None</code> on division by zero or …\nPerforms multiplication, returning <code>None</code> if overflow …\nPerforms negation, returning <code>None</code> if the result can’t be …\nPerforms integral remainder, returning <code>None</code> on division by …\nPerforms subtraction, returning <code>None</code> if overflow occurred.\nChecked arithmetics error.\nPerforms addition with a flag for overflow.\nPerforms substraction with a flag for overflow.\nConvert arithmetic operators within the given expression …\nAdds two numbers, checking for overflow. If overflow …\nDivides two numbers, checking for overflow and division by …\nMultiplies two numbers, checking for overflow. If overflow …\nNegates a number, returning <code>None</code> for results that can’t …\nFinds the remainder of dividing two numbers, checking for …\nSubtracts two numbers, checking for underflow. If …\nThe original expression given to the <code>checked</code> macro.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns a tuple of the sum along with a boolean indicating …\nReturns a tuple of the difference along with a boolean …\nExtend <code>bool</code> values with the possibility to create <code>Result</code> …\nExtend <code>Result</code> of <code>bool</code> values with the possibility to …\nReturn <code>Ok(())</code> if true, or <code>error</code> if false.\nReturn <code>Ok(())</code> if true, or the value returned by <code>handle_err</code> …\nReturn <code>Ok(())</code> if <code>Ok(true)</code>, <code>Err(error)</code> if <code>Ok(false)</code> or pass …\nReturn <code>Ok(())</code> if <code>Ok(true)</code>, <code>Err(handle_err())</code> if <code>Ok(false)</code> …\nA data-structure that can be de-serialized from binary …\nderive proc-macro for <code>borsh::de::BorshDeserialize</code> trait\nThe declaration and the definition of the type that can be …\nderive proc-macro for <code>borsh::BorshSchema</code> trait\nA data-structure that can be serialized into binary format …\nderive proc-macro for <code>borsh::ser::BorshSerialize</code> trait\nExtensions to types implementing <code>BorshSerialize</code>.\nRecursively, using DFS, add type definitions required for …\nGet the name of the type without brackets.\nDeserializes this instance from a given slice of bytes. …\nDeserializes an object from a reader.\nDeserializes an object from a slice of bytes.\nSubset of <code>std::io</code> which is used as part of borsh public …\nReturns the largest possible size of a serialised object …\nSerializes an object without allocation to compute and …\nModule is available if borsh is built with …\ngenerate BorshSchemaContainer for type <code>T</code>\nSerialize a value to a <code>Vec</code> of bytes.\nSerialize an object into a vector of bytes.\nSerializes an object directly into a <code>Writer</code>.\nDeserialize this instance from a slice of bytes.\nDeserialize this instance from a slice of bytes, but …\nSerialize object into a vector of bytes and prefix with …\nA data-structure that can be de-serialized from binary …\nAdditional methods offered on enums which is used by …\nDeserializes this instance from a given slice of bytes. …\nDeserialises given variant of an enum from the reader.\nDeserializes an object from a reader.\nDeserializes an object from a slice of bytes.\nModule is available if borsh is built with …\nDeserialize this instance from a slice of bytes.\nA socket address could not be bound because the address is …\nA nonexistent interface was requested or the requested …\nAn entity already exists, often a file.\nProgram argument list too long.\nThe operation failed because a pipe was closed.\nThe connection was aborted (terminated) by the remote …\nThe connection was refused by the remote server.\nThe connection was reset by the remote server.\nCross-device or cross-filesystem (hard) link or rename.\nDeadlock (avoided).\nA non-empty directory was specified where an empty …\nContains the error value\nThe error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…\nA list specifying general categories of I/O error.\nExecutable file is busy.\nFile larger than allowed or supported.\nLoop in the filesystem or IO subsystem; often, too many …\nFilesystem quota was exceeded.\nThe remote host is not reachable.\nThe operation was partially successful and needs to be …\nThis operation was interrupted.\nData not valid for the operation were encountered.\nA filename was invalid.\nA parameter was incorrect.\nThe filesystem object is, unexpectedly, a directory.\nThe system’s networking is down.\nThe network containing the remote host is not reachable.\nA filesystem object is, unexpectedly, not a directory.\nThe network operation failed because it was not connected …\nAn entity was not found, often a file.\nSeek on unseekable file.\nContains the success value\nA custom error that does not fall under any other I/O …\nAn operation could not be completed, because it failed to …\nThe operation lacked the necessary privileges to complete.\nThe <code>Read</code> trait allows for reading bytes from a source.\nThe filesystem or storage medium is read-only, but a write …\nResource is busy.\nA specialized <code>Result</code> type for I/O operations.\nStale network file handle.\nThe underlying storage (typically, a filesystem) is full.\nThe I/O operation’s timeout expired, causing it to be …\nToo many (hard) links to the same filesystem object.\nAn error returned when an operation could not be completed …\nThis operation is unsupported on this platform.\nThe operation needs to block to complete, but the blocking …\nA trait for objects which are byte-oriented sinks.\nAn error returned when an operation could not be completed …\nCreates a “by reference” adaptor for this instance of …\nCreates a “by reference” adapter for this instance of …\nTransforms this <code>Read</code> instance to an <code>Iterator</code> over its …\nCreates an adapter which will chain this stream with …\nAttempts to downcast the custom boxed error to <code>E</code>.\nFlushes this output stream, ensuring that all …\nShows a human-readable description of the <code>ErrorKind</code>.\nConvert a <code>serde_json::Error</code> into an <code>io::Error</code>.\nConvert the <code>Error</code> to an <code>io::Error</code>, preserving the original …\nConverts a <code>alloc::ffi::NulError</code> into a <code>Error</code>.\nConverts <code>TryReserveError</code> to an error with …\nConverts an <code>ErrorKind</code> into an <code>Error</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new instance of an <code>Error</code> from a particular OS …\nReturns a mutable reference to the inner error wrapped by …\nReturns a reference to the inner error wrapped by this …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the <code>Error</code>, returning its inner error (if any).\nDetermines if this <code>Read</code>er has an efficient <code>read_vectored</code> …\nDetermines if this <code>Write</code>r has an efficient <code>write_vectored</code> …\nReturns the corresponding <code>ErrorKind</code> for this error.\nReturns an error representing the last OS error which …\nCreates a new I/O error from a known kind of error as well …\nCreates a new I/O error from an arbitrary error payload.\nReturns the OS error that this error represents (if any).\nPull some bytes from this source into the specified …\nPull some bytes from this source into the specified buffer.\nReads the exact number of bytes required to fill <code>cursor</code>.\nReads the exact number of bytes required to fill <code>buf</code>.\nReads all bytes until EOF in this source, placing them …\nReads all bytes until EOF in this source, appending them …\nLike <code>read</code>, except that it reads into a slice of buffers.\nCreates an adapter which will read at most <code>limit</code> bytes …\nWrites a buffer into this writer, returning how many bytes …\nAttempts to write an entire buffer into this writer.\nAttempts to write multiple buffers into this writer.\nWrites a formatted string into this writer, returning any …\nLike <code>write</code>, except that it writes from a slice of buffers.\nArray length isn’t present in payload, it’s determined …\nThe declaration and the definition of the type that can be …\nAll schema information needed to deserialize a single type.\nConvenience constant representing the length range of a …\nConvenience constant representing the length width of a …\nThe type that we use to represent the declaration of the …\nThe type that we use to represent the definition of the …\nThe type that we use for value of discriminant.\nThe struct with no fields, structurally identical to an …\nA Sequence defined with an empty length range.\nA possibly tagged union, a.k.a enum.\nThe name of the field in the struct (can be used to …\nThe collection representing the fields of a struct.\nSome of the declared types were lacking definition making …\nSome of the declared types were lacking definition, which …\nThe struct with named fields, structurally identical to a …\nThe theoretical maximum size of the encoded value …\nA fixed-size type, which is considered undivisible\nThe type is recursive and thus theoretical maximum size is …\nPossible error when validating a <code>BorshSchemaContainer</code>, …\nPossible error when calculating theoretical maximum size …\nA sequence of homogeneous elements.\nA structure, structurally similar to a tuple.\nonly 0, 1, 2, 4 and 8 bytes long sequences’ <code>length_width</code> …\nDeclared tag width is too small.  Tags must be large …\nDeclared tag width is too large.  Tags may be at most …\nA fixed-size tuple with the length known at the compile …\nThe struct with unnamed fields, structurally identical to …\nThe type that we use for the name of the variant.\nsequences of zero-sized types of dynamic length are …\nHelper method to add a single type definition to the map.\nRecursively, using DFS, add type definitions required for …\nGet the name of the type without brackets.\ngenerate BorshSchemaContainer for type <code>T</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nModule is available if borsh is built with …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the largest possible size of a serialised object …\nValidates container for violation of any well-known rules …\nType of each element of the sequence.\nBounds on the possible lengths of the sequence.\nHow many bytes does the length tag occupy.\nWidth in bytes of the discriminant tag.\nPossible variants of the enumeration. <code>VariantName</code> is …\nA data-structure that can be serialized into binary format …\nModule is available if borsh is built with …\nLowercase hexadecimal encoding\nUppercase hexadecimal encoding\nThe length of the block hash\nThe length of the block height\nHash of a block as fixed-size byte array\nThe block header data from Tendermint header relevant for …\nHeight of a block, i.e. the level. The <code>default</code> is the …\nThe length of the chain ID string\nThe maximum length of chain ID prefix\nSeparator between chain ID prefix and the generated hash\nChain ID\nChain ID prefix\nRelease default chain ID. Must be <code>CHAIN_ID_LENGTH</code> long.\nEpoch identifier. Epochs are identified by consecutive …\nPredecessor block epochs\nExtracts a string slice containing the entire chain ID …\nExtracts a string slice containing the entire chain ID.\nChecked epoch addition.\nChecked block height addition.\nChecked epoch division.\nChecked epoch multiplication.\nChecked epoch integral reminder.\nChecked epoch subtraction. Computes self - rhs, returning …\nChecked block height subtraction.\nThe number of bytes when this header is encoded\nThe first block height 1.\nReturn all starting block heights for each successive …\nThe block heights of the first block of each known epoch. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDerive the chain ID from the genesis hash and release …\nLook up the epoch of a given block height. If the given …\nLook up the starting block height of an epoch at or before …\nLook up the starting block height of the given epoch\nMerkle root hash of block\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIterate a range of epochs, inclusive of the start and end.\nIterate a range of consecutive epochs starting from <code>self</code> …\nRecord start of a new epoch at the given block height\nChange to the next epoch\nGet the height of the next block\nHash of the addresses of the next validator set\nFind the prefix of a valid ChainId.\nChange to the previous epoch.\nGet the height of the previous block\nChecked epoch subtraction. Computes self - rhs, returning …\nA sentinel value block height 0 may be used before any …\nReturn a temporary chain ID made only from the prefix. …\nTimestamp associated to block\nUnchecked epoch addition.\nValidate that chain ID is matching the expected value …\nA hash table where the iteration order of the key-value …\nA hash set where the iteration order of the values is …\nMoves all key-value pairs from <code>other</code> into <code>self</code>, leaving …\nMoves all values from <code>other</code> into <code>self</code>, leaving <code>other</code> empty.\nReturns a mutable slice of all the key-value pairs in the …\nReturns a slice of all the key-value pairs in the map.\nReturns a slice of all the values in the set.\nSearch over a sorted set for a value.\nSearch over a sorted map with a comparator function.\nSearch over a sorted set with a comparator function.\nSearch over a sorted map with an extraction function.\nSearch over a sorted set with an extraction function.\nSearch over a sorted map for a key.\nReturns the set intersection, cloned into a new set.\nReturns the set union, cloned into a new set.\nReturns the set symmetric-difference, cloned into a new …\nReturn the number of elements the map can hold without …\nReturn the number of elements the set can hold without …\nRemove all key-value pairs in the map, while preserving …\nRemove all elements in the set, while preserving its …\nReturn <code>true</code> if an equivalent to <code>value</code> exists in the set.\nReturn <code>true</code> if an equivalent to <code>key</code> exists in the map.\nReturn an empty <code>IndexMap</code>\nReturn an empty <code>IndexSet</code>\nReturn an iterator over the values that are in <code>self</code> but …\nClears the <code>IndexMap</code> in the given index range, returning …\nClears the <code>IndexSet</code> in the given index range, returning …\nGet the given key’s corresponding entry in the map for …\nExtend the map with all key-value pairs in the iterable.\nExtend the map with all key-value pairs in the iterable.\nGet the first key-value pair\nGet the first value\nGet the first entry in the map for in-place manipulation.\nGet the first key-value pair, with mutable access to the …\nExamples\nReturns the argument unchanged.\nExamples\nReturns the argument unchanged.\nCreate an <code>IndexMap</code> from the sequence of key-value pairs in …\nReturn a reference to the value stored for <code>key</code>, if it is …\nReturn a reference to the value stored in the set, if it …\nReturn item index, key and value\nReturn item index and value\nGet a key-value pair by index\nGet a value by index\nGet an entry in the map by index for in-place manipulation.\nGet a key-value pair by index\nReturn item index, if it exists in the map\nReturn item index, if it exists in the set\nReturn references to the key-value pair stored for <code>key</code>, if …\nReturns a slice of key-value pairs in the given range of …\nReturns a slice of values in the given range of indices.\nReturns a mutable slice of key-value pairs in the given …\nReturn a reference to the map’s <code>BuildHasher</code>.\nReturn a reference to the set’s <code>BuildHasher</code>.\nReturns a reference to the value corresponding to the …\nReturns a reference to the value at the supplied <code>index</code>.\nReturns a reference to the value at the supplied <code>index</code>.\nReturns a mutable reference to the value at the supplied …\nReturns a mutable reference to the value corresponding to …\nInsert a key-value pair in the map.\nInsert the value into the set.\nInsert a key-value pair in the map before the entry at the …\nInsert the value into the set before the value at the …\nInsert a key-value pair in the map, and get their index.\nInsert the value into the set, and get its index.\nInsert a key-value pair in the map at its ordered position …\nInsert the value into the set at its ordered position …\nReturn an iterator over the values that are in both <code>self</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts into a boxed slice of all the key-value pairs in …\nConverts into a boxed slice of all the values in the set.\nReturn an owning iterator over the keys of the map, in …\nReturn an owning iterator over the values of the map, in …\nReturns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.\nReturns true if the map contains no elements.\nReturns true if the set contains no elements.\nReturns <code>true</code> if all elements of <code>self</code> are contained in <code>other</code>…\nReturns <code>true</code> if all elements of <code>other</code> are contained in <code>self</code>…\nReturn an iterator over the key-value pairs of the map, in …\nReturn an iterator over the values of the set, in their …\nReturn an iterator over the key-value pairs of the map, in …\nReturn an iterator over the keys of the map, in their order\nGet the last key-value pair\nGet the last value\nGet the last entry in the map for in-place manipulation.\nGet the last key-value pair, with mutable access to the …\nReturn the number of key-value pairs in the map.\nReturn the number of elements in the set.\nMoves the position of a key-value pair from one index to …\nMoves the position of a value from one index to another by …\nCreate a new map. (Does not allocate.)\nCreate a new set. (Does not allocate.)\nReturns the index of the partition point of a sorted map …\nReturns the index of the partition point of a sorted set …\nRemove the last key-value pair\nRemove the last value\nRemove the key-value pair equivalent to <code>key</code> and return its …\nRemove the value from the set, and return <code>true</code> if it was …\nRemove and return the key-value pair equivalent to <code>key</code>.\nAdds a value to the set, replacing the existing value, if …\nAdds a value to the set, replacing the existing value, if …\nReserve capacity for <code>additional</code> more key-value pairs.\nReserve capacity for <code>additional</code> more values.\nReserve capacity for <code>additional</code> more key-value pairs, …\nReserve capacity for <code>additional</code> more values, without …\nScan through each key-value pair in the map and keep those …\nScan through each value in the set and keep those where the\nReverses the order of the map’s key-value pairs in place.\nReverses the order of the set’s values in place.\nInsert a key-value pair in the map at the given index.\nInsert the value into the set at the given index.\nRemove the key-value pair equivalent to <code>key</code> and return its …\nRemove the value from the set, and return <code>true</code> if it was …\nRemove and return the key-value pair equivalent to <code>key</code>.\nRemove the key-value pair equivalent to <code>key</code> and return it …\nRemove the value from the set return it and the index it …\nRemove the key-value pair by index\nRemove the value by index\nRemoves and returns the value in the set, if any, that is …\nShrink the capacity of the map with a lower limit.\nShrink the capacity of the set with a lower limit.\nShrink the capacity of the map as much as possible.\nShrink the capacity of the set as much as possible.\nSort the set’s values by their default ordering.\nSort the map’s key-value pairs in place using the …\nSort the set’s values in place using the comparison …\nSort the map’s key-value pairs in place using a sort-key …\nSort the set’s values in place using a key extraction …\nSort the map’s key-value pairs by the default ordering …\nSort the set’s values by their default ordering.\nSort the map’s key-value pairs in place using the …\nSort the set’s values in place using the comparison …\nSort the map’s key-value pairs by the default ordering …\nSort the key-value pairs of the map and return a by-value …\nSort the values of the set and return a by-value iterator …\nSort the key-value pairs of the map and return a by-value …\nSort the values of the set and return a by-value iterator …\nCreates a splicing iterator that replaces the specified …\nCreates a splicing iterator that replaces the specified …\nSplits the collection into two at the given index.\nSplits the collection into two at the given index.\nReturns the set difference, cloned into a new set.\nSwaps the position of two key-value pairs in the map.\nSwaps the position of two values in the set.\nRemove the key-value pair equivalent to <code>key</code> and return its …\nRemove the value from the set, and return <code>true</code> if it was …\nRemove and return the key-value pair equivalent to <code>key</code>.\nRemove the key-value pair equivalent to <code>key</code> and return it …\nRemove the value from the set return it and the index it …\nRemove the key-value pair by index\nRemove the value by index\nRemoves and returns the value in the set, if any, that is …\nReturn an iterator over the values that are in <code>self</code> or …\nRemoves and returns the value in the set, if any, that is …\nShortens the map, keeping the first <code>len</code> elements and …\nShortens the set, keeping the first <code>len</code> elements and …\nTry to reserve capacity for <code>additional</code> more key-value …\nTry to reserve capacity for <code>additional</code> more values.\nTry to reserve capacity for <code>additional</code> more key-value …\nTry to reserve capacity for <code>additional</code> more values, …\nReturn an iterator over all values that are in <code>self</code> or …\nReturn an iterator over the values of the map, in their …\nReturn an iterator over mutable references to the values …\nCreate a new map with capacity for <code>n</code> key-value pairs. …\nCreate a new set with capacity for <code>n</code> elements. (Does not …\nCreate a new map with capacity for <code>n</code> key-value pairs. …\nCreate a new set with capacity for <code>n</code> elements. (Does not …\nCreate a new map with <code>hash_builder</code>.\nCreate a new set with <code>hash_builder</code>.\nA draining iterator over the entries of an <code>IndexMap</code>.\nEntry for an existing key-value pair in an <code>IndexMap</code> or a …\nA hash table where the iteration order of the key-value …\nA hash table where the iteration order of the key-value …\nA view into an occupied entry in an <code>IndexMap</code> obtained by …\nAn owning iterator over the entries of an <code>IndexMap</code>.\nAn owning iterator over the keys of an <code>IndexMap</code>.\nAn owning iterator over the values of an <code>IndexMap</code>.\nAn iterator over the entries of an <code>IndexMap</code>.\nA mutable iterator over the entries of an <code>IndexMap</code>.\nA mutable iterator over the entries of an <code>IndexMap</code>.\nAn iterator over the keys of an <code>IndexMap</code>.\nOpt-in mutable access to <code>Entry</code> keys.\nOpt-in mutable access to <code>IndexMap</code> keys.\nExisting slot with equivalent key.\nA view into an occupied entry in an <code>IndexMap</code>. It is part …\nOpt-in access to the experimental raw entry API.\nA dynamically-sized slice of key-value pairs in an <code>IndexMap</code>…\nA splicing iterator for <code>IndexMap</code>.\nVacant slot (no equivalent key in the map).\nA view into a vacant entry in an <code>IndexMap</code>. It is part of …\nAn iterator over the values of an <code>IndexMap</code>.\nA mutable iterator over the values of an <code>IndexMap</code>.\nModifies the entry if it is occupied.\nReturns a mutable slice of the remaining entries in the …\nReturns a slice of the remaining entries in the iterator.\nReturns a slice of the remaining entries in the iterator.\nReturns a slice of the remaining entries in the iterator.\nReturns a slice of the remaining entries in the iterator.\nReturns a slice of the remaining entries in the iterator.\nSearch over a sorted map with a comparator function.\nSearch over a sorted map with an extraction function.\nSearch over a sorted map for a key.\nGet the first key-value pair.\nGet the first key-value pair, with mutable access to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a reference to the entry’s value in the map.\nGets a reference to the entry’s value in the map.\nReturn item index, mutable reference to key and value\nGet a key-value pair by index.\nGet a key-value pair by index, with mutable access to the …\nReturn mutable reference to key and value at an index.\nGets a mutable reference to the entry’s value in the map.\nGets a mutable reference to the entry’s value in the map.\nReturns a slice of key-value pairs in the given range of …\nReturns a mutable slice of key-value pairs in the given …\nReturn the index where the key-value pair exists or will …\nReturn the index of the key-value pair\nReturn the index where a key-value pair may be inserted.\nReturn the index of the key-value pair\nReturns a reference to the key at the supplied <code>index</code>.\nSets the value of the entry to <code>value</code>, and returns the entry…\nInserts the entry’s key and the given value into the …\nSets the value of the entry to <code>value</code>, and returns the entry…\nSets the value of the entry (after inserting if vacant), …\nInserts the entry’s key and the given value into the …\nInserts the entry’s key and the given value into the map …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTakes ownership of the key, leaving the entry vacant.\nReturn an owning iterator over the keys of the map slice.\nConverts into a mutable reference to the entry’s value …\nConverts into a mutable reference to the entry’s value …\nReturns a mutable slice of the remaining entries in the …\nReturns a mutable slice of the remaining entries in the …\nReturn an owning iterator over the values of the map slice.\nReturns true if the map slice contains no elements.\nReturn an iterator over the key-value pairs of the map …\nReturn an iterator over the key-value pairs of the map …\nReturn an iterator over the key-value pairs of the map, in …\nGets a reference to the entry’s key, either within the …\nGets a reference to the entry’s key in the map.\nGets a reference to the key that was used to find the …\nGets a reference to the entry’s key in the map.\nGets a mutable reference to the entry’s key, either …\nReturn an iterator over the keys of the map slice.\nGet the last key-value pair.\nGet the last key-value pair, with mutable access to the …\nReturn the number of key-value pairs in the map slice.\nMoves the position of the entry to a new index by shifting …\nMoves the position of the entry to a new index by shifting …\nReturns an empty slice.\nReturns an empty mutable slice.\nInserts a default-constructed value in the entry if it is …\nInserts the given default value in the entry if it is …\nInserts the result of the <code>call</code> function in the entry if it …\nInserts the result of the <code>call</code> function with a reference …\nReturns the index of the partition point of a sorted map …\nCreates a raw entry builder for the <code>IndexMap</code>.\nOpt-in access to the experimental raw entry API.\nCreates a raw immutable entry builder for the <code>IndexMap</code>.\nRemove the key, value pair stored in the map for this …\nRemove and return the key, value pair stored in the map …\nScan through each key-value pair in the map and keep those …\nFunctions to serialize and deserialize an <code>IndexMap</code> as an …\nInserts the entry’s key and the given value into the map …\nRemove the key, value pair stored in the map for this …\nRemove the key, value pair stored in the map for this …\nRemove and return the key, value pair stored in the map …\nRemove and return the key, value pair stored in the map …\nDivides one slice into two at an index.\nDivides one mutable slice into two at an index.\nReturns the first key-value pair and the rest of the slice,\nReturns the first key-value pair and the rest of the slice,\nReturns the last key-value pair and the rest of the slice, …\nReturns the last key-value pair and the rest of the slice, …\nSwaps the position of entry with another.\nSwaps the position of entry with another.\nRemove the key, value pair stored in the map for this …\nRemove the key, value pair stored in the map for this …\nRemove and return the key, value pair stored in the map …\nRemove and return the key, value pair stored in the map …\nReturn an iterator over the values of the map slice.\nReturn an iterator over mutable references to the the …\nExisting slot with equivalent key.\nOpt-in access to the experimental raw entry API.\nA builder for computing where in an <code>IndexMap</code> a key-value …\nA builder for computing where in an <code>IndexMap</code> a key-value …\nRaw entry for an existing key-value pair or a vacant …\nA raw view into an occupied entry in an <code>IndexMap</code>. It is …\nA view into a vacant raw entry in an <code>IndexMap</code>. It is part …\nVacant slot (no equivalent key in the map).\nModifies the entry if it is occupied.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAccess an entry by hash.\nAccess an entry by hash.\nAccess an entry by hash, including its index.\nAccess an entry by key.\nAccess an entry by key.\nAccess an entry by a key and its hash.\nAccess an entry by a key and its hash.\nGets a reference to the entry’s value in the map.\nGets a reference to the entry’s key and value in the map.\nGets a reference to the entry’s key and value in the map.\nGets a mutable reference to the entry’s value in the map.\nReturn the index where the key-value pair exists or may be …\nReturn the index of the key-value pair\nReturn the index where a key-value pair may be inserted.\nAccess the index of an entry by hash.\nSets the value of the entry, and returns the entry’s old …\nInserts the given key and value into the map, and returns …\nInserts the given key and value into the map with the …\nSets the key of the entry, and returns the entry’s old …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts into a mutable reference to the entry’s key in …\nConverts into a mutable reference to the entry’s key and …\nConverts into a mutable reference to the entry’s value …\nGets a reference to the entry’s key in the map.\nGets a mutable reference to the entry’s key in the map.\nMoves the position of the entry to a new index by shifting …\nInserts the given default key and value in the entry if it …\nInserts the result of the <code>call</code> function in the entry if it …\nCreates a raw entry builder for the <code>IndexMap</code>.\nCreates a raw immutable entry builder for the <code>IndexMap</code>.\nRemove the key, value pair stored in the map for this …\nRemove and return the key, value pair stored in the map …\nInserts the given key and value into the map at the given …\nInserts the given key and value into the map with the …\nRemove the key, value pair stored in the map for this …\nRemove and return the key, value pair stored in the map …\nSwaps the position of entry with another.\nRemove the key, value pair stored in the map for this …\nRemove and return the key, value pair stored in the map …\nDeserializes an <code>IndexMap</code> from an ordered sequence.\nSerializes an <code>IndexMap</code> as an ordered sequence.\nA lazy iterator producing elements in the difference of …\nA draining iterator over the items of an <code>IndexSet</code>.\nA hash set where the iteration order of the values is …\nA hash set where the iteration order of the values is …\nA lazy iterator producing elements in the intersection of …\nAn owning iterator over the items of an <code>IndexSet</code>.\nAn iterator over the items of an <code>IndexSet</code>.\nOpt-in mutable access to <code>IndexSet</code> values.\nA dynamically-sized slice of values in an <code>IndexSet</code>.\nA splicing iterator for <code>IndexSet</code>.\nA lazy iterator producing elements in the symmetric …\nA lazy iterator producing elements in the union of <code>IndexSet</code>…\nReturns a slice of the remaining entries in the iterator.\nReturns a slice of the remaining entries in the iterator.\nReturns a slice of the remaining entries in the iterator.\nSearch over a sorted set for a value.\nSearch over a sorted set with a comparator function.\nSearch over a sorted set with an extraction function.\nGet the first value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturn item index and mutable reference to the value\nGet a value by index.\nReturn mutable reference to the value at an index.\nReturns a slice of values in the given range of indices.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the set slice contains no elements.\nReturn an iterator over the values of the set slice.\nGet the last value.\nReturn the number of elements in the set slice.\nReturns an empty slice.\nReturns the index of the partition point of a sorted set …\nScan through each value in the set and keep those where the\nDivides one slice into two at an index.\nReturns the first value and the rest of the slice, or <code>None</code> …\nReturns the last value and the rest of the slice, or <code>None</code> …\nShutdown signal receiver.\nShutdown signal receiver.\nReturns the argument unchanged.\nInstall a shutdown signal handler, and retrieve the …\nCalls <code>U::from(self)</code>.\nCheck if the shutdown signal has been received.\nTime related logic for futures.\nWait until a shutdown signal is received.\nConstant sleep strategy.\nA <code>Duration</code> type to represent a span of time, typically …\nA future timed out.\nFuture task related errors.\nExponential backoff sleep strategy.\nA measurement of a monotonically nondecreasing clock. …\nLinear backoff sleep strategy.\nThe maximum duration.\nThe duration of one microsecond.\nThe duration of one millisecond.\nMap a function to the duration returned from a sleep …\nA future ran for the max number of allowed times.\nThe duration of one nanosecond.\nThe output type to return.\nRun a fallible task forever.\nA <code>SleepRunUntil</code> implementation, for running a fallible …\nThe duration of one second.\nA <code>SleepStrategy</code> adaptor, to run async tasks with custom …\nZero cost abstraction to check if we should exit a running …\nA sleep strategy to be applied to fallible runs of …\nThe state of the sleep strategy.\nA duration of zero time.\nComputes the absolute difference between <code>self</code> and <code>other</code>.\nPanics\nRetrieve a duration from a <code>u64</code>.\nReturns the total number of whole microseconds contained …\nReturns the total number of whole milliseconds contained …\nReturns the number of milliseconds contained by this …\nReturns the number of milliseconds contained by this …\nReturns the total number of nanoseconds contained by this …\nReturns the number of <em>whole</em> seconds contained by this …\nReturns the number of seconds contained by this <code>Duration</code> …\nReturns the number of seconds contained by this <code>Duration</code> …\nCalculate a duration from a sleep strategy state.\nThe base of the exponentiation.\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …\nChecked <code>Duration</code> addition. Computes <code>self + other</code>, …\nChecked <code>Duration</code> division. Computes <code>self / other</code>, …\nReturns the amount of time elapsed from another instant to …\nChecked <code>Duration</code> multiplication. Computes <code>self * other</code>, …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …\nChecked <code>Duration</code> subtraction. Computes <code>self - other</code>, …\nThe number of times to run the fallible task.\nThe amount of time added to each consecutive sleep.\nDivides <code>Duration</code> by <code>Duration</code> and returns <code>f32</code>.\nDivides <code>Duration</code> by <code>Duration</code> and returns <code>f64</code>.\nDivides <code>Duration</code> by <code>f32</code>.\nDivides <code>Duration</code> by <code>f64</code>.\nReturns the amount of time elapsed from another instant to …\nReturns the amount of time elapsed since this instant was …\nExit with an error.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>Duration</code> from the specified number of days.\nCreates a new <code>Duration</code> from the specified number of hours.\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of whole …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreate a <code>tokio::time::Instant</code> from a <code>std::time::Instant</code>.\nCreates a new <code>Duration</code> from the specified number of weeks.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert the value into a <code>std::time::Instant</code>.\nReturns true if this <code>Duration</code> spans no time.\nMap a function to the duration returned from a sleep …\nMultiplies <code>Duration</code> by <code>f32</code>.\nMultiplies <code>Duration</code> by <code>f64</code>.\nCreates a new <code>Duration</code> from the specified number of whole …\nReturn a new sleep strategy state.\nMove to the next state of the sleep strategy.\nReturns an instant corresponding to “now”.\nCheck if an error has occurred, prompting an early exit.\nMove to the previous state of the sleep strategy.\nRetry running a fallible task for a limited number of …\nExecute a fallible task.\nRun a future as many times as <code>iter_times</code> yields a value, …\nSaturating <code>Duration</code> addition. Computes <code>self + other</code>, …\nReturns the amount of time elapsed from another instant to …\nSaturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …\nSaturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …\nPause the active task for the given duration.\nSleep for a <code>Duration</code> equivalent to the value of the …\nThe sleep strategy to use.\nPanics\nPanics\nReturns the fractional part of this <code>Duration</code>, in whole …\nReturns the fractional part of this <code>Duration</code>, in whole …\nReturns the fractional part of this <code>Duration</code>, in …\nExit with success, returning a value.\nRun a time constrained task until the given deadline.\nConverts a <code>Duration</code> to a <code>std::time::Duration</code>, failing if …\nConverts a <code>Duration</code> to a <code>core::time::Duration</code>, failing if …\nThe checked version of <code>from_secs_f32</code>.\nThe checked version of <code>from_secs_f64</code>.\nA 256 bit number with <code>POS_DECIMAL_PRECISION</code> number of Dec …\nContains the error value\nGeneric error <code>Dec</code> operations can return\nContains the success value\nThe number of Dec places for PoS rational calculations\nGeneric result type for fallible <code>Dec</code> operations\nGet the absolute value of self as integer\nGet the non-negative difference between two <code>Dec</code>s.\nReturn the integer value of a <code>Dec</code> by rounding up.\nDo addition of two <code>Dec</code>s\nChecked division\nChecked multiplication. Return <code>None</code> if overflow. This …\nChecked negation\nDo subtraction of two <code>Dec</code>s\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn if the <code>Dec</code> is negative\nCheck if value is zero\nCreate a new <code>Dec</code> using a mantissa and a scale.\nThe representation of 1\nThe representation of 1 / 3\nConvert the Dec type into a I256 with truncation\nConvert the Dec type into a Uint with truncation\nPerforms division with truncation.\nThe representation of 2\nThe representation of 2 / 5\nThe representation of 2 / 3\nThe representation of 0\nRepresents an Ethereum encoding method equivalent to …\nAddress.\nArray of params with unknown size.\nBoolean value.\nVector of bytes of unknown size.\nContains a method to encode data to a format compatible …\nA container for data types that are able to be Ethereum …\nArray with known size.\nVector of bytes with known size.\nSigned integer.\nString.\nEthereum ABI params.\nTuple of params of variable types.\nUnsigned integer.\nReturns the encoded <code>Token</code> instances, in a type-safe …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts token to…\nConverts token to…\nConverts token to…\nConverts token to…\nConverts token to…\nConverts token to…\nReturn the underlying ABI encoded value.\nConverts token to…\nConverts token to…\nConverts token to…\nConverts token to…\nCheck if the token is a dynamic type resulting in prefixed …\nEncodes a slice of <code>Token</code> instances, and returns the keccak …\nReturn a new ABI encoded value of type <code>T</code>.\nHere the type information is not compiler deduced, proceed …\nEncodes a slice of <code>Token</code> instances, and returns the keccak …\nEncodes a struct into a sequence of ABI <code>Token</code> instances.\nCheck whether the type of the token matches the given …\nCheck if all the types of the tokens match the given …\nA list of all storage keys\nThe main address of the Ethereum bridge pool\nTransfer ERC20 assets from Namada to Ethereum.\nThe amount of fees to be paid, in Namada, to the relayer …\nRefund non-usable tokens.\nA transfer message to Ethereum sitting in the bridge pool, …\nAdditional data appended to a <code>TransferToEthereumEvent</code> to …\nBridge pool key segments.\nA transfer message to be submitted to Ethereum to move …\nTransfer to Ethereum kinds.\nStorage keys values\nThe amount to be transferred\nThe amount of fees.\nRetrieve a reference to the appendix of this …\nThe type of token\nBridge pool nonce storage key\nCalculate the checksum of this <code>PendingTransferAppendix</code>.\nConstruct a NUT token address from an ERC20 address.\nConstruct a token address from an ERC20 address.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCraft a <code>PendingTransfer</code> from its constituents.\nThe amount of gas fees paid by the user sending this …\nAmount of gas fees paid by the user sending the transfer.\nGet the storage key for the transfers using the hash\nGet the storage key for the transfers in the pool\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRetrieve the owned appendix of this <code>PendingTransfer</code>.\nCheck if a key is for a pending transfer\nThe kind of the pending transfer to Ethereum.\nThe kind of transfer to Ethereum.\nThe account of fee payer.\nThe recipient address\nThe sender of the transfer.\nThe sender of the transfer\nSigned root storage key\nThe address of the fungible token to draw gas fees from.\nGet a token <code>Address</code> from this <code>PendingTransfer</code>.\nTransfer to Ethereum data.\nRepresentation of address on Ethereum. The inner value is …\nAn Ethereum event to be processed by the Namada ledger\nNonces of Ethereum events.\nAn event transferring some kind of value from Namada to …\nAn event transferring some kind of value from Ethereum to …\nA confirmation event that a batch of transfers have been …\nEvent transferring batches of ether or Ethereum based …\nEvent transferring batches of ether or Ethereum based …\nNamada native type to replace the ethabi::Uint type\nEvent indication that the validator set has been updated …\nQuantity of wrapped Asset in the transfer\nQuantity of the ERC20 token in the transfer\nAddress of the smart contract issuing the token\nAddress of the smart contract issuing the token\nTry to increment this <code>Uint</code>, whilst checking for overflows.\nChecksum of all Namada specific fields, including, but not …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nParses an <code>EthAddress</code> from a standard hex-encoded Ethereum …\nReturns the nonce of an Ethereum event.\nSHA256 of the Borsh serialization of the <code>EthereumEvent</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMonotonically increasing nonce\nThe address receiving assets on Ethereum\nThe address receiving wrapped assets on Namada\nConvert to an Ethereum-compatible byte representation.\nThe canonical way we represent an <code>EthAddress</code> in storage …\nThe batch of transfers\nHash of the validators in the bridge contract\nHash of the validators in the governance contract\nMonotonically increasing nonce\nMonotonically increasing nonce\nMonotonically increasing nonce\nThe Namada address that receives the gas fees for relaying …\nThe batch of transfers\nThe batch of transfers\nThis type must be able to represent any valid Ethereum …\n<code>ChainTransfer(uint256,address,string)</code>\n<code>Erc20Transfer(bytes32,uint256,address,address)</code>\n…\n<code>Signature(bytes32,bytes32,uint8)</code>\n<code>ValidatorSetArgs(bytes32[],uint256)</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the next block height.\nUnchecked epoch addition.\nA <code>StorageHasher</code> which can never be called.\nContains the error value\nThe length of the transaction hash string\nThe length of the hex encoded transaction hash.\nA hash, typically a sha-2 hash of a tx\nResult for functions that may fail\nA Keccak hasher algorithm.\nContains the success value\nThe storage hasher used for the merkle tree.\nThe storage hasher used for the merkle tree.\nReturn the inner pointer to the hash data.\nGiven hashes A and B, compute Sha256(A||B), but if one …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHash the value to store\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if the hash is all zeros\nReturn the length of the hash.\nCompute sha256 of some bytes\nConvert this <code>Hash</code> to a <code>Vec</code>.\nReturn zeros\nA function that is seldom called.\nA likely path to be taken in an if-expression.\nAn unlikely path to be taken in an if-expression.\nIBC token hash derived from a denomination.\nIBC transaction data section hash\nThe target of a PGF payment\nThe amount of token to fund the target address\nRe-exports implementations of various IBC applications.\nChannel ID to fund\nRe-exports implementations of IBC light clients.\nRe-exports implementations of all the IBC core (TAO) …\nRe-exports Cosmos-specific utility types, traits, and …\nRe-exports convenient derive macros from <code>ibc-derive</code> crate.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPort ID to fund\nRe-exports primitive types and traits from the …\nThe target address on the target chain\nRe-exports the implementation of the IBC Non-Fungible Token\nRe-exports the implementation of the IBC fungible token …\nDefines the required context traits for ICS-721 to …\nImplements IBC handlers responsible for processing …\nProvides IBC module callbacks implementation for the …\nRe-exports the implementation of the IBC Non-Fungible Token\nNative chain account id.\nRead-write methods required in NFT transfer execution …\nRead-only methods required in NFT transfer validation …\nExecutes burning of the NFT in a user account.\nValidates the sender account and the coin input before …\nReturns Ok() if the host chain supports receiving NFTs.\nReturns Ok() if the host chain supports sending NFTs.\nCreates a new NFT Class identified by classId. If the …\nValidates that the NFT can be created or updated …\nExecutes the escrow of the NFT in a user account.\nValidates that the tokens can be escrowed successfully.\nGet the class ID of the token\nGet the token Data\nGet the class Data\nGet the token ID\nGet the class ID\nReturns the NFT\nReturns the NFT class\nget_port returns the portID for the transfer module.\nGet the token URI\nGet the class URI\nExecutes minting of the NFT in a user account.\nValidates the receiver account and the NFT input\nAttempt to convert a <code>Signer</code> to a native chain receiver …\nAttempt to convert a <code>Signer</code> to a native chain sender …\nReturns a hash of the prefixed class ID and the token ID. …\nExecutes the unescrow of the NFT in a user account.\nValidates that the NFT can be unescrowed successfully.\nThis function handles the transfer receiving logic.\nInitiate a token transfer. Equivalent to calling …\nExecutes the token transfer. A prior call to …\nValidates the NFT transfer\nThe successful string, used for creating an …\nClass data for an NFT\nClass ID for an NFT\nClass URI for an NFT\nModule identifier for the ICS-721 application.\nRepresents the token transfer memo\nThe port identifier that the ICS-721 applications …\nPrefixed class to trace sources like ICS-20 PrefixedDenom\nToken data for an NFT\nToken ID for an NFT\nToken URI for an NFT\nA full trace path modelled as a collection of <code>TracePrefix</code>s.\nOne hop in a token’s trace, which consists of the port …\nICS-721 application current version.\nReturns a successful acknowledgement status for the NFT …\nAdds the specified prefix to the path.\nAdds the specified prefix to the trace path.\nBase class of the relayed non-fungible token.\nReturn empty trace path\nDefines the Non-Fungible Token Transfer (ICS-721) error …\nDefines Non-Fungible Token Transfer (ICS-721) event types.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe parsing logic is same as <code>FromStr</code> impl of <code>PrefixedDenom</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the path is empty and false otherwise.\nReturns true if the class ID originally came from the …\nReturns true if the class ID originally came from the …\nDefines the Non-Fungible Token Transfer (ICS-721) message …\nContains the <code>PacketData</code> type that defines the structure of …\nParses the data in the format specified by ICS-721.\nRe-exports ICS-721 NFT transfer proto types from the …\nRemoves the specified prefix from the path if there is a …\nRemoves the specified prefix from the trace path if there …\nReturns true iff this path starts with the specified prefix\nReturns a string slice with <code>TracePrefix</code> removed.\nA series of <code>{port-id}/{channel-id}</code>s for tracing the source …\nReturns a string slice with <code>TracePath</code> or all <code>TracePrefix</code>es …\nchannel error: {0}\ndecoding error: {0}\nfailed to deserialize acknowledgement\nfailed to deserialize packet data\nhost error: {0}\ninvalid channel state: cannot be closed\nmismatched channel orders: expected <code>{expected}</code>, actual …\nmismatched number of token IDs: expected <code>{expected}</code>, …\nmismatched port IDs: expected <code>{expected}</code>, actual <code>{actual}</code>\nmissing destination channel <code>{channel_id}</code> on port <code>{port_id}</code>\nmissing token ID\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEvent emitted in the <code>onAcknowledgePacket</code> module callback\nEvent emitted in the <code>onAcknowledgePacket</code> module callback …\nContains all events variants that can be emitted from the …\nEvent emitted by the <code>onRecvPacket</code> module callback to …\nEvent emitted in the <code>onTimeoutPacket</code> module callback\nEvent emitted in the <code>onRecvPacket</code> module callback when new …\nEvent emitted after a successful <code>sendTransfer</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDefines the Non-Fungible Token Transfer message type\nMessage used to build an ICS-721 Non-Fungible Token …\nthe channel by which the packet will be sent\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nNFT transfer packet data of the packet that will be sent\nthe port on which the packet will be sent\nTimeout height relative to the current block height. The …\nTimeout timestamp relative to the current block timestamp. …\nDefines the structure of token transfers’ packet bytes\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPerforms the basic validation of the packet data fields.\nClassTrace contains the base classID for ICS721 …\nGenesisState defines the ibc-nft-transfer genesis state\nMsgTransfer defines a msg to transfer non fungible tokens …\nMsgTransferResponse defines the Msg/Transfer response type.\nMsgUpdateParams is the Msg/UpdateParams request type.\nMsgUpdateParamsResponse defines the response structure for …\nNonFungibleTokenPacketData defines a struct for the packet …\nParams defines the set of IBC nft-transfer parameters. …\nQueryClassHashRequest is the request type for the …\nQueryClassHashResponse is the response type for the …\nQueryClassTraceRequest is the request type for the …\nQueryClassTraceResponse is the response type for the …\nQueryConnectionsRequest is the request type for the …\nQueryClassTracesResponse is the response type for the …\nQueryEscrowAddressRequest is the request type for the …\nQueryEscrowAddressResponse is the response type of the …\nQueryParamsRequest is request type for the Query/Params …\nQueryParamsResponse is response type for the Query/Params …\nauthority is the address that controls the module …\nbase classID of the relayed non-fungible token.\nunique channel identifier\nthe class_data of class to be transferred\nthe class_id of tokens to be transferred\nthe class_id of class to be transferred\nclass_trace returns the requested class trace information.\nclass_traces returns all class trace information.\nthe class_uri of class to be transferred\nthe escrow account address\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nhash (in hex format) or classID (full classID with ibc …\nhash (in hex format) of the denomination trace information.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\noptional memo\noptional memo\nGenerated client implementations.\npagination defines an optional pagination for the request.\npagination defines the pagination in the response.\nparams defines the nft-transfer parameters to update.\nparams holds all the parameters of this module.\npath defines the chain of port/channel identifiers used …\nunique port identifier\nGenerated client implementations.\nreceive_enabled enables or disables all cross-chain nft …\nthe recipient address on the destination chain\nthe recipient address on the destination chain\nsend_enabled enables or disables all cross-chain nft …\nthe sender address\nthe sender address\nsequence number of the transfer packet sent\nthe channel by which the packet will be sent\nthe port on which the packet will be sent\nTimeout height relative to the current block height. The …\nTimeout timestamp in absolute nanoseconds since unix epoch.\nthe non fungible tokens’s data to be transferred\nthe non fungible tokens to be transferred\nthe non fungible tokens to be transferred\nthe non fungible tokens’s uri to be transferred\nThe class trace <code>([port_id]/[channel_id])+/[class]</code>\nMsg defines the ibc/nft-transfer Msg service.\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nTransfer defines a rpc handler method for MsgTransfer.\nUpdateParams defines a governance operation for updating …\nQuery provides defines the gRPC querier service.\nEnable decompressing responses.\nClassHash queries a class hash information.\nClassTrace queries a class trace information.\nClassTraces queries all class traces.\nAttempt to create a new client by connecting to a given …\nEscrowAddress returns the escrow address for a particular …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nParams queries all parameters of the nft-transfer module.\nCompress requests with the given encoding.\nDefines the main context traits and IBC module callbacks\nImplements the processing logic for ICS20 (token transfer) …\nRe-exports the implementation of the IBC fungible token …\nNative chain account id.\nMethods required in token transfer execution, to be …\nMethods required in token transfer validation, to be …\nExecutes burning of the tokens in a user account.\nValidates the sender account and the coin input before …\nReturns Ok() if the host chain supports receiving coins.\nReturns Ok() if the host chain supports sending coins.\nReturns a hash of the prefixed denom. Implement only if …\nExecutes the escrow of the tokens in a user account.\nValidates that the tokens can be escrowed successfully.\nget_port returns the portID for the transfer module.\nExecutes minting of the tokens in a user account.\nValidates the receiver account and the coin input\nAttempt to convert a <code>Signer</code> to a native chain receiver …\nAttempt to convert a <code>Signer</code> to a native chain sender …\nExecutes the unescrow of the tokens in a user account.\nValidates that the tokens can be unescrowed successfully.\nThis function handles the transfer receiving logic.\nInitiate a token transfer. Equivalent to calling …\nExecutes the token transfer. A prior call to …\nValidates the token transfer. If this succeeds, then it is …\nThe successful string, used for creating an …\nA type for representing token transfer amounts.\nA <code>Coin</code> type with an unprefixed denomination.\nThe “base” of a denomination.\nCoin defines a token with a denomination and an amount.\nMaximum value.\nModule identifier for the ICS20 application.\nRepresents the token transfer memo\nThe port identifier that the ICS20 applications typically …\nA <code>Coin</code> type with fully qualified <code>PrefixedDenom</code>.\nA type that contains the base denomination for ICS20 and …\nA full trace path modelled as a collection of <code>TracePrefix</code>s.\nOne hop in a token’s trace, which consists of the port …\nLittle-endian large integer type 256-bit unsigned integer.\nICS20 application current version.\nComputes the absolute difference between self and other.\nReturns a successful acknowledgement status for the token …\nAdds the specified prefix to the trace path.\nAmount\nAmount\nAmount\nAmount\nConversion to u128 with overflow checking\nConversion to u32 with overflow checking\nConversion to u64 with overflow checking\nConversion to usize with overflow checking\nBase denomination of the relayed fungible token.\nReturn if specific bit is set.\nReturn the least number of bits needed to represent the …\nReturn specific byte. Byte 0 is the least significant …\nChecked addition. Returns <code>None</code> if overflow occurred.\nChecked division. Returns <code>None</code> if <code>other == 0</code>.\nChecked multiplication. Returns <code>None</code> if overflow occurred.\nChecked negation. Returns <code>None</code> unless <code>self == 0</code>.\nChecked exponentiation. Returns <code>None</code> if overflow occurred.\nChecked modulus. Returns <code>None</code> if <code>other == 0</code>.\nChecked subtraction. Returns <code>None</code> if overflow occurred.\nDenomination\nDenomination\nDenomination\nDenomination\nReturns a pair <code>(self / other, self % other)</code>.\nDefines the token transfer error type\nDefines all token transfer event types\nCreate <code>10**n</code> as this type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts from big endian representation bytes in memory.\nConvert from a decimal string.\nConverts from little endian representation bytes in memory.\nInitializes a <code>PrefixedDenom</code> from a string that adheres to …\nConverts a string slice in a given base to an integer. …\nMultiplies two 256-bit integers to produce full 512-bit …\nCompute the highest <code>n</code> such that <code>n * n &lt;= self</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the denomination originally came from the …\nReturns true if the denomination originally came from the …\nWhether this is zero.\nReturns the number of leading zeros in the binary …\nLow 2 words (u128)\nConversion to u32\nLow word (u64)\nThe maximum value which can be inhabited by this type.\nDefines the token transfer message type\nOne (multiplicative identity) of this type.\nAddition which overflows and returns a flag if it does.\nMultiply with overflow, returning a flag if it does.\nNegation with overflow.\nFast exponentiation by squaring. Returns result and …\nSubtraction which underflows and returns a flag if it does.\nContains the <code>PacketData</code> type that defines the structure of …\nFast exponentiation by squaring …\nRe-exports ICS-20 token transfer proto types from the …\nRemoves the specified prefix from the trace path if there …\nAddition which saturates at the maximum value (Self::MAX).\nMultiplication which saturates at the maximum value..\nSubtraction which saturates at zero.\nConvert to big-endian bytes.\nConvert to little-endian bytes.\nA series of <code>{port-id}/{channel-id}</code>s for tracing the source …\nReturns the number of trailing zeros in the binary …\nWrite to the slice in big-endian format.\nZero (additive identity) of this type.\nchannel error: {0}\ndecoding error: {0}\nfailed to deserialize acknowledgement\nfailed to deserialize packet data\nhost error: {0}\ninvalid channel state: cannot be closed\nmismatched channel orders: expected <code>{expected}</code>, actual …\nmismatched port IDs: expected <code>{expected}</code>, actual <code>{actual}</code>\nmissing destination channel <code>{channel_id}</code> on port <code>{port_id}</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEvent emitted in the <code>onAcknowledgePacket</code> module callback\nEvent emitted in the <code>onAcknowledgePacket</code> module callback …\nEvent emitted in the <code>onRecvPacket</code> module callback when new …\nContains all events variants that can be emitted from the …\nEvent emitted by the <code>onRecvPacket</code> module callback to …\nEvent emitted in the <code>onTimeoutPacket</code> module callback\nEvent emitted after a successful <code>sendTransfer</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDefines the token transfer message type\nMessage used to build an ICS20 token transfer packet.\nthe channel by which the packet will be sent\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\ntoken transfer packet data of the packet that will be sent\nthe port on which the packet will be sent\nTimeout height relative to the current block height. The …\nTimeout timestamp relative to the current block timestamp. …\nDefines the structure of token transfers’ packet bytes\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAllocation defines the spend limit for a particular port …\nDenomTrace contains the base denomination for ICS20 …\nGenesisState defines the ibc-transfer genesis state\nMsgTransfer defines a msg to transfer fungible tokens (i.e …\nMsgTransferResponse defines the Msg/Transfer response type.\nMsgUpdateParams is the Msg/UpdateParams request type.\nMsgUpdateParamsResponse defines the response structure for …\nParams defines the set of IBC transfer parameters. NOTE: …\nQueryDenomHashRequest is the request type for the …\nQueryDenomHashResponse is the response type for the …\nQueryDenomTraceRequest is the request type for the …\nQueryDenomTraceResponse is the response type for the …\nQueryConnectionsRequest is the request type for the …\nQueryConnectionsResponse is the response type for the …\nQueryEscrowAddressRequest is the request type for the …\nQueryEscrowAddressResponse is the response type of the …\nQueryParamsRequest is the request type for the …\nQueryParamsResponse is the response type for the …\nQueryTotalEscrowForDenomRequest is the request type for …\nQueryTotalEscrowForDenomResponse is the response type for …\nTransferAuthorization allows the grantee to spend up to …\nport and channel amounts\nallow list of receivers, an empty allow list permits any …\nallow list of packet data keys, an empty list prohibits …\nbase denomination of the relayed fungible token.\nunique channel identifier\ndenom_trace returns the requested denomination trace …\ndenom_traces returns all denominations trace information.\nthe escrow account address\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nhash (in hex format) or denom (full denom with ibc prefix) …\nhash (in hex format) of the denomination trace information.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\noptional memo\nGenerated client implementations.\npagination defines an optional pagination for the request.\npagination defines the pagination in the response.\nparams defines the transfer parameters to update.\nparams defines the parameters of the module.\npath defines the chain of port/channel identifiers used …\nunique port identifier\nGenerated client implementations.\nreceive_enabled enables or disables all cross-chain token …\nthe recipient address on the destination chain\nsend_enabled enables or disables all cross-chain token …\nthe sender address\nsequence number of the transfer packet sent\nsigner address\nthe channel by which the packet will be sent\nthe channel by which the packet will be sent\nthe port on which the packet will be sent\nthe port on which the packet will be sent\nspend limitation on the channel\nTimeout height relative to the current block height. The …\nTimeout timestamp in absolute nanoseconds since unix epoch.\nthe tokens to be transferred\ntotal_escrowed contains the total amount of tokens escrowed\nThe denomination trace <code>([port_id]/[channel_id])+/[denom]</code>\nMsg defines the ibc/transfer Msg service.\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nTransfer defines a rpc handler method for MsgTransfer.\nUpdateParams defines a rpc handler for MsgUpdateParams.\nQuery provides defines the gRPC querier service.\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nDenomHash queries a denomination hash information.\nDenomTrace queries a denomination trace information.\nDenomTraces queries all denomination traces.\nEscrowAddress returns the escrow address for a particular …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nParams queries all parameters of the ibc-transfer module.\nCompress requests with the given encoding.\nTotalEscrowForDenom returns the total amount of tokens in …\nFungibleTokenPacketData defines a struct for the packet …\nthe token amount to be transferred\nthe token denomination to be transferred\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\noptional memo\nthe recipient address on the destination chain\nthe sender address\nRe-exports implementations of ICS-07 Tendermint light …\nRe-exports implementations of ICS-08 Wasm light client …\nThis module includes trait implementations for the …\nThis module includes trait implementations for the …\nRe-exports Tendermint light client data structures from the\nNewtype wrapper around the <code>ClientState</code> type, imported from …\nCheck for misbehaviour on the client state as part of the …\nChecks for misbehaviour upon receiving a new consensus …\nCheck that the subject and substitute client states match …\nDetermines the <code>Status</code>, whether it is <code>Active</code> or <code>Expired</code>, of …\nReturns the argument unchanged.\nSeed the host store with initial client and consensus …\nCalls <code>U::from(self)</code>.\nRemoves consensus states from the client store whose …\nQuery the status of the client state.\nCommit a frozen client state, which was frozen as a result …\nUpdate the <code>client_state</code>’s ID, trusting period, latest …\nCommit the new client state and consensus state to the …\nUpdate the host store with a new client state, pruning old …\nValidate the given proof height against the client state’…\nVerify the client message as part of the client state …\nThe default verification logic exposed by ibc-rs simply …\nVerify an <code>Any</code> consensus state by attempting to convert it …\nVerify membership of the given value against the client’…\nDetermines if two conflicting headers at the same height …\nVerify that the given value does not belong in the client…\nPerform client-specific verifications and check all data …\nNewtype wrapper around the <code>ConsensusState</code> type imported …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDefines data structure for Tendermint client state.\nDefines the Tendermint light client’s consensus state\nTendermint consensus header\nTendermint light client’s misbehaviour type\nConstant for a trust threshold of 1/3.\nConstant for a trust threshold of 2/3.\n<code>TrustThreshold</code> defines the level of trust that a client has\nConstant for a trust threshold of 0/0.\nHelper method to produce a <code>Options</code> struct for use in …\n<code>header.trusted_next_validator_set</code> was given to us by the …\nReturns the tendermint <code>ClientType</code>\nThe denominator of the fraction underlying this trust …\nDefines the Tendermint light client’s error type\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructs a new Tendermint <code>ClientState</code> by given …\nInstantiate a TrustThreshold with the given denominator and\nThe numerator of the fraction underlying this trust …\nRe-exports ICS-07 Tendermint light client from <code>ibc-proto</code> …\nGet the refresh time to ensure the state does not expire\nReturns the timestamp of the consensus state as a …\nChecks if the fields of a given header are consistent with …\ndecoding error: {0}\nfailed to verify header: {0}\ninsufficient misbehaviour header height: header1 height …\ninsufficient trusting period <code>{trusting_period:?}</code>; should …\ninsufficient validator overlap <code>{0}</code>\ninvalid header height <code>{0}</code>\ninvalid max clock drift; must be greater than 0\ninvalid client proof specs <code>{0}</code>\ninvalid timestamp <code>{0}</code>\ninvalid client state trust threshold: {description}\nmismatched header chain ids: expected <code>{expected}</code>, actual …\nmismatched revision heights: expected <code>{expected}</code>, actual …\nmismatched validator hashes: expected <code>{expected}</code>, actual …\nmissing client state upgrade-path key\nThe main error type for the Tendermint light client\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nClientState from Tendermint tracks the current validator …\nConsensusState defines the consensus state from Tendermint.\nFraction defines the protobuf message type for …\nHeader defines the Tendermint client consensus Header. It …\nMisbehaviour is a wrapper over two conflicting Headers …\nallow_update_after_expiry is deprecated\nallow_update_after_misbehaviour is deprecated\nClientID is deprecated\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBlock height when the client was frozen due to a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLatest height the client was updated to\ndefines how much new (untrusted) header’s Time can drift …\nProof specifications used in verifying counterparty state\ncommitment root (i.e app hash)\ntimestamp that corresponds to the block height in which …\nduration of the period since the LastestTimestamp during …\nduration of the staking unbonding period\nPath at which next upgraded client will be committed. Each …\nDefines the client message type for the ICS-08 Wasm light …\nDefines the client state type for the ICS-08 Wasm light …\nReturns the wasm <code>ClientType</code>\nDefines the consensus state type for the ICS-08 Wasm light …\nContains definitions of message types for the ICS-08 Wasm …\nRe-exports ICS-08 Wasm light client proto types from …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDefines the message type for migrating a Wasm contract on …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDefines the message type for removing a checksum from the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDefines the message type for storing the Wasm byte code on …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nChecksums defines a list of all checksums that are stored\nWasm light client message (either header(s) or …\nWasm light client’s Client state\nWasm light client’s ConsensusState\nContract stores contract code\nGenesisState defines 08-wasm’s keeper genesis state\nMsgMigrateContract defines the request type for the …\nMsgMigrateContractResponse defines the response type for …\nMsgRemoveChecksum defines the request type for the …\nMsgStoreChecksumResponse defines the response type for the …\nMsgStoreCode defines the request type for the StoreCode …\nMsgStoreCodeResponse defines the response type for the …\nQueryChecksumsRequest is the request type for the …\nQueryChecksumsResponse is the response type for the …\nQueryCodeRequest is the request type for the Query/Code …\nQueryCodeResponse is the response type for the Query/Code …\nchecksum is the sha256 hash of the stored code\nchecksum is the sha256 hash to be removed from the store\nchecksum is the sha256 hash of the new wasm byte code for …\nchecksum is a hex encoded string of the code stored.\nchecksums is a list of the hex encoded checksums of all …\nthe client id of the contract\ncontract byte code\nuploaded light client wasm contracts\nbytes encoding the client state of the underlying light …\nbytes encoding the consensus state of the underlying light …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nthe json encoded message to be passed to the contract on …\nGenerated client implementations.\npagination defines an optional pagination for the request.\npagination defines the pagination in the response.\nGenerated client implementations.\nsigner address\nsigner address\nsigner address\nwasm byte code of light client contract. It can be raw or …\nMsg defines the ibc/08-wasm Msg service.\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nMigrateContract defines a rpc handler method for …\nRemoveChecksum defines a rpc handler method for …\nCompress requests with the given encoding.\nStoreCode defines a rpc handler method for MsgStoreCode.\nQuery service for wasm module\nEnable decompressing responses.\nGet all Wasm checksums\nGet Wasm code for given checksum\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRe-exports ICS-04 implementation from the <code>ibc-core-channel</code> …\nRe-exports ICS-02 implementation from the <code>ibc-core-client</code> …\nRe-exports ICS-23 data structures from the …\nRe-exports ICS-03 implementation from the …\nRe-exports convenient derive macros from <code>ibc-derive</code> crate.\nRe-exports IBC handler entrypoints from the …\nRe-exports ICS-25 implementation from the <code>ibc-core-handler</code> …\nRe-exports ICS-24 implementation from the <code>ibc-core-host</code> …\nRe-exports IBC primitive types from the <code>ibc-primitives</code> …\nRe-exports ICS-26 implementation from the <code>ibc-core-router</code> …\nICS4 (channel) context.\nThis module implements the processing logic for ICS4 …\nRe-exports ICS-04 data structures from the …\nMethods required in send packet execution, to be …\nMethods required in send packet validation, to be …\nReturns the ChannelEnd for the given <code>port_id</code> and <code>chan_id</code>.\nReturns the ConnectionState for the given identifier …\nIbc events\nRetrieve the context that implements all clients’ …\nLogging facility\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSend the given packet, including all necessary validation.\nSend the packet without any validation.\nValidate that sending the given packet would succeed.\nThe version field for a <code>ChannelEnd</code>.\nDefines acknowledgment types used by various IBC messages …\nImplementation of IBC channels, as described in ICS-04.\nTypes and utilities related to packet commitments.\nDefines the main channel, port, and packet error types\nTypes for the IBC events emitted from Tendermint Websocket …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMessage definitions for all ICS4 domain types: channel …\nDefines the packet type\nRe-exports ICS-04 proto types from the <code>ibc-proto</code> crate\nA generic Acknowledgement type that modules may interpret …\nDefines a convenience type for IBC applications to …\nError Acknowledgement e.g. …\nA wrapper type that guards variants of …\nSuccessful Acknowledgement e.g. <code>{&quot;result&quot;:&quot;AQ==&quot;}</code>\nCreates an error acknowledgement status with the given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the acknowledgement status is successful.\nConstructs a new instance of <code>StatusValue</code> if the given …\nCreates a success acknowledgement status with the given …\nOne end of a channel\nA <code>ChannelEnd</code> along with its ID and the port it is bound to\nRepresents the channel ordering\nRepresents the state of a <code>ChannelEnd</code>\nYields the Order as a string\nYields the state as a string\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if this <code>ChannelEnd</code> is in state <code>State::Open</code>.\nReturns if this channel state is <code>Open</code>.\nReturns if the channel with this state has progressed less …\nCreates a new <code>ChannelEnd</code> with performing basic validation …\nHelper function to compare the order of this end with …\nUpdates the ChannelEnd to assume a new State ‘s’.\nChecks if the <code>connection_hops</code> has a length of <code>expected</code>.\nChecks if the counterparty of this channel end matches …\nChecks if the state of this channel end is not closed.\nChecks if the state of this channel end matches the …\nAcknowledgement of commitment to be stored\nPacket commitment\nCompute the commitment for an acknowledgement.\nCompute the commitment for a packet.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\napplication specific error: <code>{description}</code>\nErrors that arise from the ICS04 Channel module\nclient error: {0}\nconnection error: {0}\ndecoding error: {0}\npacket acknowledgment for sequence <code>{0}</code> already exists\nexpired packet timestamp: should be greater than chain …\nhost error: {0}\ninsufficient packet timeout height: should have …\npacket timeout height <code>{timeout_height}</code> &gt; chain height …\ninvalid connection hops length: expected <code>{expected}</code>, …\ninvalid channel state: expected <code>{expected}</code>, actual <code>{actual}</code>\nmismatched counterparty: expected <code>{expected}</code>, actual …\nmismatched packet commitments: expected <code>{expected:?}</code>, …\nmismatched packet sequence: expected <code>{expected}</code>, actual …\nmissing acknowledgment status\nmissing counterparty\nmissing timeout\ntimestamp error: {0}\nunsupported version: expected <code>{expected}</code>, actual <code>{actual}</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA <code>ChannelClosed</code> event is emitted when a channel is closed …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAll channel messages\nMessage definition for packet acknowledgements.\nMessage definition for the second step in the channel …\nMessage definition for the first step in the channel close …\nMessage definition for the third step in the channel open …\nMessage definition for the fourth step in the channel open …\nMessage definition for the first step in the channel open …\nMessage definition for the second step in the channel open …\nMessage definition for the “packet receiving” datagram.\nMessage definition for packet timeout domain type, which …\nMessage definition for packet timeout domain type.\nAll packet messages\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe packet to be received\nProof of packet acknowledgement on the receiving chain\nProof of packet commitment on the sending chain\nHeight at which the commitment proof in this message were …\nHeight at which the commitment proof in this message was …\nThe signer of the message\nChecks if the <code>connection_hops</code> has a length of <code>expected</code>.\nChecks if the <code>connection_hops</code> has a length of <code>expected</code>.\nAllow a relayer to specify a particular version by …\nOnly kept here for proper conversion to/from the raw type\nThe packet type; this is what applications send to one …\nEnumeration of proof carrying ICS4 message, helper for …\nThe packet state type.\nPacket receipt, used over unordered channels.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks whether a packet from a <code>SendPacket</code> event is …\nAcknowledgement is the recommended acknowledgement format …\nChannel defines pipeline for exactly-once packet delivery …\nA channel has been closed and can no longer be used to …\nCounterparty defines a channel end counterparty\nErrorReceipt defines a type which encapsulates the upgrade …\nThe message was executed unsuccessfully\nA channel has just completed flushing any in-flight …\nA channel has just accepted the upgrade handshake attempt …\nGenesisState defines the ibc channel submodule’s genesis …\nIdentifiedChannel defines a channel with additional port …\nA channel has just started the opening handshake.\nMsgAcknowledgement receives incoming IBC acknowledgement\nMsgAcknowledgementResponse defines the Msg/Acknowledgement …\nMsgChannelCloseConfirm defines a msg sent by a Relayer to …\nMsgChannelCloseConfirmResponse defines the …\nMsgChannelCloseInit defines a msg sent by a Relayer to …\nMsgChannelCloseInitResponse defines the …\nMsgChannelOpenAck defines a msg sent by a Relayer to Chain …\nMsgChannelOpenAckResponse defines the Msg/ChannelOpenAck …\nMsgChannelOpenConfirm defines a msg sent by a Relayer to …\nMsgChannelOpenConfirmResponse defines the …\nMsgChannelOpenInit defines an sdk.Msg to initialize a …\nMsgChannelOpenInitResponse defines the Msg/ChannelOpenInit …\nMsgChannelOpenInit defines a msg sent by a Relayer to try …\nMsgChannelOpenTryResponse defines the Msg/ChannelOpenTry …\nMsgChannelUpgradeAck defines the request type for the …\nMsgChannelUpgradeAckResponse defines MsgChannelUpgradeAck …\nMsgChannelUpgradeCancel defines the request type for the …\nMsgChannelUpgradeCancelResponse defines the …\nMsgChannelUpgradeConfirm defines the request type for the …\nMsgChannelUpgradeConfirmResponse defines …\nMsgChannelUpgradeInit defines the request type for the …\nMsgChannelUpgradeInitResponse defines the …\nMsgChannelUpgradeOpen defines the request type for the …\nMsgChannelUpgradeOpenResponse defines the …\nMsgChannelUpgradeTimeout defines the request type for the …\nMsgChannelUpgradeTimeoutRepsonse defines the …\nMsgChannelUpgradeTry defines the request type for the …\nMsgChannelUpgradeTryResponse defines the …\nMsgPruneAcknowledgements defines the request type for the …\nMsgPruneAcknowledgementsResponse defines the response type …\nMsgRecvPacket receives incoming IBC packet\nMsgRecvPacketResponse defines the Msg/RecvPacket response …\nMsgTimeout receives timed-out packet\nMsgTimeoutOnClose timed-out packet upon counterparty …\nMsgTimeoutOnCloseResponse defines the Msg/TimeoutOnClose …\nMsgTimeoutResponse defines the Msg/Timeout response type.\nMsgUpdateParams is the MsgUpdateParams request type.\nMsgUpdateParamsResponse defines the MsgUpdateParams …\nzero-value for channel ordering\nThe message did not call the IBC application callbacks …\nA channel has completed the handshake. Open channels are …\nOrder defines if a channel is ORDERED or UNORDERED\npackets are delivered exactly in the order which they were …\nPacket defines a type that carries data across different …\nPacketId is an identifer for a unique Packet Source chains …\nPacketSequence defines the genesis type necessary to …\nPacketState defines the generic type necessary to retrieve …\nParams defines the set of IBC channel parameters.\nQueryChannelClientStateRequest is the request type for the …\nQueryChannelClientStateResponse is the Response type for …\nQueryChannelConsensusStateRequest is the request type for …\nQueryChannelClientStateResponse is the Response type for …\nQueryChannelParamsRequest is the request type for the …\nQueryChannelParamsResponse is the response type for the …\nQueryChannelRequest is the request type for the …\nQueryChannelResponse is the response type for the …\nQueryChannelsRequest is the request type for the …\nQueryChannelsResponse is the response type for the …\nQueryConnectionChannelsRequest is the request type for the …\nQueryConnectionChannelsResponse is the Response type for …\nQueryNextSequenceReceiveRequest is the request type for the\nQuerySequenceResponse is the response type for the …\nQueryNextSequenceSendRequest is the request type for the …\nQueryNextSequenceSendResponse is the request type for the …\nQueryPacketAcknowledgementRequest is the request type for …\nQueryPacketAcknowledgementResponse defines the client …\nQueryPacketAcknowledgementsRequest is the request type for …\nQueryPacketAcknowledgemetsResponse is the request type for …\nQueryPacketCommitmentRequest is the request type for the …\nQueryPacketCommitmentResponse defines the client query …\nQueryPacketCommitmentsRequest is the request type for the …\nQueryPacketCommitmentsResponse is the request type for the …\nQueryPacketReceiptRequest is the request type for the …\nQueryPacketReceiptResponse defines the client query …\nQueryUnreceivedAcks is the request type for the …\nQueryUnreceivedAcksResponse is the response type for the …\nQueryUnreceivedPacketsRequest is the request type for the …\nQueryUnreceivedPacketsResponse is the response type for the\nQueryUpgradeErrorRequest is the request type for the …\nQueryUpgradeErrorResponse is the response type for the …\nQueryUpgradeRequest is the request type for the …\nQueryUpgradeResponse is the response type for the …\nResponseResultType defines the possible outcomes of the …\nState defines if a channel is in one of the following …\nThe message was executed successfully\nTimeout defines an execution deadline structure for …\nA channel has acknowledged the handshake step on the …\nDefault State\npackets can be delivered in any order, which may differ …\nDefault zero value enumeration\nUpgrade is a verifiable type which contains the relevant …\nUpgradeFields are the fields in a channel end which may be …\nNested message and enum types in <code>Acknowledgement</code>.\npacket associated with the request fields\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nauthority is the address that controls the module …\nNOTE: the version field within the channel has been …\nchannel associated with the request identifiers\nchannel identifier\nchannel end on the counterparty chain\nchannel unique identifier.\nchannel unique identifier\nchannel unique identifier\nchannel unique identifier\nchannel unique identifier\nchannel unique identifier\nchannel unique identifier\nchannel unique identifier\nchannel unique identifier\nchannel unique identifier\nchannel unique identifier\nchannel unique identifier\nchannel unique identifier\nchannel unique identifier\nlist of stored channels of the chain.\nlist of channels associated with a connection.\nclient ID associated with the consensus state\npacket associated with the request fields\nconnection unique identifier\nlist of connection identifiers, in order, along which …\nlist of connection identifiers, in order, along which …\nconsensus state associated with the channel\ncounterparty channel end\ncounterparty channel end\nReturns the enum value of <code>counterparty_channel_state</code>, or …\nReturns the enum value of <code>counterparty_channel_state</code>, or …\nactual opaque bytes transferred directly to the …\nembedded data that represents packet state.\nidentifies the channel end on the receiving chain.\nidentifies the port on the receiving chain.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>State</code>, or <code>None</code> if <code>value</code> is not a …\nConverts an <code>i32</code> to a <code>Order</code>, or <code>None</code> if <code>value</code> is not a …\nConverts an <code>i32</code> to a <code>ResponseResultType</code>, or <code>None</code> if <code>value</code> …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nblock height after which the packet or upgrade times out\nquery block height\nquery block height\nquery block height\nquery block height\nquery block height\nquery block height\nclient state associated with the channel\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>State</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Order</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>ResponseResultType</code>.\nthe error message detailing the cause of failure\nGenerated client implementations.\nthe sequence for the next generated channel identifier\nnext sequence receive number\nnext sequence send number\nReturns the enum value of <code>ordering</code>, or the default if the …\nReturns the enum value of <code>ordering</code>, or the default if the …\nReturns the enum value of <code>ordering</code>, or the default if the …\nwhether the channel is ordered or unordered\nwhether the channel is ordered or unordered\nlist of acknowledgement sequences\nlist of packet sequences\nlist of packet sequences\npagination request\npagination response\npagination request\npagination response\npagination request\npagination response\npagination request\npagination response\nparams defines the channel parameters to update.\nparams defines the parameters of the module.\nport identifier\nport on the counterparty chain which owns the other end of …\nchannel port identifier.\nchannel port identifier\nport unique identifier\nport unique identifier\nport unique identifier\nport unique identifier\nport unique identifier\nport unique identifier\nport unique identifier\nport unique identifier\nport unique identifier\nport unique identifier\nport unique identifier\nport unique identifier\nDeprecated: this field is unused. Crossing hello’s are …\nmerkle proof of existence\nmerkle proof of existence\nmerkle proof of existence\nmerkle proof of existence\nmerkle proof of existence\nmerkle proof of existence\nmerkle proof of existence\nmerkle proof of existence\nmerkle proof of existence\nmerkle proof of existence\nheight at which the proof was retrieved\nheight at which the proof was retrieved\nheight at which the proof was retrieved\nheight at which the proof was retrieved\nheight at which the proof was retrieved\nheight at which the proof was retrieved\nheight at which the proof was retrieved\nheight at which the proof was retrieved\nheight at which the proof was retrieved\nheight at which the proof was retrieved\nGenerated client implementations.\nsuccess flag for if receipt exists\nresponse contains either a result or an error and must be …\nReturns the enum value of <code>result</code>, or the default if the …\nReturns the enum value of <code>result</code>, or the default if the …\nReturns the enum value of <code>result</code>, or the default if the …\nReturns the enum value of <code>result</code>, or the default if the …\nReturns the enum value of <code>result</code>, or the default if the …\nReturns the enum value of <code>result</code>, or the default if the …\nReturns the enum value of <code>result</code>, or the default if the …\nrevision height of the consensus state\nrevision number of the consensus state\nnumber corresponds to the order of sends and receives, …\npacket sequence.\npacket sequence\nthe channel upgrade sequence\npacket sequence\npacket sequence\npacket sequence\nlist of unreceived packet sequences\nlist of unreceived acknowledgement sequences\nSets <code>counterparty_channel_state</code> to the provided enum value.\nSets <code>counterparty_channel_state</code> to the provided enum value.\nSets <code>ordering</code> to the provided enum value.\nSets <code>ordering</code> to the provided enum value.\nSets <code>ordering</code> to the provided enum value.\nSets <code>result</code> to the provided enum value.\nSets <code>result</code> to the provided enum value.\nSets <code>result</code> to the provided enum value.\nSets <code>result</code> to the provided enum value.\nSets <code>result</code> to the provided enum value.\nSets <code>result</code> to the provided enum value.\nSets <code>result</code> to the provided enum value.\nSets <code>state</code> to the provided enum value.\nSets <code>state</code> to the provided enum value.\nidentifies the channel end on the sending chain.\nidentifies the port on the sending chain.\nReturns the enum value of <code>state</code>, or the default if the …\nReturns the enum value of <code>state</code>, or the default if the …\ncurrent state of the channel end\ncurrent state of the channel end\nblock height after which the packet times out\nblock timestamp (in nanoseconds) after which the packet …\nblock timestamp (in nanoseconds) after which the packet or …\nNumber of sequences pruned (includes both packet …\nNumber of sequences left after pruning.\nupgrade sequence indicates the latest upgrade attempt …\nupgrade sequence indicates the latest upgrade attempt …\nthe relative timeout after which channel upgrades will …\nopaque channel version, which is agreed upon during the …\nopaque channel version, which is agreed upon during the …\nresponse contains either a result or an error and must be …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nMsg defines the ibc/channel Msg service.\nEnable decompressing responses.\nAcknowledgement defines a rpc handler method for …\nChannelCloseConfirm defines a rpc handler method for …\nChannelCloseInit defines a rpc handler method for …\nChannelOpenAck defines a rpc handler method for …\nChannelOpenConfirm defines a rpc handler method for …\nChannelOpenInit defines a rpc handler method for …\nChannelOpenTry defines a rpc handler method for …\nChannelUpgradeAck defines a rpc handler method for …\nChannelUpgradeCancel defines a rpc handler method for …\nChannelUpgradeConfirm defines a rpc handler method for …\nChannelUpgradeInit defines a rpc handler method for …\nChannelUpgradeOpen defines a rpc handler method for …\nChannelUpgradeTimeout defines a rpc handler method for …\nChannelUpgradeTry defines a rpc handler method for …\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nPruneAcknowledgements defines a rpc handler method for …\nRecvPacket defines a rpc handler method for MsgRecvPacket.\nCompress requests with the given encoding.\nTimeout defines a rpc handler method for MsgTimeout.\nTimeoutOnClose defines a rpc handler method for …\nUpdateChannelParams defines a rpc handler method for …\nQuery provides defines the gRPC querier service\nEnable decompressing responses.\nChannel queries an IBC Channel.\nChannelClientState queries for the client state for the …\nChannelConsensusState queries for the consensus state for …\nChannelParams queries all parameters of the ibc channel …\nChannels queries all the IBC channels of a chain.\nAttempt to create a new client by connecting to a given …\nConnectionChannels queries all the channels associated …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nNextSequenceReceive returns the next receive sequence for …\nNextSequenceSend returns the next send sequence for a …\nPacketAcknowledgement queries a stored packet …\nPacketAcknowledgements returns all the packet …\nPacketCommitment queries a stored packet commitment hash.\nPacketCommitments returns all the packet commitments …\nPacketReceipt queries if a given packet sequence has been …\nCompress requests with the given encoding.\nUnreceivedAcks returns all the unreceived IBC …\nUnreceivedPackets returns all the unreceived IBC packets …\nUpgrade returns the upgrade for a given port and channel …\nUpgradeError returns the error receipt if the upgrade …\nIndicates a consensus height on the destination chain …\nIndicates a timestamp on the destination chain after which …\nRevision height to be used in packet commitment computation\nRevision number to be used in packet commitment computation\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new timeout timestamp from a given nanosecond …\nCheck if a height is <em>strictly past</em> the timeout height, and …\nCheck if a timestamp is <em>strictly past</em> the timeout …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns if the timeout height is set.\nReturns <code>true</code> if the timeout timestamp is set.\nReturns the timestamp in nanoseconds, where 0 indicates …\nReturns a timeout timestamp that never expires.\nReturns a string formatted for an ABCI event attribute …\nRe-exports ICS-02 traits from <code>ibc-core-client-context</code> for …\nThis module implements the processing logic for ICS2 …\nRe-exports ICS-02 data structures from the …\nDefines the methods that all client <code>ExecutionContext</code>s …\nDefines the methods available to clients for validating …\nGeneral-purpose helper converter enabling <code>TryFrom</code> and <code>Into</code> …\nAn optional trait that extends the client context required …\nAn optional trait that extends the client validation …\nDefines <code>ClientState</code>, the core type to be implemented by …\nReturns the ClientState for the given identifier <code>client_id</code>.\nReturns the timestamp and height of the host when it …\nDefines the trait to be implemented by all concrete …\nRetrieve the consensus state for the given client ID at …\nReturns all the heights at which a consensus state is …\nDelete the consensus state from the store located at the …\nDelete the update time and height associated with the …\nReturns the current height of the local chain.\nReturns the current timestamp of the local chain.\nSearch for the lowest consensus state higher than <code>height</code>.\nTrait preludes for the ICS-02 client implementation.\nSearch for the highest consensus state lower than <code>height</code>.\nCalled upon successful client creation and update\nCalled upon successful client creation and update\nCalled upon successful client update.\nPrimary client trait. Defines all the methods that clients …\n<code>ClientState</code> methods needed in both validation and …\n<code>ClientState</code> methods which require access to the client’s …\n<code>ClientState</code> methods which require access to the client’s …\nChecks for evidence of a misbehaviour in Header or …\nVerifies whether the calling (subject) client state …\nType of client associated with this state (eg. Tendermint)\nInitialises the client with the initial client and …\nThe latest height the client was updated to\nSerializes a given path object into a raw path bytes.\nReturns the status of the client. Only Active clients are …\nUpdate the subject client using the <code>substitute_client_state</code>…\nUpdates and stores as necessary any associated information …\nupdate_state_on_misbehaviour should perform appropriate …\nUpdate the client state and consensus state in the store …\nValidate that the client is at a sufficient height\nverify_client_message must verify a client_message. A …\nPerforms basic validation on the <code>consensus_state</code>.\nVerifies a proof of the existence of a value at a given …\nVerifies a proof of the existence of a value at a given …\nVerifies the absence of a given proof at a given path …\nVerifies the absence of a given proof at a given raw path …\nVerify the upgraded client and consensus states and …\nDefines methods that all <code>ConsensusState</code>s should provide.\nCommitment root of the consensus state, which is used for …\nThe timestamp of the consensus state\nDefines the methods that all client <code>ExecutionContext</code>s …\nPrimary client trait. Defines all the methods that clients …\n<code>ClientState</code> methods needed in both validation and …\n<code>ClientState</code> methods which require access to the client’s …\n<code>ClientState</code> methods which require access to the client’s …\nDefines the methods available to clients for validating …\nDefines methods that all <code>ConsensusState</code>s should provide.\nGeneral-purpose helper converter enabling <code>TryFrom</code> and <code>Into</code> …\nAn optional trait that extends the client context required …\nAn optional trait that extends the client validation …\nChecks for evidence of a misbehaviour in Header or …\nVerifies whether the calling (subject) client state …\nReturns the ClientState for the given identifier <code>client_id</code>.\nType of client associated with this state (eg. Tendermint)\nReturns the timestamp and height of the host when it …\nRetrieve the consensus state for the given client ID at …\nReturns all the heights at which a consensus state is …\nDelete the consensus state from the store located at the …\nDelete the update time and height associated with the …\nReturns the current height of the local chain.\nReturns the current timestamp of the local chain.\nInitialises the client with the initial client and …\nThe latest height the client was updated to\nSearch for the lowest consensus state higher than <code>height</code>.\nSearch for the highest consensus state lower than <code>height</code>.\nCommitment root of the consensus state, which is used for …\nSerializes a given path object into a raw path bytes.\nReturns the status of the client. Only Active clients are …\nCalled upon successful client creation and update\nCalled upon successful client creation and update\nCalled upon successful client update.\nThe timestamp of the consensus state\nUpdate the subject client using the <code>substitute_client_state</code>…\nUpdates and stores as necessary any associated information …\nupdate_state_on_misbehaviour should perform appropriate …\nUpdate the client state and consensus state in the store …\nValidate that the client is at a sufficient height\nverify_client_message must verify a client_message. A …\nPerforms basic validation on the <code>consensus_state</code>.\nVerifies a proof of the existence of a value at a given …\nVerifies a proof of the existence of a value at a given …\nVerifies the absence of a given proof at a given path …\nVerifies the absence of a given proof at a given raw path …\nVerify the upgraded client and consensus states and …\nThe client is active and allowed to be used\nThe client is expired and not allowed to be used\nThe client is frozen and not allowed to be used\nThe core IBC height type, which represents the height of a …\nRepresents the status of a client\nthis is the scenario where misbehaviour is submitted to …\nUnauthorized indicates that the client type is not …\nthis is the typical scenario where a new header is …\n<code>UpdateKind</code> represents the 2 ways that a client can be …\nDefines the client error type\nTypes for the IBC events emitted from Tendermint Websocket …\nDefines the client message types that are sent to the …\nRe-exports ICS-02 proto types from the <code>ibc-proto</code> crate for …\nEncodes all the possible client errors\nclient-specific error: {description}\ndecoding error: {0}\ndecoding error: <code>{0}</code>\nduplicate client state <code>{0}</code>\nfailed ICS23 verification: {0}\nfailed to handle misbehaviour: {description}\nfailed to verify client recovery states\nfailed to verify header: {description}\nhost error : {0}\nhost chain error: <code>{0}</code>\ninsufficient proof height; expected <code>{actual}</code> &gt;= <code>{expected}</code>\ninsufficient upgrade client height <code>{upgraded_height}</code>; must …\ninvalid client recovery heights: expected substitute …\ninvalid client state type <code>{0}</code>\ninvalid consensus state timestamp <code>{0}</code>\ninvalid header type <code>{0}</code>\ninvalid height; cannot be zero or negative\ninvalid status <code>{0}</code>\ninvalid trust threshold <code>{numerator}</code>/<code>{denominator}</code>\ninvalid update client message\ninvalid proof for the upgraded client state: <code>{0}</code>\ninvalid proof for the upgraded consensus state: <code>{0}</code>\ninvalid upgrade path: <code>{description}</code>\ninvalid upgrade proposal: <code>{description}</code>\nmissing local consensus state at <code>{0}</code>\nmissing upgrade path\ntimestamp error: {0}\nupgrade client error: {0}\nEncodes all the possible upgrade client errors\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe content of the <code>key</code> field for the attribute containing …\nThe content of the <code>key</code> field for the attribute containing …\nThe content of the <code>key</code> field for the attribute containing …\nThe content of the <code>key</code> field for the attribute containing …\nClient event types\nClientMisbehaviour event signals the update of an on-chain …\nCreateClient event signals the creation of a new on-chain …\nThe content of the <code>key</code> field for the header in update …\nUpdateClient event signals a recent update of an on-chain …\nSignals a recent upgrade of an on-chain client (IBC …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructs a new UpdateClient event.\nEncodes all the different client messages\nA type of message that triggers the creation of a new …\nDefines the message used to recover a frozen or expired …\nA type of message that submits client misbehaviour proof.\nRepresents the message that triggers the update of an …\nA type of message that triggers the upgrade of an on-chain …\nclient unique identifier\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nmisbehaviour, used for freezing the light client\nsigner address\nThe address of the signer who serves as the authority for …\nClient identifier of the client to be updated if the …\nClient identifier of the client that will replace the …\nClientConsensusStates defines all the stored consensus …\nClientUpdateProposal is a legacy governance proposal. If …")