searchState.loadedDescShard("redjubjub", 0, "A minimal RedJubjub implementation for use in Zebra.\nA type variable corresponding to Zcash’s <code>BindingSig</code>.\nAn error related to RedJubJub signatures.\nSignature verification failed.\nThe encoding of a signing key was malformed.\nThe encoding of a verification key was malformed.\nAn element of the JubJub scalar field used for …\nAbstracts over different RedJubJub parameter choices, …\nA RedJubJub signature.\nA RedJubJub signing key.\nA type variable corresponding to Zcash’s <code>SpendAuthSig</code>.\nA valid RedJubJub verification key.\nA refinement type for <code>[u8; 32]</code> indicating that the bytes …\nPerforms batch RedJubjub signature verification.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGenerate a new signing key.\nRandomize this public key with the given <code>randomizer</code>.\nRandomize this verification key with the given <code>randomizer</code>.\nCreate a signature of type <code>T</code> on <code>msg</code> using this <code>SigningKey</code>.\nVerify a purported <code>signature</code> over <code>msg</code> made by this …\nA batch verification item.\nA batch verification context.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct a new batch verifier.\nQueue an Item for verification.\nPerform batch verification, returning <code>Ok(())</code> if all …\nPerform non-batched verification of this <code>Item</code>.")