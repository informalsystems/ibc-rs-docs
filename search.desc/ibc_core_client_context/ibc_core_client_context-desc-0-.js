searchState.loadedDescShard("ibc_core_client_context", 0, "This crate functions as an intermediary layer between the …\nDefines the methods that all client <code>ExecutionContext</code>s …\nDefines the methods available to clients for validating …\nGeneral-purpose helper converter enabling <code>TryFrom</code> and <code>Into</code> …\nAn optional trait that extends the client context required …\nAn optional trait that extends the client validation …\nDefines <code>ClientState</code>, the core type to be implemented by …\nReturns the ClientState for the given identifier <code>client_id</code>.\nReturns the timestamp and height of the host when it …\nDefines the trait to be implemented by all concrete …\nRetrieve the consensus state for the given client ID at …\nReturns all the heights at which a consensus state is …\nDelete the consensus state from the store located at the …\nDelete the update time and height associated with the …\nReturns the current height of the local chain.\nReturns the current timestamp of the local chain.\nSearch for the lowest consensus state higher than <code>height</code>.\nTrait preludes for the ICS-02 client implementation.\nSearch for the highest consensus state lower than <code>height</code>.\nCalled upon successful client creation and update\nCalled upon successful client creation and update\nCalled upon successful client update.\nPrimary client trait. Defines all the methods that clients …\n<code>ClientState</code> methods needed in both validation and …\n<code>ClientState</code> methods which require access to the client’s …\n<code>ClientState</code> methods which require access to the client’s …\nChecks for evidence of a misbehaviour in Header or …\nVerifies whether the calling (subject) client state …\nType of client associated with this state (eg. Tendermint)\nInitialises the client with the initial client and …\nThe latest height the client was updated to\nSerializes a given path object into a raw path bytes.\nReturns the status of the client. Only Active clients are …\nUpdate the subject client using the <code>substitute_client_state</code>…\nUpdates and stores as necessary any associated information …\nupdate_state_on_misbehaviour should perform appropriate …\nUpdate the client state and consensus state in the store …\nValidate that the client is at a sufficient height\nverify_client_message must verify a client_message. A …\nPerforms basic validation on the <code>consensus_state</code>.\nVerifies a proof of the existence of a value at a given …\nVerifies a proof of the existence of a value at a given …\nVerifies the absence of a given proof at a given path …\nVerifies the absence of a given proof at a given raw path …\nVerify the upgraded client and consensus states and …\nDefines methods that all <code>ConsensusState</code>s should provide.\nCommitment root of the consensus state, which is used for …\nThe timestamp of the consensus state\nDefines the methods that all client <code>ExecutionContext</code>s …\nDefines the methods available to clients for validating …\nGeneral-purpose helper converter enabling <code>TryFrom</code> and <code>Into</code> …\nAn optional trait that extends the client context required …\nAn optional trait that extends the client validation …\nReturns the ClientState for the given identifier <code>client_id</code>.\nReturns the timestamp and height of the host when it …\nRetrieve the consensus state for the given client ID at …\nReturns all the heights at which a consensus state is …\nDelete the consensus state from the store located at the …\nDelete the update time and height associated with the …\nReturns the current height of the local chain.\nReturns the current timestamp of the local chain.\nSearch for the lowest consensus state higher than <code>height</code>.\nSearch for the highest consensus state lower than <code>height</code>.\nCalled upon successful client creation and update\nCalled upon successful client creation and update\nCalled upon successful client update.\nThe client is active and allowed to be used\nThe client is expired and not allowed to be used\nThe client is frozen and not allowed to be used\nThe core IBC height type, which represents the height of a …\ncannot convert into a <code>Height</code> type from string <code>{height}</code>\nEncodes all errors related to chain heights\nthe height(<code>{raw_height}</code>) is not a valid format, this …\nRepresents the status of a client\nthis is the scenario where misbehaviour is submitted to …\nUnauthorized indicates that the client type is not …\nthis is the typical scenario where a new header is …\n<code>UpdateKind</code> represents the 2 ways that a client can be …\nattempted to parse an invalid zero height\nDefines the client error type\nTypes for the IBC events emitted from Tendermint Websocket …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDefines the client message types that are sent to the …\nRe-exports ICS-02 proto types from the <code>ibc-proto</code> crate for …\nChecks whether the status is active; returns <code>Err</code> if not.\nChecks whether the client is either frozen or expired; …\nmismatch between client and arguments types\nEncodes all the possible client errors\nclient is frozen with description: <code>{description}</code>\nclient is not active. Status=<code>{status}</code>\nclient is not frozen or expired. Status=<code>{status}</code>\nSubstitute client height <code>{substitute_height}</code> is not …\nSubject and substitute client state mismatch during client …\nclient-specific error: <code>{description}</code>\nclient state already exists: <code>{client_id}</code>\nclient state not found: <code>{client_id}</code>\nconsensus state not found at: <code>{client_id}</code> at height …\nclient counter overflow error\nfailed to build Tendermint domain type trust threshold …\nheader verification failed with reason: <code>{reason}</code>\nics23 verification failure error: <code>{0}</code>\ninvalid attribute key: <code>{attribute_key}</code>\ninvalid attribute value: <code>{attribute_value}</code>\ninvalid client identifier error: <code>{0}</code>\ninvalid commitment proof bytes error: <code>{0}</code>\ntimestamp is invalid or missing, timestamp=<code>{time1}</code>,  now=…\nrevision height cannot be zero\nheight cannot end up zero or negative\ninvalid client id in recover client message: <code>{0}</code>\ninvalid client id in the update client message: <code>{0}</code>\nthe proof height is insufficient: latest_height=…\ninvalid raw header error: <code>{reason}</code>\ninvalid raw misbehaviour error: <code>{0}</code>\ninvalid signer error: <code>{reason}</code>\nfailed to build trust threshold from fraction: <code>{numerator}</code>/…\nupdate client message did not contain valid header or …\ninvalid proof for the upgraded client state error: <code>{0}</code>\ninvalid proof for the upgraded consensus state error: <code>{0}</code>\nInvalid upgrade path: <code>{reason}</code>\ninvalid upgrade plan: <code>{reason}</code>\ninvalid upgrade proposal: <code>{reason}</code>\nupgraded client height <code>{upgraded_height}</code> must be at …\nmisbehaviour handling failed with reason: <code>{reason}</code>\nMissing attribute key: <code>{attribute_key}</code>\nmissing raw client message\nthe local consensus state could not be retrieved for …\nmissing raw client state\nmissing raw client consensus state\nmissing raw misbehaviour\nother error: <code>{description}</code>\nother upgrade client error: <code>{reason}</code>\nunknown client state type: <code>{client_state_type}</code>\nunknown client consensus state type: <code>{consensus_state_type}</code>\nunknown header type: <code>{header_type}</code>\nunknown misbehaviour type: <code>{misbehaviour_type}</code>\nProcessed time or height for the client <code>{client_id}</code> at …\nupgrade client error: <code>{0}</code>\nEncodes all the possible upgrade client errors\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe content of the <code>key</code> field for the attribute containing …\nThe content of the <code>key</code> field for the attribute containing …\nThe content of the <code>key</code> field for the attribute containing …\nThe content of the <code>key</code> field for the attribute containing …\nClient event types\nClientMisbehaviour event signals the update of an on-chain …\nCreateClient event signals the creation of a new on-chain …\nThe content of the <code>key</code> field for the header in update …\nUpdateClient event signals a recent update of an on-chain …\nSignals a recent upgrade of an on-chain client (IBC …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructs a new UpdateClient event.\nEncodes all the different client messages\nA type of message that triggers the creation of a new …\nDefines the message used to recover a frozen or expired …\nA type of message that submits client misbehaviour proof.\nRepresents the message that triggers the update of an …\nA type of message that triggers the upgrade of an on-chain …\nclient unique identifier\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nmisbehaviour, used for freezing the light client\nsigner address\nThe address of the signer who serves as the authority for …\nClient identifier of the client to be updated if the …\nClient identifier of the client that will replace the …\nClientConsensusStates defines all the stored consensus …\nClientUpdateProposal is a legacy governance proposal. If …\nConsensusStateWithHeight defines a consensus state with an …\nGenesisMetadata defines the genesis type for metadata that …\nGenesisState defines the ibc client submodule’s genesis …\nHeight is a monotonically increasing data type that can be …\nIdentifiedClientState defines a client state with an …\nIdentifiedGenesisMetadata has the client metadata with the …\nMsgCreateClient defines a message to create an IBC client\nMsgCreateClientResponse defines the Msg/CreateClient …\nMsgIBCSoftwareUpgrade defines the message used to schedule …\nMsgIBCSoftwareUpgradeResponse defines the …\nMsgRecoverClient defines the message used to recover a …\nMsgRecoverClientResponse defines the Msg/RecoverClient …\nMsgSubmitMisbehaviour defines an sdk.Msg type that submits …\nMsgSubmitMisbehaviourResponse defines the …\nMsgUpdateClient defines an sdk.Msg to update a IBC client …\nMsgUpdateClientResponse defines the Msg/UpdateClient …\nMsgUpdateParams defines the sdk.Msg type to update the …\nMsgUpdateParamsResponse defines the MsgUpdateParams …\nMsgUpgradeClient defines an sdk.Msg to upgrade an IBC …\nMsgUpgradeClientResponse defines the Msg/UpgradeClient …\nParams defines the set of IBC light client parameters.\nQueryClientParamsRequest is the request type for the …\nQueryClientParamsResponse is the response type for the …\nQueryClientStateRequest is the request type for the …\nQueryClientStateResponse is the response type for the …\nQueryClientStatesRequest is the request type for the …\nQueryClientStatesResponse is the response type for the …\nQueryClientStatusRequest is the request type for the …\nQueryClientStatusResponse is the response type for the …\nQueryConsensusStateHeightsRequest is the request type for …\nQueryConsensusStateHeightsResponse is the response type …\nQueryConsensusStateRequest is the request type for the …\nQueryConsensusStateResponse is the response type for the …\nQueryConsensusStatesRequest is the request type for the …\nQueryConsensusStatesResponse is the response type for the …\nQueryUpgradedClientStateRequest is the request type for the\nQueryUpgradedClientStateResponse is the response type for …\nQueryUpgradedConsensusStateRequest is the request type for …\nQueryUpgradedConsensusStateResponse is the response type …\nUpgradeProposal is a gov Content type for initiating an …\nallowed_clients defines the list of allowed client state …\nclient identifier\nclient identifier\nclient unique identifier\nclient unique identifier\nclient unique identifier\nclient state unique identifier\nclient identifier\nclient identifier\nclient identifier\nclient unique identifier\nclient message to update the light client\nclient state\nlight client state\nupgraded client state\nclient state associated with the request identifier\nlist of stored ClientStates of the chain.\nclient states with their corresponding identifiers\nconsensus states from each client\nmetadata from each client\nconsensus state\nconsensus state associated with the client that …\nupgraded consensus state, only contains enough information …\nconsensus state associated with the client identifier at …\nconsensus state heights\nconsensus states and their heights associated with the …\nconsensus states associated with the identifier\nDeprecated: create_localhost has been deprecated. The …\nthe description of the proposal\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nconsensus state height\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nstore key of metadata without clientID-prefix\nlatest_height overrrides the height field and queries the …\nmisbehaviour used for freezing the light client\nthe sequence for the next generated client identifier\npagination request\npagination response\npagination request\npagination response\npagination request\npagination response\nparams defines the client parameters to update.\nparams defines the parameters of the module.\nmerkle proof of existence\nmerkle proof of existence\nheight at which the proof was retrieved\nheight at which the proof was retrieved\nproof that old chain committed to new client\nproof that old chain committed to new consensus state\nthe height within the given revision\nconsensus state revision height\nthe revision that the client is currently on\nconsensus state revision number\nsigner address\nsigner address\nsigner address\nsigner address\nsigner address\nsigner address\nsigner address\nthe client identifier for the client to be updated if the …\nthe client identifier for the client to be updated if the …\nthe substitute client identifier for the client standing …\nthe substitute client identifier for the client which will …\nthe title of the update proposal\nAn UpgradedClientState must be provided to perform an IBC …\nAn UpgradedClientState must be provided to perform an IBC …\nclient state associated with the request identifier\nConsensus state associated with the request identifier\nmetadata value")