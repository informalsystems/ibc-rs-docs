searchState.loadedDescShard("xorf", 0, "This library implements Xor Filters and their derivatives. …\nA <code>BinaryFuse16</code> filter is an Xor-like filter with 16-bit …\nA <code>BinaryFuse32</code> filter is an Xor-like filter with 32-bit …\nA <code>BinaryFuse8</code> filter is an Xor-like filter with 8-bit …\nMethods common to xor filters.\nXor filter using 16-bit fingerprints in a fuse graph. …\nXor filter using 32-bit fingerprints in a fuse graph. …\nXor filter using 8-bit fingerprints in a fuse graph. …\nArbitrary key type proxy for xor filters.\nXor filter using 16-bit fingerprints.\nXor filter using 32-bit fingerprints.\nXor filter using 8-bit fingerprints.\nThe number of blocks in the filter\nThe number of blocks in the filter\nThe number of blocks in the filter\nReturns <code>true</code> if the filter probably contains the specified …\nReturns <code>true</code> if the filter contains the specified key. Has …\nReturns <code>true</code> if the filter contains the specified key. Has …\nReturns <code>true</code> if the filter contains the specified key. Has …\nReturns <code>true</code> if the filter contains the specified key. Has …\nReturns <code>true</code> if the filter contains the specified key.\nReturns <code>true</code> if the filter contains the specified key. Has …\nReturns <code>true</code> if the underlying filter contains the …\nReturns <code>true</code> if the filter contains the specified key. Has …\nReturns <code>true</code> if the filter contains the specified key.\nReturns <code>true</code> if the filter contains the specified key. Has …\nThe fingerprints for the filter\nThe fingerprints for the filter\nThe fingerprints for the filter\nThe fingerprints for the filter\nThe fingerprints for the filter\nThe fingerprints for the filter\nThe fingerprints for the filter\nThe fingerprints for the filter\nThe fingerprints for the filter\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct the filter from a key iterator. Can be used …\nConstruct the filter from a key iterator. Can be used …\nConstruct the filter from a key iterator. Can be used …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the number of fingerprints in the filter.\nThe seed for the filter\nThe seed for the filter\nThe seed for the filter\nThe seed for the filter\nThe seed for the filter\nThe seed for the filter\nThe number of blocks in the filter\nThe number of blocks in the filter\nThe number of blocks in the filter\nTry to construct the filter from a key iterator. Can be …\nTry to construct the filter from a key iterator. Can be …\nTry to construct the filter from a key iterator. Can be …\nTry to construct the filter from a key iterator. Can be …\nTry to construct the filter from a key iterator. Can be …\nTry to construct the filter from a key iterator. Can be …")