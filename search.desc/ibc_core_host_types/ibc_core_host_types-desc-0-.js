searchState.loadedDescShard("ibc_core_host_types", 0, "ICS-24: Host defines the minimal set of interfaces that a …\nFoundational error types that are applicable across …\nDefines identifier types\nDefines all store paths used by IBC\nbase64 decoding error: {0}\nErrors that occur during the process of decoding, …\nfailed to parse: <code>{description}</code>\nfailed to retrieve from store: <code>{description}</code>\nfailed to update store: <code>{description}</code>\nErrors that originate from host implementations.\nidentifier error: {0}\nErrors that arise when parsing identifiers.\nid <code>{0}</code> can only contain alphanumeric characters or <code>.</code>, <code>_</code>, <code>+</code>…\ninvalid JSON data: <code>{description}</code>\nid <code>{actual}</code> has invalid length; must be between [<code>{min}</code>,…\ninvalid prefix <code>{0}</code>\ninvalid raw data: <code>{description}</code>\ninvalid state: <code>{description}</code>\nmismatched resource name: expected <code>{expected}</code>, actual …\nmissing raw data: <code>{description}</code>\nmissing state: <code>{description}</code>\nother error: <code>{description}</code>\noverflowed revision number\ninteger parsing error: {0}\nprost decoding error: {0}\nprotobuf decoding error: {0}\nutf-8 str decoding error: {0}\nutf-8 String decoding error: {0}\ninteger TryFrom error: {0}\nunknown type URL <code>{0}</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDefines the domain type for chain identifiers.\nType of the client, depending on the specific consensus …\nThe sequence number of a packet enforces ordering among …\nGet this identifier as a borrowed byte slice\nGet this identifier as a borrowed byte slice\nGet this identifier as a borrowed byte slice\nGet this identifier as a borrowed byte slice\nGet a reference to the underlying string.\nGet this identifier as a borrowed <code>&amp;str</code>\nGet this identifier as a borrowed <code>&amp;str</code>\nYields this identifier as a borrowed <code>&amp;str</code>\nGet this identifier as a borrowed <code>&amp;str</code>\nGet this identifier as a borrowed <code>&amp;str</code>\nConstructs a new <code>ClientId</code> with this type of client type …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIncrements the sequence number by one.\nIncreases <code>ChainId</code>s revision number by one. Fails if the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if the client identifier is for 08-wasm light client.\nReturns <code>true</code> if the sequence number is zero.\nCreates a new <code>ChainId</code> with the given chain identifier.\nBuilds a new channel identifier. Like client and …\nBuilds a new client identifier.\nConstructs a new <code>ClientType</code> from the given <code>String</code> if it …\nBuilds a new connection identifier. Connection identifiers …\nReturns the static prefix to be used across all channel …\nReturns the static prefix to be used across all connection …\nExtract the revision number from the chain identifier\nEncodes the sequence number into a byte array in big …\nInfallible creation of the well-known transfer port\nA convenient method to check if the <code>ChainId</code> forms a valid …\nGives the sequence number.\nReturn ConnectionId with identifier 0\n<code>{path}</code> could not be parsed into a Path\nThe Path enum abstracts out the different sub-paths.\nRepresents a general-purpose path structure using the byte …\nThe key identifying the upgraded consensus state\nThe key identifying the upgraded client state\nABCI client upgrade keys\nReturns the parent group path under which all the ack …\nReturns the parent group path under which all the …\nFlattens a list of path bytes into a single path.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ninto_bytes implementation\nIndication if the path is provable.\nThis iteration key is namely used by the <code>ibc-go</code> …\nReturns the final part (leaf) of the path under which an …\nReturns the final part (leaf) of the path under which an …\nReturns the final part (leaf) of the path under which an …\nReturns the final part (leaf) of the path under which an …\nConstructs a new <code>ClientConsensusStatePath</code>.\nConstructs a new <code>ClientUpdateTimePath</code>.\nCreate with the default upgrade path\nCreate with the default upgrade path\nReturns the path representing the parent group under which …\nReturns the path representing the parent group under which …\nReturns the path representing the parent group under which …\nReturns the client store prefix under which all the client …\nReturns the connection store prefix under which all the …\nReturns the channel end store prefix under which all the …\nReturns the commitment store prefix under which all the …\nReturns the ack store prefix under which all the packet …\nReturns the receipt store prefix under which all the …\nReturns the parent group path under which all the receipt …")