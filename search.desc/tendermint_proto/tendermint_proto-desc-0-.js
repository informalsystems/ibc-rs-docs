searchState.loadedDescShard("tendermint_proto", 0, "tendermint-proto library gives the developer access to the …\nAllows for easy Google Protocol Buffers encoding and …\nConstructor that attempts to decode an instance from a …\nConstructor that attempts to decode a length-delimited …\nConstructor that attempts to decode a Protobuf-encoded …\nConstructor that attempts to decode a Protobuf-encoded …\nEncode into a buffer in Protobuf format.\nEncode with a length-delimiter to a buffer in Protobuf …\nEncode with a length-delimiter to a <code>Vec&lt;u8&gt;</code> …\nEncodes into a Protobuf-encoded <code>Vec&lt;u8&gt;</code>.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nBuilt-in <code>prost_types</code> with slight customization to enable …\nCalls <code>U::from(self)</code>.\nSerde JSON serializers\nTendermint-proto auto-generated sub-modules for Tendermint\nTendermint-proto auto-generated sub-modules for Tendermint\nTendermint-proto auto-generated sub-modules for Tendermint\nEvent allows application developers to attach additional …\nEventAttribute is a single key-value pair, associated with …\nExecTxResult contains results of executing one individual …\nExtendedCommitInfo is similar to CommitInfo except that it …\nApplies a snapshot chunk\nExtends a vote with application-injected data\nlists available snapshots\nloads a snapshot chunk\noffers a snapshot to the application\nVerify the vote extension\nnondeterministic\nTxResult contains results of executing the transaction.\nThe first 20 bytes of SHA256(public key)\nlight client-verified app hash for snapshot height\napp_hash is the hash of the applications’ state which is …\nblock_id_flag indicates whether the validator voted for a …\nNumber of chunks in the snapshot\nupdates to the consensus params, if any.\nset of block events emmitted as part of executing the block\nnondeterministic\nVote extension signature created by CometBFT\nThe application-specific snapshot format\nhash is the merkle root hash of the fields of the proposed …\nthe hash of the block that this vote may be referring to\nthe hash of the block that this received vote corresponds …\nhash is the merkle root hash of the fields of the decided …\nArbitrary snapshot hash, equal only if identical\nthe height of the extended vote\nThe height when the offense occurred\nThe height at which the snapshot was taken\nnondeterministic\nnondeterministic\nnondeterministic\nnondeterministic\nbytes data = 2; // use “value” instead.\nnondeterministic\nnondeterministic\nthe modified transactions cannot exceed this size.\nArbitrary application metadata\nPubKey pub_key = 2 [(gogoproto.nullable)=false];\naddress of the public key of the validator proposing the …\naddress of the public key of the original proposer of the …\naddress of the public key of the original proposer of the …\nproposer_address is the address of the public key of the …\nChunks to refetch and reapply\nChunk senders to reject and ban\nNested message and enum types in <code>Request</code>.\nNested message and enum types in <code>Response</code>.\nNested message and enum types in <code>ResponseApplySnapshotChunk</code>…\nNested message and enum types in <code>ResponseOfferSnapshot</code>.\nNested message and enum types in <code>ResponseProcessProposal</code>.\nNested message and enum types in …\nThe round at which the block proposer decided in the …\nsnapshot offered by peers\ninfo of the block that this vote may be referring to\nThe corresponding time where the offense occurred\nTotal voting power of the validator set in case the ABCI …\nthe result of executing each transaction including the …\ntxs is an array of transactions that will be included in a …\nThe validator that sent the vote.\nThe offending validator\nthe validator that signed the vote extension\na list of updates to the validator set. These will reflect …\nNon-deterministic extension provided by the sending …\nList of validators’ addresses in the last validator set …\nAbort all snapshot restoration\nChunk successfully accepted\nReject this snapshot, try others\nRetry chunk (combine with refetch and reject)\nRetry snapshot (combine with refetch and reject)\nUnknown result, abort all snapshot restoration\nAbort all snapshot restoration\nSnapshot accepted, apply chunks\nReject this specific snapshot, try others\nReject all snapshots of this format, try others\nReject all snapshots from the sender(s), try others\nUnknown result, abort all snapshot restoration\nRejecting the vote extension will reject the entire …\nBlockRequest requests a block for a specific height\nBlockResponse returns block to the requested\nNoBlockResponse informs the node that the peer does not …\nStatusRequest requests the status of a peer.\nStatusResponse is a peer response to inform their status.\nNested message and enum types in <code>Message</code>.\nBlockPart is sent when gossipping a piece of the proposed …\nEndHeight marks the end of the given height inside WAL. …\nHasVote is sent to indicate that a particular vote has …\nMsgInfo are msgs from the reactor which may update the …\nNewRoundStep is sent for every step taken in the …\nNewValidBlock is sent when a validator observes a valid …\nProposal is sent when a new block is proposed.\nProposalPOL is sent when a previous proposal is …\nTimedWALMessage wraps WALMessage and adds Time for …\nTimeoutInfo internally generated messages which may update …\nVote is sent when voting for a proposal (or lack thereof).\nVoteSetBits is sent to communicate the bit-array of votes …\nVoteSetMaj23 is sent to indicate that a given BlockID has …\nNested message and enum types in <code>Message</code>.\nNested message and enum types in <code>WALMessage</code>.\nProofOp defines an operation used for calculating Merkle …\nProofOps is Merkle proof defined by the list of ProofOps\nPublicKey defines the keys available for use with …\nEncoded in ProofOp.Key.\nTo encode in ProofOp.Data\nNested message and enum types in <code>PublicKey</code>.\n<code>Any</code> contains an arbitrary serialized protocol buffer …\nA Duration represents a signed, fixed-length span of time …\nA Timestamp represents a point in time independent of any …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSerialize the given message type <code>M</code> as <code>Any</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSigned fractions of a second at nanosecond resolution of …\nNon-negative fractions of a second at nanosecond …\nNormalizes the duration to a canonical format.\nNormalizes the timestamp to a canonical format.\nSigned seconds of the span of time. Must be from …\nRepresents seconds of UTC time since Unix epoch …\nDecode the given message type <code>M</code> from <code>Any</code>, validating that …\nConverts a <code>core::time::Duration</code> to a <code>Duration</code>, failing if …\nA URL/resource name that uniquely identifies the type of …\nMust be a valid serialized protocol buffer of the above …\nNested message and enum types in <code>Message</code>.\nNested message and enum types in <code>Message</code>.\nNested message and enum types in <code>Packet</code>.\nPingRequest is a request to confirm that the connection is …\nPingResponse is a response to confirm that the connection …\nPubKeyRequest requests the consensus public key from the …\nPubKeyResponse is a response message containing the public …\nSignProposalRequest is a request to sign a proposal\nSignVoteRequest is a request to sign a vote\nSignedProposalResponse is response containing a signed …\nSignedVoteResponse is a response containing a signed vote …\nNested message and enum types in <code>Message</code>.\nSerialize/deserialize <code>nil</code>able value into <code>T</code>, where <code>nil</code> …\nSerialize/deserialize bytes (<code>Vec&lt;u8&gt;</code>) type\nSerialize and deserialize any <code>T</code> that implements <code>FromStr</code> …\nCombines <code>from_str</code> and <code>allow_null</code>.\nSerialize/deserialize <code>nil</code>able type into <code>T</code>, where <code>nil</code> turns …\nSerialize/deserialize <code>Option&lt;T&gt;</code> type where <code>T</code> has a …\nDe/serialize an optional type that must be converted …\nSerialize and deserialize part_set_header.total (from …\nSerialize/deserialize core::time::Duration type from and …\nSerialize/deserialize Timestamp type from and into string:\nSerialize/deserialize <code>Vec&lt;Vec&lt;u8&gt;&gt;</code> type from and into …\nDeserialize <code>T</code> from a <code>nil</code>-able representation, accepting …\nSerialize <code>T</code> as <code>Some</code> value of <code>Option&lt;T&gt;</code>.\nSerialize into base64string, deserialize from base64string\nSerialize into hexstring, deserialize from hexstring\nSerialize into and deserialize from an optional …\nSerialize into string, deserialize from string\nSerialize into and deserialize from a sequence of …\nDeserialize base64string into <code>Vec&lt;u8&gt;</code>\nDeserialize base64string into String\nSerialize from T into base64string\nDeserialize a hex-encoded string into <code>Vec&lt;u8&gt;</code>\nSerialize from a byte slice into a hex-encoded string.\nDeserialize <code>Option&lt;base64string&gt;</code> into <code>Vec&lt;u8&gt;</code> or null\nSerialize from <code>T</code> into <code>Option&lt;base64string&gt;</code>\nDeserialize string into <code>Vec&lt;u8&gt;</code>\nSerialize from <code>T</code> into string\nDeserialize array into <code>Vec&lt;Vec&lt;u8&gt;&gt;</code>\nSerialize from <code>Vec&lt;T&gt;</code> into <code>Vec&lt;base64string&gt;</code>\nDeserialize string into T\nSerialize from T into string\nDeserialize a nullable string into T\nSerialize from T into string\nDeserialize <code>Option&lt;T&gt;</code>\nSerialize <code>Option&lt;T&gt;</code>\nDeserialize <code>Option&lt;T&gt;</code>\nSerialize <code>Option&lt;T&gt;</code>\nDeserialize (string or u32) into u32(part_set_header.total)\nSerialize from u32(part_set_header.total) into u32\nDeserialize string into Duration\nSerialize from Duration into string\nHelper struct to serialize and deserialize Timestamp into …\nDeserialize string into Timestamp\nHelper for formatting an <code>OffsetDateTime</code> value.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSerialize from Timestamp into string\nSerialization helper for converting an <code>OffsetDateTime</code> …\nDeserialize transactions into <code>Vec&lt;Vec&lt;u8&gt;&gt;</code>\nSerialize from <code>Vec&lt;Vec&lt;u8&gt;&gt;</code> into transactions\nConsensusParamsInfo represents the latest consensus …\nLegacyABCIResponses retains the responses of the legacy …\nResponseBeginBlock is kept for backwards compatibility for …\nResponseEndBlock is kept for backwards compatibility for …\nValidatorsInfo represents the latest validator set, or the …\nthe latest AppHash we’ve received from calling …\nimmutable\nConsensus parameters used for validating blocks. Changes …\nLastBlockHeight=0 at genesis (ie. block(H=0) does not …\nMerkle root of the results from executing prev block\nLastValidators is used to validate block.LastCommit. …\nNested message and enum types in <code>Message</code>.\nABCIParams configure functionality specific to the …\nthe vote was not received\nBlockID\nBlockIdFlag indicates which BlockID the signature is for\nBlockParams contains limits on the block size.\nCanonicalVoteExtension provides us a way to serialize a …\nCommit contains the evidence that a block was committed by …\nvoted for the block that received the majority\nCommitSig is a part of the Vote included in a Commit.\nConsensusParams contains consensus critical parameters …\nData contains the set of transactions included in the block\nDuplicateVoteEvidence contains evidence of a validator …\nEvidenceParams determine how we handle evidence of …\nExtendedCommitSig retains all the same fields as CommitSig …\nHashedParams is a subset of ConsensusParams.\nHeader defines the structure of a block header.\nLightClientAttackEvidence contains evidence of a set of …\nvoted for nil\nPartsetHeader\nVotes\nProposals\nSignedMsgType is a type of signed message in the consensus.\nTxProof represents a Merkle proof of the presence of a …\nindicates an error condition\nValidatorParams restrict the public key types validators …\nVersionParams contains the ABCI application version.\nVote represents a prevote or precommit vote from …\nstate after txs from the previous block\nzero if vote is nil.\nconsensus params for current block\ntransactions\nNested message and enum types in <code>Evidence</code>.\nconsensus info\nVote extension provided by the application. Only valid for …\nVote extension data\nVote extension signature by the validator if they …\nVote extension signature\ncanonicalization requires fixed size encoding here\ncanonicalization requires fixed size encoding here\nprev block info\nhashes of block data\nroot hash of all results from the txs from the previous …\nMax age of evidence, in time.\nMax age of evidence, in blocks.\nMax block size, in bytes. Note: must be greater than 0\nThis sets the maximum size of total evidence in bytes that …\nMax gas per block. Note: must be greater or equal to -1\nvalidators for the next block\noriginal proposer of the block\ncanonicalization requires fixed size encoding here\ncanonicalization requires fixed size encoding here\nVote signature by the validator if they participated in …\nTxs that will be applied by state @ block.Height+1. NOTE: …\ntype alias for byte\ntype alias for byte\nhashes from the app output from the prev block\nbasic block info\nvote_extensions_enable_height configures the first height …\nBlockParams contains limits on the block size.\nConsensusParams contains all consensus-relevant parameters …\nEvent allows application developers to attach additional …\nEventAttribute is a single key-value pair, associated with …\nApplies a snapshot chunk\nlists available snapshots\nloads a snapshot chunk\noffers a snapshot to the application\nnondeterministic\nnondeterministic\nnondeterministic\nTxResult contains results of executing the transaction.\nValidator\nValidatorUpdate\nVoteInfo\nThe first 20 bytes of SHA256(public key)\nlight client-verified app hash for snapshot height\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nNumber of chunks in the snapshot\nreserve 1\nnondeterministic\nThe application-specific snapshot format\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>CheckTxType</code>, or <code>None</code> if <code>value</code> is not …\nConverts an <code>i32</code> to a <code>EvidenceType</code>, or <code>None</code> if <code>value</code> is not …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nArbitrary snapshot hash, equal only if identical\nThe height when the offense occurred\nThe height at which the snapshot was taken\nnondeterministic\nnondeterministic\nnondeterministic\nnondeterministic\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>CheckTxType</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>EvidenceType</code>.\nbytes data = 2;\nbytes data = 2; // use “value” instead.\nnondeterministic\nnondeterministic\nNote: must be greater than 0\nNote: must be greater or equal to -1\nmempool_error is set by CometBFT. ABCI applictions …\nArbitrary application metadata\nPubKey pub_key = 2 [(gogoproto.nullable)=false];\nChunks to refetch and reapply\nChunk senders to reject and ban\nNested message and enum types in <code>Request</code>.\nNested message and enum types in <code>Response</code>.\nNested message and enum types in <code>ResponseApplySnapshotChunk</code>…\nNested message and enum types in <code>ResponseOfferSnapshot</code>.\nReturns the enum value of <code>result</code>, or the default if the …\nReturns the enum value of <code>result</code>, or the default if the …\nSets <code>result</code> to the provided enum value.\nSets <code>result</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nsnapshot offered by peers\nThe corresponding time where the offense occurred\nTotal voting power of the validator set in case the ABCI …\nReturns the enum value of <code>type</code>, or the default if the …\nReturns the enum value of <code>type</code>, or the default if the …\nThe offending validator\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nAbort all snapshot restoration\nChunk successfully accepted\nReject this snapshot, try others\nRetry chunk (combine with refetch and reject)\nRetry snapshot (combine with refetch and reject)\nUnknown result, abort all snapshot restoration\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Result</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Result</code>.\nAbort all snapshot restoration\nSnapshot accepted, apply chunks\nReject this specific snapshot, try others\nReject all snapshots of this format, try others\nReject all snapshots from the sender(s), try others\nUnknown result, abort all snapshot restoration\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Result</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Result</code>.\nBlockRequest requests a block for a specific height\nBlockResponse returns block to the requested\nNoBlockResponse informs the node that the peer does not …\nStatusRequest requests the status of a peer.\nStatusResponse is a peer response to inform their status.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNested message and enum types in <code>Message</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nBlockPart is sent when gossipping a piece of the proposed …\nEndHeight marks the end of the given height inside WAL. …\nHasVote is sent to indicate that a particular vote has …\nMsgInfo are msgs from the reactor which may update the …\nNewRoundStep is sent for every step taken in the …\nNewValidBlock is sent when a validator observes a valid …\nProposal is sent when a new block is proposed.\nProposalPOL is sent when a previous proposal is …\nTimedWALMessage wraps WALMessage and adds Time for …\nTimeoutInfo internally generated messages which may update …\nVote is sent when voting for a proposal (or lack thereof).\nVoteSetBits is sent to communicate the bit-array of votes …\nVoteSetMaj23 is sent to indicate that a given BlockID has …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNested message and enum types in <code>Message</code>.\nSets <code>type</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nReturns the enum value of <code>type</code>, or the default if the …\nReturns the enum value of <code>type</code>, or the default if the …\nReturns the enum value of <code>type</code>, or the default if the …\nNested message and enum types in <code>WALMessage</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nProofOp defines an operation used for calculating Merkle …\nProofOps is Merkle proof defined by the list of ProofOps\nPublicKey defines the keys available for use with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEncoded in ProofOp.Key.\nTo encode in ProofOp.Data\nNested message and enum types in <code>PublicKey</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNested message and enum types in <code>Message</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNested message and enum types in <code>Message</code>.\nNested message and enum types in <code>Packet</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nPingRequest is a request to confirm that the connection is …\nPingResponse is a response to confirm that the connection …\nPubKeyRequest requests the consensus public key from the …\nPubKeyResponse is a response message containing the public …\nSignProposalRequest is a request to sign a proposal\nSignVoteRequest is a request to sign a vote\nSignedProposalResponse is response containing a signed …\nSignedVoteResponse is a response containing a signed vote …\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Errors</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Errors</code>.\nNested message and enum types in <code>Message</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nABCIResponses retains the responses of the various ABCI …\nConsensusParamsInfo represents the latest consensus …\nValidatorsInfo represents the latest validator set, or the …\nthe latest AppHash we’ve received from calling …\nimmutable\nConsensus parameters used for validating blocks. Changes …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLastBlockHeight=0 at genesis (ie. block(H=0) does not …\nMerkle root of the results from executing prev block\nLastValidators is used to validate block.LastCommit. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNested message and enum types in <code>Message</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBlockID\nBlockIdFlag indicates which BlcokID the signature is for\nBlockParams contains limits on the block size.\nCommit contains the evidence that a block was committed by …\nCommitSig is a part of the Vote included in a Commit.\nConsensusParams contains consensus critical parameters …\nData contains the set of transactions included in the block\nDuplicateVoteEvidence contains evidence of a validator …\nEvidenceParams determine how we handle evidence of …\nHashedParams is a subset of ConsensusParams.\nHeader defines the structure of a block header.\nLightClientAttackEvidence contains evidence of a set of …\nPartsetHeader\nVotes\nProposals\nSignedMsgType is a type of signed message in the consensus.\nTxProof represents a Merkle proof of the presence of a …\nValidatorParams restrict the public key types validators …\nVersionParams contains the ABCI application version.\nVote represents a prevote, precommit, or commit vote from …\nstate after txs from the previous block\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nzero if vote is nil.\nReturns the enum value of <code>block_id_flag</code>, or the default if …\nconsensus params for current block\ntransactions\nNested message and enum types in <code>Evidence</code>.\nconsensus info\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>BlockIdFlag</code>, or <code>None</code> if <code>value</code> is not …\nConverts an <code>i32</code> to a <code>SignedMsgType</code>, or <code>None</code> if <code>value</code> is …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\ncanonicalization requires fixed size encoding here\ncanonicalization requires fixed size encoding here\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>BlockIdFlag</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>SignedMsgType</code>.\nprev block info\nhashes of block data\nroot hash of all results from the txs from the previous …\nMax age of evidence, in time.\nMax age of evidence, in blocks.\nMax block size, in bytes. Note: must be greater than 0\nThis sets the maximum size of total evidence in bytes that …\nMax gas per block. Note: must be greater or equal to -1\nvalidators for the next block\noriginal proposer of the block\ncanonicalization requires fixed size encoding here\ncanonicalization requires fixed size encoding here\nSets <code>block_id_flag</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nMinimum time increment between consecutive blocks (in …\nTxs that will be applied by state @ block.Height+1. NOTE: …\nReturns the enum value of <code>type</code>, or the default if the …\nReturns the enum value of <code>type</code>, or the default if the …\nReturns the enum value of <code>type</code>, or the default if the …\nReturns the enum value of <code>type</code>, or the default if the …\ntype alias for byte\ntype alias for byte\nhashes from the app output from the prev block\nbasic block info\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nApp includes the protocol and software version for the …\nConsensus captures the consensus rules for processing a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEvent allows application developers to attach additional …\nEventAttribute is a single key-value pair, associated with …\nApplies a snapshot chunk\nlists available snapshots\nloads a snapshot chunk\noffers a snapshot to the application\nnondeterministic\nTxResult contains results of executing the transaction.\nValidator\nValidatorUpdate\nVoteInfo\nThe first 20 bytes of SHA256(public key)\nlight client-verified app hash for snapshot height\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nNumber of chunks in the snapshot\nreserve 1\nnondeterministic\nThe application-specific snapshot format\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>CheckTxType</code>, or <code>None</code> if <code>value</code> is not …\nConverts an <code>i32</code> to a <code>MisbehaviorType</code>, or <code>None</code> if <code>value</code> is …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nhash is the merkle root hash of the fields of the proposed …\nArbitrary snapshot hash, equal only if identical\nThe height when the offense occurred\nThe height at which the snapshot was taken\nnondeterministic\nnondeterministic\nnondeterministic\nnondeterministic\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>CheckTxType</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>MisbehaviorType</code>.\nbytes data = 2; // use “value” instead.\nnondeterministic\nnondeterministic\nthe modified transactions cannot exceed this size.\nmempool_error is set by CometBFT. ABCI applictions …\nArbitrary application metadata\nPubKey pub_key = 2 [(gogoproto.nullable)=false];\naddress of the public key of the validator proposing the …\naddress of the public key of the original proposer of the …\nChunks to refetch and reapply\nChunk senders to reject and ban\nNested message and enum types in <code>Request</code>.\nNested message and enum types in <code>Response</code>.\nNested message and enum types in <code>ResponseApplySnapshotChunk</code>…\nNested message and enum types in <code>ResponseOfferSnapshot</code>.\nNested message and enum types in <code>ResponseProcessProposal</code>.\nReturns the enum value of <code>result</code>, or the default if the …\nReturns the enum value of <code>result</code>, or the default if the …\nThe round at which the block proposer decided in the …\nSets <code>result</code> to the provided enum value.\nSets <code>result</code> to the provided enum value.\nSets <code>status</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nsnapshot offered by peers\nReturns the enum value of <code>status</code>, or the default if the …\nThe corresponding time where the offense occurred\nTotal voting power of the validator set in case the ABCI …\ntxs is an array of transactions that will be included in a …\nReturns the enum value of <code>type</code>, or the default if the …\nReturns the enum value of <code>type</code>, or the default if the …\nThe offending validator\nReserved for future use\nList of validators’ addresses in the last validator set …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nAbort all snapshot restoration\nChunk successfully accepted\nReject this snapshot, try others\nRetry chunk (combine with refetch and reject)\nRetry snapshot (combine with refetch and reject)\nUnknown result, abort all snapshot restoration\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Result</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Result</code>.\nAbort all snapshot restoration\nSnapshot accepted, apply chunks\nReject this specific snapshot, try others\nReject all snapshots of this format, try others\nReject all snapshots from the sender(s), try others\nUnknown result, abort all snapshot restoration\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Result</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Result</code>.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>ProposalStatus</code>, or <code>None</code> if <code>value</code> is …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>ProposalStatus</code>.\nBlockRequest requests a block for a specific height\nBlockResponse returns block to the requested\nNoBlockResponse informs the node that the peer does not …\nStatusRequest requests the status of a peer.\nStatusResponse is a peer response to inform their status.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNested message and enum types in <code>Message</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nBlockPart is sent when gossipping a piece of the proposed …\nEndHeight marks the end of the given height inside WAL. …\nHasVote is sent to indicate that a particular vote has …\nMsgInfo are msgs from the reactor which may update the …\nNewRoundStep is sent for every step taken in the …\nNewValidBlock is sent when a validator observes a valid …\nProposal is sent when a new block is proposed.\nProposalPOL is sent when a previous proposal is …\nTimedWALMessage wraps WALMessage and adds Time for …\nTimeoutInfo internally generated messages which may update …\nVote is sent when voting for a proposal (or lack thereof).\nVoteSetBits is sent to communicate the bit-array of votes …\nVoteSetMaj23 is sent to indicate that a given BlockID has …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNested message and enum types in <code>Message</code>.\nSets <code>type</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nReturns the enum value of <code>type</code>, or the default if the …\nReturns the enum value of <code>type</code>, or the default if the …\nReturns the enum value of <code>type</code>, or the default if the …\nNested message and enum types in <code>WALMessage</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nProofOp defines an operation used for calculating Merkle …\nProofOps is Merkle proof defined by the list of ProofOps\nPublicKey defines the keys available for use with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEncoded in ProofOp.Key.\nTo encode in ProofOp.Data\nNested message and enum types in <code>PublicKey</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNested message and enum types in <code>Message</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNested message and enum types in <code>Message</code>.\nNested message and enum types in <code>Packet</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nPingRequest is a request to confirm that the connection is …\nPingResponse is a response to confirm that the connection …\nPubKeyRequest requests the consensus public key from the …\nPubKeyResponse is a response message containing the public …\nSignProposalRequest is a request to sign a proposal\nSignVoteRequest is a request to sign a vote\nSignedProposalResponse is response containing a signed …\nSignedVoteResponse is a response containing a signed vote …\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Errors</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Errors</code>.\nNested message and enum types in <code>Message</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nABCIResponses retains the responses of the various ABCI …\nConsensusParamsInfo represents the latest consensus …\nValidatorsInfo represents the latest validator set, or the …\nthe latest AppHash we’ve received from calling …\nimmutable\nConsensus parameters used for validating blocks. Changes …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLastBlockHeight=0 at genesis (ie. block(H=0) does not …\nMerkle root of the results from executing prev block\nLastValidators is used to validate block.LastCommit. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNested message and enum types in <code>Message</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBlockID\nBlockIdFlag indicates which BlcokID the signature is for\nBlockParams contains limits on the block size.\nCommit contains the evidence that a block was committed by …\nCommitSig is a part of the Vote included in a Commit.\nConsensusParams contains consensus critical parameters …\nData contains the set of transactions included in the block\nDuplicateVoteEvidence contains evidence of a validator …\nEvidenceParams determine how we handle evidence of …\nHashedParams is a subset of ConsensusParams.\nHeader defines the structure of a block header.\nLightClientAttackEvidence contains evidence of a set of …\nPartsetHeader\nVotes\nProposals\nSignedMsgType is a type of signed message in the consensus.\nTxProof represents a Merkle proof of the presence of a …\nValidatorParams restrict the public key types validators …\nVersionParams contains the ABCI application version.\nVote represents a prevote, precommit, or commit vote from …\nstate after txs from the previous block\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nzero if vote is nil.\nReturns the enum value of <code>block_id_flag</code>, or the default if …\nconsensus params for current block\ntransactions\nNested message and enum types in <code>Evidence</code>.\nconsensus info\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>BlockIdFlag</code>, or <code>None</code> if <code>value</code> is not …\nConverts an <code>i32</code> to a <code>SignedMsgType</code>, or <code>None</code> if <code>value</code> is …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\ncanonicalization requires fixed size encoding here\ncanonicalization requires fixed size encoding here\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>BlockIdFlag</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>SignedMsgType</code>.\nprev block info\nhashes of block data\nroot hash of all results from the txs from the previous …\nMax age of evidence, in time.\nMax age of evidence, in blocks.\nMax block size, in bytes. Note: must be greater than 0\nThis sets the maximum size of total evidence in bytes that …\nMax gas per block. Note: must be greater or equal to -1\nvalidators for the next block\noriginal proposer of the block\ncanonicalization requires fixed size encoding here\ncanonicalization requires fixed size encoding here\nSets <code>block_id_flag</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nTxs that will be applied by state @ block.Height+1. NOTE: …\nReturns the enum value of <code>type</code>, or the default if the …\nReturns the enum value of <code>type</code>, or the default if the …\nReturns the enum value of <code>type</code>, or the default if the …\nReturns the enum value of <code>type</code>, or the default if the …\ntype alias for byte\ntype alias for byte\nhashes from the app output from the prev block\nbasic block info\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nApp includes the protocol and software version for the …\nConsensus captures the consensus rules for processing a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEvent allows application developers to attach additional …\nEventAttribute is a single key-value pair, associated with …\nExecTxResult contains results of executing one individual …\nExtendedCommitInfo is similar to CommitInfo except that it …\nApplies a snapshot chunk\nExtends a vote with application-injected data\nlists available snapshots\nloads a snapshot chunk\noffers a snapshot to the application\nVerify the vote extension\nnondeterministic\nTxResult contains results of executing the transaction.\nThe first 20 bytes of SHA256(public key)\nlight client-verified app hash for snapshot height\napp_hash is the hash of the applications’ state which is …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nReturns the enum value of <code>block_id_flag</code>, or the default if …\nReturns the enum value of <code>block_id_flag</code>, or the default if …\nblock_id_flag indicates whether the validator voted for a …\nNumber of chunks in the snapshot\nupdates to the consensus params, if any.\nset of block events emmitted as part of executing the block\nnondeterministic\nVote extension signature created by CometBFT\nThe application-specific snapshot format\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>CheckTxType</code>, or <code>None</code> if <code>value</code> is not …\nConverts an <code>i32</code> to a <code>MisbehaviorType</code>, or <code>None</code> if <code>value</code> is …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nhash is the merkle root hash of the fields of the proposed …\nthe hash of the block that this vote may be referring to\nthe hash of the block that this received vote corresponds …\nhash is the merkle root hash of the fields of the decided …\nArbitrary snapshot hash, equal only if identical\nthe height of the extended vote\nThe height when the offense occurred\nThe height at which the snapshot was taken\nnondeterministic\nnondeterministic\nnondeterministic\nnondeterministic\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>CheckTxType</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>MisbehaviorType</code>.\nbytes data = 2; // use “value” instead.\nnondeterministic\nnondeterministic\nthe modified transactions cannot exceed this size.\nArbitrary application metadata\nPubKey pub_key = 2 [(gogoproto.nullable)=false];\naddress of the public key of the validator proposing the …\naddress of the public key of the original proposer of the …\naddress of the public key of the original proposer of the …\nproposer_address is the address of the public key of the …\nChunks to refetch and reapply\nChunk senders to reject and ban\nNested message and enum types in <code>Request</code>.\nNested message and enum types in <code>Response</code>.\nNested message and enum types in <code>ResponseApplySnapshotChunk</code>…\nNested message and enum types in <code>ResponseOfferSnapshot</code>.\nNested message and enum types in <code>ResponseProcessProposal</code>.\nNested message and enum types in …\nReturns the enum value of <code>result</code>, or the default if the …\nReturns the enum value of <code>result</code>, or the default if the …\nThe round at which the block proposer decided in the …\nSets <code>block_id_flag</code> to the provided enum value.\nSets <code>block_id_flag</code> to the provided enum value.\nSets <code>result</code> to the provided enum value.\nSets <code>result</code> to the provided enum value.\nSets <code>status</code> to the provided enum value.\nSets <code>status</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nsnapshot offered by peers\nReturns the enum value of <code>status</code>, or the default if the …\nReturns the enum value of <code>status</code>, or the default if the …\ninfo of the block that this vote may be referring to\nThe corresponding time where the offense occurred\nTotal voting power of the validator set in case the ABCI …\nthe result of executing each transaction including the …\ntxs is an array of transactions that will be included in a …\nReturns the enum value of <code>type</code>, or the default if the …\nReturns the enum value of <code>type</code>, or the default if the …\nThe validator that sent the vote.\nThe offending validator\nthe validator that signed the vote extension\na list of updates to the validator set. These will reflect …\nNon-deterministic extension provided by the sending …\nList of validators’ addresses in the last validator set …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nAbort all snapshot restoration\nChunk successfully accepted\nReject this snapshot, try others\nRetry chunk (combine with refetch and reject)\nRetry snapshot (combine with refetch and reject)\nUnknown result, abort all snapshot restoration\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Result</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Result</code>.\nAbort all snapshot restoration\nSnapshot accepted, apply chunks\nReject this specific snapshot, try others\nReject all snapshots of this format, try others\nReject all snapshots from the sender(s), try others\nUnknown result, abort all snapshot restoration\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Result</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Result</code>.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>ProposalStatus</code>, or <code>None</code> if <code>value</code> is …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>ProposalStatus</code>.\nRejecting the vote extension will reject the entire …\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>VerifyStatus</code>, or <code>None</code> if <code>value</code> is not …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>VerifyStatus</code>.\nBlockRequest requests a block for a specific height\nBlockResponse returns block to the requested\nNoBlockResponse informs the node that the peer does not …\nStatusRequest requests the status of a peer.\nStatusResponse is a peer response to inform their status.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNested message and enum types in <code>Message</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nBlockPart is sent when gossipping a piece of the proposed …\nEndHeight marks the end of the given height inside WAL. …\nHasVote is sent to indicate that a particular vote has …\nMsgInfo are msgs from the reactor which may update the …\nNewRoundStep is sent for every step taken in the …\nNewValidBlock is sent when a validator observes a valid …\nProposal is sent when a new block is proposed.\nProposalPOL is sent when a previous proposal is …\nTimedWALMessage wraps WALMessage and adds Time for …\nTimeoutInfo internally generated messages which may update …\nVote is sent when voting for a proposal (or lack thereof).\nVoteSetBits is sent to communicate the bit-array of votes …\nVoteSetMaj23 is sent to indicate that a given BlockID has …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNested message and enum types in <code>Message</code>.\nSets <code>type</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nReturns the enum value of <code>type</code>, or the default if the …\nReturns the enum value of <code>type</code>, or the default if the …\nReturns the enum value of <code>type</code>, or the default if the …\nNested message and enum types in <code>WALMessage</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nProofOp defines an operation used for calculating Merkle …\nProofOps is Merkle proof defined by the list of ProofOps\nPublicKey defines the keys available for use with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEncoded in ProofOp.Key.\nTo encode in ProofOp.Data\nNested message and enum types in <code>PublicKey</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNested message and enum types in <code>Message</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNested message and enum types in <code>Message</code>.\nNested message and enum types in <code>Packet</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nPingRequest is a request to confirm that the connection is …\nPingResponse is a response to confirm that the connection …\nPubKeyRequest requests the consensus public key from the …\nPubKeyResponse is a response message containing the public …\nSignProposalRequest is a request to sign a proposal\nSignVoteRequest is a request to sign a vote\nSignedProposalResponse is response containing a signed …\nSignedVoteResponse is a response containing a signed vote …\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Errors</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Errors</code>.\nNested message and enum types in <code>Message</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsensusParamsInfo represents the latest consensus …\nLegacyABCIResponses retains the responses of the legacy …\nResponseBeginBlock is kept for backwards compatibility for …\nResponseEndBlock is kept for backwards compatibility for …\nValidatorsInfo represents the latest validator set, or the …\nthe latest AppHash we’ve received from calling …\nimmutable\nConsensus parameters used for validating blocks. Changes …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLastBlockHeight=0 at genesis (ie. block(H=0) does not …\nMerkle root of the results from executing prev block\nLastValidators is used to validate block.LastCommit. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNested message and enum types in <code>Message</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nABCIParams configure functionality specific to the …\nthe vote was not received\nBlockID\nBlockIdFlag indicates which BlockID the signature is for\nBlockParams contains limits on the block size.\nCanonicalVoteExtension provides us a way to serialize a …\nCommit contains the evidence that a block was committed by …\nvoted for the block that received the majority\nCommitSig is a part of the Vote included in a Commit.\nConsensusParams contains consensus critical parameters …\nData contains the set of transactions included in the block\nDuplicateVoteEvidence contains evidence of a validator …\nEvidenceParams determine how we handle evidence of …\nExtendedCommitSig retains all the same fields as CommitSig …\nHashedParams is a subset of ConsensusParams.\nHeader defines the structure of a block header.\nLightClientAttackEvidence contains evidence of a set of …\nvoted for nil\nPartsetHeader\nVotes\nProposals\nSignedMsgType is a type of signed message in the consensus.\nTxProof represents a Merkle proof of the presence of a …\nindicates an error condition\nValidatorParams restrict the public key types validators …\nVersionParams contains the ABCI application version.\nVote represents a prevote or precommit vote from …\nstate after txs from the previous block\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nzero if vote is nil.\nReturns the enum value of <code>block_id_flag</code>, or the default if …\nReturns the enum value of <code>block_id_flag</code>, or the default if …\nconsensus params for current block\ntransactions\nNested message and enum types in <code>Evidence</code>.\nconsensus info\nVote extension provided by the application. Only valid for …\nVote extension data\nVote extension signature by the validator if they …\nVote extension signature\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>BlockIdFlag</code>, or <code>None</code> if <code>value</code> is not …\nConverts an <code>i32</code> to a <code>SignedMsgType</code>, or <code>None</code> if <code>value</code> is …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\ncanonicalization requires fixed size encoding here\ncanonicalization requires fixed size encoding here\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>BlockIdFlag</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>SignedMsgType</code>.\nprev block info\nhashes of block data\nroot hash of all results from the txs from the previous …\nMax age of evidence, in time.\nMax age of evidence, in blocks.\nMax block size, in bytes. Note: must be greater than 0\nThis sets the maximum size of total evidence in bytes that …\nMax gas per block. Note: must be greater or equal to -1\nvalidators for the next block\noriginal proposer of the block\ncanonicalization requires fixed size encoding here\ncanonicalization requires fixed size encoding here\nSets <code>block_id_flag</code> to the provided enum value.\nSets <code>block_id_flag</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nVote signature by the validator if they participated in …\nTxs that will be applied by state @ block.Height+1. NOTE: …\nReturns the enum value of <code>type</code>, or the default if the …\nReturns the enum value of <code>type</code>, or the default if the …\nReturns the enum value of <code>type</code>, or the default if the …\nReturns the enum value of <code>type</code>, or the default if the …\ntype alias for byte\ntype alias for byte\nhashes from the app output from the prev block\nbasic block info\nvote_extensions_enable_height configures the first height …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nApp includes the protocol and software version for the …\nConsensus captures the consensus rules for processing a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nApp includes the protocol and software version for the …\nConsensus captures the consensus rules for processing a …")