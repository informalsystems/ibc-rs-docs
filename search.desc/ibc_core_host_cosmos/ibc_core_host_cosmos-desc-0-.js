searchState.loadedDescShard("ibc_core_host_cosmos", 0, "Provides convenience traits and implementations for …\nABCI store/query path for the IBC sub-store\nABCI store/query path for the upgrade sub-store\nProvides a default implementation intended for …\nReturns the chain id of the host\nReturns the host current height\nReturns the proof specs of the host\nRe-exports necessary proto types for implementing the …\nReturns the unbonding period of the host\nReturns the host upgrade path. May be empty.\nProvides utilities related to chain upgrades.\nCancelSoftwareUpgradeProposal is a gov Content type for …\nModuleVersion specifies a module and its consensus version.\nMsgCancelUpgrade is the Msg/CancelUpgrade request type.\nMsgCancelUpgradeResponse is the Msg/CancelUpgrade response …\nMsgSoftwareUpgrade is the Msg/SoftwareUpgrade request type.\nMsgSoftwareUpgradeResponse is the Msg/SoftwareUpgrade …\nPlan specifies information about a planned upgrade and …\nQueryCurrentPlanRequest is the request type for the …\nQueryAppliedPlanResponse is the response type for the …\nQueryAuthorityRequest is the request type for …\nQueryAuthorityResponse is the response type for …\nQueryCurrentPlanRequest is the request type for the …\nQueryCurrentPlanResponse is the response type for the …\nQueryModuleVersionsRequest is the request type for the …\nQueryModuleVersionsResponse is the response type for the …\nQueryUpgradedConsensusStateRequest is the request type for …\nQueryUpgradedConsensusStateResponse is the response type …\nSoftwareUpgradeProposal is a gov Content type for …\nauthority is the address that controls the module …\nauthority is the address that controls the module …\ndescription of the proposal\ndescription of the proposal\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe height at which the upgrade must be performed.\nheight is the block height at which the plan was applied.\nAny application specific upgrade info to be included …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nlast height of the current chain must be sent in request …\nmodule_name is a field to query a specific module …\nmodule_versions is a list of module names with their …\nGenerated client implementations.\nGenerated server implementations.\nSets the name for the upgrade. This name will be used by …\nname of the app module\nname is the name of the applied plan to query for.\nplan of the proposal\nplan is the current upgrade plan.\nplan is the upgrade plan.\nGenerated client implementations.\nGenerated server implementations.\nDeprecated: Time based upgrades have been deprecated. Time …\ntitle of the proposal\ntitle of the proposal\nDeprecated: UpgradedClientState field has been deprecated. …\nSince: cosmos-sdk 0.43\nconsensus version of the app module\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nGenerated trait containing gRPC methods that should be …\nEnable decompressing requests with the given encoding.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress responses with the given encoding, if the client …\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nGenerated trait containing gRPC methods that should be …\nEnable decompressing requests with the given encoding.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress responses with the given encoding, if the client …\nSpecifies information about a planned upgrade and at which …\nEvent type emitted by the host chain when an upgrade plan …\nEvent type emitted by the host chain when an upgrade plan …\nHelper context to execute client upgrades, providing …\nDefines a governance proposal of type <code>Content</code> that enables …\nHelper context to validate client upgrades, providing …\nClears the upgrade plan at the specified height.\nExecutes an upgrade client proposal.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSchedules an upgrade based on the specified plan. If there …\nStores the upgraded client state at the specified upgrade …\nStores the upgraded consensus state at the specified …\nReturns the upgrade plan that is scheduled and has not …\nReturns the upgraded client state at the specified upgrade …\nReturns the upgraded consensus state at the specified …\nHelper function to generate an escrow address for a given …")