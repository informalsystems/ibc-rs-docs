searchState.loadedDescShard("tendermint_rpc", 0, "Tendermint RPC definitions and types.\nGet ABCI info\nGet ABCI query\nTry to automatically fetch all pages’ data.\nAscending order\nGet block info\nGet block info by hash\nGet ABCI results for a particular block\nSearch for blocks by their BeginBlock and EndBlock events\nGet blockchain info\nBroadcast evidence\nBroadcast transaction asynchronously\nBroadcast transaction commit\nBroadcast transaction synchronously\nGet commit info for a block\nGet consensus parameters\nGet consensus state\nNo explicit options set - use whatever the endpoint’s …\nDescending order\nGet genesis file\nGet genesis file in multiple chunks\nGet block header\nGet block header by hash\nGet health info\nJSON-RPC ID: request-specific identifier\nJSON-RPC request methods.\nGet network info\nnull JSON ID\nNumerical JSON ID\nOrdering of paginated RPC responses.\nA page number in paginated RPC responses.\nPagination control for those RPC client methods supporting …\nThe number of items to return per page, for paginated RPC …\nThe various schemes supported by Tendermint RPC clients.\nFetch a specific page’s data.\nGet node status\nString JSON ID\nSubscribe to events\nFind transaction by hash\nSearch for transactions with their results\nUnsubscribe from events\nA uniform resource locator (URL), with support for only …\nGet validator info for a block\nJSON-RPC version\nLow-level WebSocket configuration The configuration for …\nWhen set to <code>true</code>, the server will accept and handle …\nGet a static string which represents this method name\nGet the authority associated with this URL, if any. The …\nTendermint RPC client.\nGet the currently supported JSON-RPC version\nHelper types to generalize differences in serialization …\nTendermint JSON-RPC endpoints\nEnsure we have a supported version or return an error\nJSON-RPC error types\nRPC subscription event-related data structures.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the host associated with this URL.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether or not this URL represents a connection to …\nIs this JSON-RPC version supported?\nThe maximum size of a single incoming message frame. <code>None</code> …\nThe maximum size of an incoming message. <code>None</code> means no …\nDoes nothing, instead use <code>max_write_buffer_size</code>.\nThe max size of the write buffer in bytes. Setting this …\nGet the password associated with this URL, if any.\nGet this URL’s path.\nGet the port associated with this URL.\nStructured querying for the Tendermint RPC event …\nJSON-RPC requests\nJSON-RPC response types\nGet the scheme associated with this URL.\nSerde serializers\nGet the username associated with this URL, if any.\nCreate a JSON-RPC ID containing a UUID v4 (i.e. random)\nThe target minimum size of the write buffer to reach …\nThe number of the page to fetch.\nThe number of items to fetch per page.\nProvides lightweight access to the Tendermint RPC. It …\nProtocol compatibility mode for a Tendermint RPC client.\nA JSON-RPC/HTTP Tendermint RPC client (implements …\nA URL limited to use with HTTP clients.\nAn interface that can be used to asynchronously receive …\nA client that exclusively provides <code>Event</code> subscription …\nUse version 0.34 of the protocol.\nUse version 0.37 of the protocol.\nUse version 0.38 of the protocol.\nTendermint RPC client that provides access to all RPC …\nDrives the WebSocket connection for a <code>WebSocketClient</code> …\nA URL limited to use with WebSocket clients.\nLow-level WebSocket configuration The configuration for …\n<code>/abci_info</code>: get information about the ABCI application.\n<code>/abci_query</code>: query the ABCI application\nWhen set to <code>true</code>, the server will accept and handle …\n<code>/block</code>: get block at a given height.\n<code>/block_by_hash</code>: get block by hash.\n<code>/block_results</code>: get ABCI results for a block at a …\n<code>/block_search</code>: search for blocks by BeginBlock and …\n<code>/blockchain</code>: get block headers for <code>min</code> &lt;= <code>height</code> &lt;= <code>max</code>.\n<code>/broadcast_evidence</code>: broadcast an evidence.\n<code>/broadcast_tx_async</code>: broadcast a transaction, returning …\n<code>/broadcast_tx_commit</code>: broadcast a transaction, returning …\n<code>/broadcast_tx_sync</code>: broadcast a transaction, returning the …\nSubscription clients will usually have long-running …\n<code>/commit</code>: get block commit at a given height.\n<code>/consensus_params</code>: get current consensus parameters at the …\n<code>/consensus_state</code>: get current consensus state\nReturns the argument unchanged.\nReturns the argument unchanged.\nParse the Tendermint version string to determine the …\n<code>/genesis</code>: get genesis file.\n<code>/genesis_chunked</code>: get genesis file in multiple chunks.\n<code>/header</code>: get block header at a given height.\n<code>/header_by_hash</code>: get block by hash.\n<code>/health</code>: get node health.\nHTTP-based transport for Tendermint RPC Client.\nReturn this subscription’s ID for informational purposes.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe latest supported version, selected by default.\n<code>/block</code>: get the latest block.\n<code>/block_results</code>: get ABCI results for the latest block.\n<code>/commit</code>: get the latest block commit\n<code>/consensus_params</code>: get the latest consensus parameters.\nThe maximum size of a single incoming message frame. <code>None</code> …\nThe maximum size of an incoming message. <code>None</code> means no …\nDoes nothing, instead use <code>max_write_buffer_size</code>.\nThe max size of the write buffer in bytes. Setting this …\n<code>/net_info</code>: obtain information about P2P and other network …\nPerform a request against the RPC endpoint.\n<code>/status</code>: get Tendermint status including node info, …\n<code>/subscribe</code>: subscribe to receive events produced by the …\nSynchronization primitives specific to the Tendermint RPC …\n<code>/tx</code>: find transaction by hash.\n<code>/tx_search</code>: search for transactions with their results.\n<code>/unsubscribe</code>: unsubscribe from events relating to the …\n<code>/validators</code>: get validators a given height.\nPoll the <code>/health</code> endpoint until it returns a successful …\nWebSocket-based clients for accessing Tendermint RPC …\nThe target minimum size of the write buffer to reach …\nThe builder pattern constructor for <code>HttpClient</code>.\nA JSON-RPC/HTTP Tendermint RPC client (implements …\nA URL limited to use with HTTP clients.\n<code>/broadcast_evidence</code>: broadcast an evidence.\nTry to create a client with the options specified for this …\nInitiate a builder for a Tendermint RPC HTTP/S client …\nUse the provided client instead of building one internally.\nUse the specified compatibility mode for the Tendermint …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct a new Tendermint RPC HTTP/S client connecting to …\nConstruct a new Tendermint RPC HTTP/S client connecting to …\nConstruct a new Tendermint RPC HTTP/S client connecting to …\nSpecify the URL of a proxy server for the client to …\nSet compatibility mode on the instantiated client.\nThe timeout is applied from when the request starts …\nSpecify the custom User-Agent header used by the client.\nReceiver interface for a channel.\nSender interface for a channel.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWait indefinitely until we receive a value from the …\nConstructor for an unbounded channel.\nThe builder pattern constructor for <code>WebSocketClient</code>.\nTendermint RPC client that provides access to all RPC …\nDrives the WebSocket connection for a <code>WebSocketClient</code> …\nA URL limited to use with WebSocket clients.\nLow-level WebSocket configuration The configuration for …\nWhen set to <code>true</code>, the server will accept and handle …\nTry to create a client with the options specified for this …\nInitiate a builder for a WebSocket-based client connecting …\nUse the specified compatibility mode for the Tendermint …\nUse the specified low-level WebSocket configuration …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum size of a single incoming message frame. <code>None</code> …\nThe maximum size of an incoming message. <code>None</code> means no …\nDoes nothing, instead use <code>max_write_buffer_size</code>.\nThe max size of the write buffer in bytes. Setting this …\nConstruct a new WebSocket-based client connecting to the …\nConstruct a new WebSocket-based client connecting to the …\nExecutes the WebSocket driver, which manages the …\nThe target minimum size of the write buffer to reach …\nThe response code.\nThe response code.\nThe namespace for the <code>code</code>.\nThe namespace for the <code>code</code>.\nChanges to consensus parameters (optional).\nResult bytes, if any.\nResult bytes, if any.\nEvents that occurred while beginning the block.\nEvents that occurred while checking the transaction.\nEvents that occurred while executing the transaction.\nEvents that occurred while ending the block.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAmount of gas consumed by the transaction.\nAmount of gas consumed by the transaction.\nAmount of gas requested for the transaction.\nAmount of gas requested for the transaction.\nAdditional information.\nAdditional information.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe output of the application’s logger.\nThe output of the application’s logger.\nmempool_error is set by Tendermint. ABCI applications …\nThe transaction’s priority (for mempool ordering).\nThe transaction’s sender (e.g. the signer).\nChanges to the validator set, if any.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWhether Tendermint’s indexer should index this event.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe event key.\nThe event value.\nThe Event serialization in the latest RPC dialect is the …\nA list of <code>EventAttribute</code>s describing the event.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe kind of event.\nThe Event serialization in the latest RPC dialect is the …\nA list of <code>EventAttribute</code>s describing the event.\nChecks whether <code>&amp;self</code> is equal to <code>other</code>, ignoring the <code>index</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA variant of <code>core::hash::Hash::hash</code> that ignores the <code>index</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe kind of event.\nConstruct an event from generic data.\n<code>/abci_info</code> endpoint JSON-RPC wrapper\n<code>/abci_query</code> endpoint JSON-RPC wrapper\n<code>/block</code> endpoint JSON-RPC wrapper\n<code>/block_by_hash</code> endpoint JSON-RPC wrapper\n<code>/block_results</code> endpoint JSON-RPC wrapper\n<code>/block_search</code> endpoint JSON-RPC wrapper\n<code>/block</code> endpoint JSON-RPC wrapper\n<code>/broadcast_tx_*</code> endpoint JSON-RPC wrappers\n<code>/commit</code> endpoint JSON-RPC wrapper\n<code>/consensus_params</code> endpoint JSON-RPC wrapper\n<code>/consensus_state</code> endpoint JSON-RPC wrapper\n<code>/broadcast_evidence</code>: broadcast an evidence.\n<code>/genesis</code> endpoint JSON-RPC wrapper\n<code>/genesis_chunked</code> endpoint JSON-RPC wrapper\n<code>/header</code> endpoint JSON-RPC wrapper\n<code>/header_by_hash</code> endpoint JSON-RPC wrapper\n<code>/health</code> endpoint JSON-RPC wrapper\n<code>/net_info</code> endpoint JSON-RPC wrapper\n<code>/status</code> endpoint JSON-RPC wrapper\n<code>/subscribe</code> endpoint JSON-RPC wrapper\n<code>/tx</code> endpoint JSON-RPC wrapper\n<code>/tx_search</code> endpoint JSON-RPC wrapper\n<code>/unsubscribe</code> endpoint JSON-RPC wrapper\n<code>/validators</code> endpoint JSON-RPC wrapper\nRequest ABCI information from a node\nABCI information response\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nABCI info\nABCI query results\nQuery the ABCI application for information\nABCI query response wrapper\nResponse code\nCodespace\nData to query\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBlock height\nBlock height\nIndex\nInfo value\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nKey\nLog value\nCreate a new ABCI query request\nPath to the data\nProof (might be explicit null)\nInclude proof in response\nABCI query results\nValue\nGet information about a specific block\nBlock responses\nBlock data\nBlock ID\nReturns the argument unchanged.\nReturns the argument unchanged.\nHeight of the block to request.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new request for information about a particular …\nBlock data\nBlock ID\nTransaction data\nEvidence of malfeasance\nReturns the argument unchanged.\nReturns the argument unchanged.\nBlock header\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLast commit, should be <code>None</code> for the initial block.\nGet information about a specific block by its hash\nBlock responses\nBlock data\nBlock ID\nReturns the argument unchanged.\nReturns the argument unchanged.\nHash of the block to request.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new request for information about a particular …\nBlock data\nBlock ID\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGet ABCI results at a given height.\nABCI result response.\nMerkle hash of the application state\nBegin block events (might be explicit null)\nNew consensus params (might be explicit null)\nEnd block events (might be explicit null)\nEvents from FinalizeBlock.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHeight of the block to request.\nBlock height\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new request for information about a particular …\nTxs results (might be explicit null)\nSerialization for /block_results endpoint format in …\nValidator updates (might be explicit null)\nRPC dialect helper for serialization of the response.\nBegin block events (might be explicit null)\nNew consensus params (might be explicit null)\nEnd block events (might be explicit null)\nReturns the argument unchanged.\nBlock height\nCalls <code>U::from(self)</code>.\nTxs results (might be explicit null)\nValidator updates (might be explicit null)\nRequest for searching for blocks by their BeginBlock and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructor.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGet information about a specific block\nBlock responses\nBlock metadata\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLast block height for this particular chain\nLast block in the sequence to request info about\nFirst block in the sequence to request info about\nRequest information about a sequence of blocks\n<code>/broadcast_tx_async</code>: broadcast a transaction and return …\n<code>/broadcast_tx_commit</code>: only returns error if …\n<code>/broadcast_tx_sync</code>: returns with the response from <code>CheckTx</code>.\n<code>/broadcast_tx_async</code>: broadcast a transaction and return …\nResponse from either an async or sync transaction …\nCode\nCode space\nData\nReturns the argument unchanged.\nReturns the argument unchanged.\nTransaction hash\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLog\nCreate a new async transaction broadcast RPC request\nTransaction to broadcast\n<code>/broadcast_tx_commit</code>: only returns error if …\nResponse from <code>/broadcast_tx_commit</code>.\n<code>CheckTx</code> result\nReturns the argument unchanged.\nReturns the argument unchanged.\nTransaction\nHeight\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new commit transaction broadcast RPC request\nTransaction to broadcast\nResult of executing the transaction.\nSerialization for /broadcast_tx_commit endpoint format in …\nSerialization for /broadcast_tx_commit endpoint format in …\nRPC dialect helper for serialization of the response.\n<code>CheckTx</code> result\n<code>DeliverTx</code> result\nReturns the argument unchanged.\nTransaction\nHeight\nCalls <code>U::from(self)</code>.\nRPC dialect helper for serialization of the response.\n<code>CheckTx</code> result\n<code>DeliverTx</code> result\nReturns the argument unchanged.\nTransaction\nHeight\nCalls <code>U::from(self)</code>.\n<code>/broadcast_tx_sync</code>: returns with the response from <code>CheckTx</code>.\nResponse from either an async or sync transaction …\nCode\nCode space\nData\nReturns the argument unchanged.\nReturns the argument unchanged.\nTransaction hash\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLog\nCreate a new sync transaction broadcast RPC request\nTransaction to broadcast\nGet commit information about a specific block\nCommit responses\nIs the signed header canonical?\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new request for commit info about a particular …\nSigned header\nGet the consensus parameters.\nConsensus parameters response.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructor with optional height.\nA compound object indicating a height, round and step for …\nGet the current consensus state.\nThe current consensus state (UNSTABLE).\nThe state of a particular consensus round.\nDetails of a single vote from a particular consensus round.\nDetails of all votes for a particular consensus round.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCurrent block height\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCurrent consensus round\nCurrent consensus step\n<code>/broadcast_evidence</code>: broadcast an evidence.\nResponse from either an evidence broadcast request.\nEvidence to broadcast\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvidence hash\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new evidence broadcast RPC request\nGet the genesis state for the current chain\nBlock responses\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenesis data\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the genesis state in multiple chunks for the current …\nBlock responses\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet information about a specific block\nHeader response\nReturns the argument unchanged.\nReturns the argument unchanged.\nHeader data\nHeight of the block header to request.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new request for header information about a …\nGet information about a specific block by its hash\nHeader response\nReturns the argument unchanged.\nReturns the argument unchanged.\nHash of the block to request.\nHeader data\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new request for information about a particular …\nPerform a basic healthceck of the backend\nHealthcheck responses\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConnection status information\nListener information\nMonitor\nPeer information\nRequest network information from a node\nNet info responses\nIs this monitor active?\nAverage rate\nBytes\nBytes remaining\nChannels\nConnection status\nCurrent rate\nDuration of this connection\nDuration of this monitor\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIdle duration for this monitor\nInstant rate\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs this an outbound connection?\nActive listeners\nAre we presently listening?\nNumber of connected peers\nNode information\nPeak rate\nPeer information\nProgress\nReceive monitor\nRemote IP address\nSamples\nSend monitor\nWhen the monitor started\nTime remaining\nNode status request\nStatus responses\nSync information\nAre we catching up?\nEarliest app hash\nEarliest block hash\nEarliest block height\nEarliest block time\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLatest app hash\nLatest block hash\nLatest block height\nLatest block time\nNode information\nSync information\nValidator information\nSubscription request for events.\nStatus responses\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nQuery the Tendermint nodes event and stream events (by …\nRequest for finding a transaction by its hash.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe hash of the transaction we want to find.\nThe hash of the transaction.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructor.\nWhether or not to include the proofs of the transaction’…\nSerialization for /tx endpoint format in Tendermint 0.34\nRPC dialect helper for serialization of the response.\nReturns the argument unchanged.\nThe hash of the transaction.\nCalls <code>U::from(self)</code>.\nRequest for searching for transactions with their results.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructor.\nSerialization for /tx_search endpoint format in Tendermint …\nRPC dialect helper for serialization of the response.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRequest to unsubscribe from events relating to a given …\nStatus responses\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUnsubscribe from all events generated by the given query.\nThe default number of validators to return per page.\nList validators for a specific block\nValidator responses\nBlock height\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe height at which to retrieve the validator set. If not …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nList validators for a specific block.\nConstructor.\nThe number of the page to fetch.\nThe number of validators to fetch per page.\nTotal number of validators for this block height.\nValidator list\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn incoming event produced by a <code>Subscription</code>.\nData of the newly committed block.\nData of the newly committed block.\nTransaction result info.\nTransaction result.\nThe data associated with the event.\nReturns the type associated with this event, if we …\nEvent type and attributes map.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe query that produced the event.\nSerialization helpers for CometBFT 0.34 RPC\nSerialization helpers for the RPC protocol used in …\nSerialization helpers for the RPC protocol used in …\nThe data associated with the event.\nThe data associated with the event.\nThe data associated with the event.\nEvent type and attributes map.\nEvent type and attributes map.\nEvent type and attributes map.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe query that produced the event.\nThe query that produced the event.\nThe query that produced the event.\nHelper used to deserialize <code>EventData</code> for CometBFT RPC …\nThe data associated with the event.\nThe data associated with the event.\nEvent type and attributes map.\nEvent type and attributes map.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe query that produced the event.\nThe query that produced the event.\nHelper used to deserialize <code>EventData</code> for CometBFT RPC …\nThe data associated with the event.\nThe data associated with the event.\nEvent type and attributes map.\nEvent type and attributes map.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe query that produced the event.\nThe query that produced the event.\nA condition which is part of a <code>Query</code>.\nCheck if the value for the key contains a certain …\nCheck if the value for the key is equal to this operand\nThe types of Tendermint events for which we can query at …\nCheck if the key exists\nCheck if the value for the key is greater than this operand\nCheck if the value for the key is greater than or equal to …\nCheck if the value for the key is less than this operand\nCheck if the value for the key is less than or equal to …\nA typed operand for use in an <code>Condition</code>.\nThe different types of operations supported by a <code>Query</code>.\nA structured query for use in interacting with the …\nA term in a query is either an event type or a general …\nAdd the condition <code>&lt;key&gt; CONTAINS &lt;value&gt;</code> to the query.\nAdd the condition <code>&lt;key&gt; = &lt;value&gt;</code> to the query.\nAdd the condition <code>&lt;key&gt; EXISTS</code> to the query.\nAdd the condition <code>&lt;key&gt; &gt; &lt;value&gt;</code> to the query.\nAdd the condition <code>&lt;key&gt; &gt;= &lt;value&gt;</code> to the query.\nAdd the condition <code>&lt;key&gt; &lt; &lt;value&gt;</code> to the query.\nAdd the condition <code>&lt;key&gt; &lt;= &lt;value&gt;</code> to the query.\nQuery constructor testing whether <code>&lt;key&gt; CONTAINS &lt;value&gt;</code> …\nCheck if the value for the key contains a certain …\nAn empty query matches any set of events. See these docs.\nQuery constructor testing whether <code>&lt;key&gt; = &lt;value&gt;</code>\nCheck if the value for the key is equal to this operand\nQuery constructor testing whether <code>&lt;key&gt; EXISTS</code>.\nCheck if the key exists\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nQuery constructor testing whether <code>&lt;key&gt; &gt; &lt;value&gt;</code>\nCheck if the value for the key is greater than this operand\nQuery constructor testing whether <code>&lt;key&gt; &gt;= &lt;value&gt;</code>\nCheck if the value for the key is greater than or equal to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe key this condition applies to.\nQuery constructor testing whether <code>&lt;key&gt; &lt; &lt;value&gt;</code>\nCheck if the value for the key is less than this operand\nQuery constructor testing whether <code>&lt;key&gt; &lt;= &lt;value&gt;</code>\nCheck if the value for the key is less than or equal to …\nCreate a new condition that applies the given <code>operation</code> to …\nThe operation to apply to the key or its value, depending …\nThe output data, converted from Response.\nJSON-RPC requests\nSerialization for JSON-RPC requests\nResponse type for this command\nSimple JSON-RPC requests which correlate with a single …\nJSON-RPC request wrapper (i.e. message envelope)\nReturns the argument unchanged.\nParse a JSON-RPC request from a JSON string.\nCalls <code>U::from(self)</code>.\nSerialize this request as JSON\nRequest method\nCreate a new request wrapper from the given request.\nJSON-RPC responses\nJSON-RPC response wrapper (i.e. message envelope)\nReturns the argument unchanged.\nParse a JSON-RPC response from an <code>io::Reader</code>\nParse a JSON-RPC response from a JSON string\nGet JSON-RPC ID\nCalls <code>U::from(self)</code>.\nConvert this wrapper into the underlying error, if any\nConvert this wrapper into a result type\nGet JSON-RPC version\nAn internal error occurred within the client.\nSee <code>func RPC*Error()</code> definitions in: …\nLow-level HTTP error\nInternal RPC server error (-32603)\nInvalid parameters (-32602)\nInvalid request (-32600)\nMethod not found error (-32601)\nOther error types\nParse error i.e. invalid JSON (-32700)\nServer error (-32000)\nLow-level WebSocket error\nAn internal error occurred within the client.\nObtain the <code>rpc::error::Code</code> for this error\nOptional additional error message (if available)\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new invalid parameter error\nBorrow the error message (if available)\nCreate a new method-not-found error\nCreate a new RPC error\nCreate a new parse error\nCreate a new server error\nGet the integer error value for this code\nCreate a new websocket error\nSerialize/deserialize <code>nil</code>able value into <code>T</code>, where <code>nil</code> …\nAppHash serialization with validation\nAppHash serialization with validation\nSerialize/deserialize bytes (<code>Vec&lt;u8&gt;</code>) type\nSerialize and deserialize any <code>T</code> that implements <code>FromStr</code> …\nCombines <code>from_str</code> and <code>allow_null</code>.\nHash serialization with validation\nSerialize/deserialize <code>nil</code>able type into <code>T</code>, where <code>nil</code> turns …\nEncoding/decoding Option Tendermint hashes to/from base64.\n<code>Option&lt;Hash&gt;</code> serialization with validation\nSerialize/deserialize <code>Option&lt;T&gt;</code> type where <code>T</code> has a …\nDe/serialize an optional type that must be converted …\nSerialize and deserialize part_set_header.total (from …\nAn alternative timestamp serialization/deserialization …\nSerialize/deserialize core::time::Duration type from and …\nSerialize/deserialize Timestamp type from and into string:\nEncoding/decoding Tendermint hashes to/from base64.\nEncoding/decoding ABCI transaction hashes to/from base64.\nSerialize/deserialize <code>Vec&lt;Vec&lt;u8&gt;&gt;</code> type from and into …\nDeserialize <code>null</code> or an empty object <code>{}</code> as <code>None</code>.\nDeserialize <code>T</code> from a <code>nil</code>-able representation, accepting …\nSerialize <code>T</code> as <code>Some</code> value of <code>Option&lt;T&gt;</code>.\nDeserialize hexstring into AppHash\nSerialize from AppHash into hexstring\nDeserialize a base64-encoded string into an <code>AppHash</code>\nSerialize from <code>AppHash</code> into a base64-encoded string.\nSerialize into base64string, deserialize from base64string\nSerialize into hexstring, deserialize from hexstring\nSerialize into and deserialize from an optional …\nSerialize into string, deserialize from string\nSerialize into and deserialize from a sequence of …\nDeserialize base64string into <code>Vec&lt;u8&gt;</code>\nDeserialize base64string into String\nSerialize from T into base64string\nDeserialize a hex-encoded string into <code>Vec&lt;u8&gt;</code>\nSerialize from a byte slice into a hex-encoded string.\nDeserialize <code>Option&lt;base64string&gt;</code> into <code>Vec&lt;u8&gt;</code> or null\nSerialize from <code>T</code> into <code>Option&lt;base64string&gt;</code>\nDeserialize string into <code>Vec&lt;u8&gt;</code>\nSerialize from <code>T</code> into string\nDeserialize array into <code>Vec&lt;Vec&lt;u8&gt;&gt;</code>\nSerialize from <code>Vec&lt;T&gt;</code> into <code>Vec&lt;base64string&gt;</code>\nDeserialize string into T\nSerialize from T into string\nDeserialize a nullable string into T\nSerialize from T into string\nDeserialize hexstring into Hash\nSerialize from Hash into hexstring\nDeserialize <code>Option&lt;T&gt;</code>\nSerialize <code>Option&lt;T&gt;</code>\nDeserialize base64-encoded string into an Option…\nSerialize from an Optiontendermint::Hash into a …\nDeserialize a nullable hexstring into <code>Option&lt;Hash&gt;</code>. A null …\nSerialize from <code>Option&lt;Hash&gt;</code> into a nullable hexstring. …\nDeserialize <code>Option&lt;T&gt;</code>\nSerialize <code>Option&lt;T&gt;</code>\nDeserialize (string or u32) into u32(part_set_header.total)\nSerialize from u32(part_set_header.total) into u32\nDeserialize <code>String</code> into <code>Time</code>\nSerialize from <code>Time</code> into <code>String</code>\nDeserialize string into Duration\nSerialize from Duration into string\nHelper struct to serialize and deserialize Timestamp into …\nDeserialize string into Timestamp\nHelper for formatting an <code>OffsetDateTime</code> value.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSerialize from Timestamp into string\nSerialization helper for converting an <code>OffsetDateTime</code> …\nDeserialize a base64-encoded string into an …\nSerialize from a tendermint::Hash into a base64-encoded …\nDeserialize a base64-encoded string into an …\nSerialize from an abci::transaction::Hash into a …\nDeserialize transactions into <code>Vec&lt;Vec&lt;u8&gt;&gt;</code>\nSerialize from <code>Vec&lt;Vec&lt;u8&gt;&gt;</code> into transactions")