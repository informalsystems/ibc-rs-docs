searchState.loadedDescShard("ethers_contract", 0, "ethers-contract\nABI codec related errors\nThrown when the internal BaseContract errors\nProgrammatically generate type-safe Rust bindings for an …\nInclude all contracts\nA reduced form of <code>Contract</code> which just takes the <code>abi</code> and …\nHelper struct for managing calls to be made to the <code>function</code>…\nThrown during deployment if a constructor argument was …\n<code>Contract</code> is a <code>ContractInstance</code> object with an <code>Arc</code> …\n<code>ContractCall</code> is a <code>FunctionCall</code> object with an …\n<code>ContractDeployer</code> is a <code>ContractDeploymentTx</code> object with an …\nHelper which manages the deployment transaction of a smart …\nAn Error which is thrown when interacting with a smart …\nContract call returned an error\n<code>ContractFactory</code> is a <code>DeploymentTxFactory</code> object with an <code>Arc</code>…\nUsed to filter contracts that should be <em>included</em> in the …\nA Contract is an abstraction of an executable program on …\nThrown if a contract address is not found in the …\nA trait for enums unifying <code>EthError</code> types. This trait is …\nThrown when the ABI decoding fails\nThrown when the ABI decoding fails\nTo deploy a contract to the Ethereum network, a …\nThrown when detokenizing an argument\nThrown when detokenizing an argument\nDerives the <code>Eip712</code> trait for the labeled type.\nDerives the <code>AbiEncode</code> and <code>AbiDecode</code> traits for the labeled …\nDerives the <code>AbiType</code> and all <code>Tokenizable</code> traits for the …\nA helper trait for types that represent all call input …\nDerives the <code>EthCall</code> and <code>Tokenizeable</code> trait for the labeled …\nDerives the <code>Display</code> trait on structs by formatting each …\nA helper trait for types that represents a custom error …\nDerives the <code>EthError</code> and <code>Tokenizeable</code> trait for the …\nA trait for implementing event bindings\nDerives the <code>EthEvent</code> and <code>Tokenizable</code> traits for the …\nA trait for types (events) that can be decoded from a …\nHelper for managing the event filter before querying or …\nOnly include contracts that <em>don’t</em> match the filter\nA Contract Filter that exclude certain contracts\nHelper for managing a transaction before submitting it to …\nContract call reverted when not allowed\nHelper to match <code>ethabi::Param</code>s with structs and nested …\nUnsupported chain\nMetadata inside a log\nThe Multicall3 contract address that is deployed in …\nThe chain IDs that <code>MULTICALL_ADDRESS</code> has been deployed to.\nThrown when a middleware call fails\nCollects Abigen structs for a series of contracts, pending …\nA Multicall is an abstraction for sending batched …\nV1\nV2\nV3\nErrors using the <code>crate::Multicall</code> system\nThe version of the <code>Multicall</code>. Used to determine which …\nThrown when a provider call fails\nContract reverted\nOnly include contracts that match the filter\nA Contract Filter that only includes certain contracts.\nReturns a reference to the contract’s ABI\nReturns a reference to the deployer’s ABI\nReturns a reference to the contract’s ABI.\nRetrieves the ABI signature for the call\nRetrieves the ABI signature for the error\nRetrieves the ABI signature for the event this data …\nGenerates type-safe bindings to an Ethereum smart contract …\nAppends a <code>call</code> to the list of calls of the Multicall …\nAppends multiple <code>call</code>s to the list of calls of the …\nAdd a custom derive to the derives for all structs and …\nAdd a Solidity custom error alias to specify the generated …\nManually adds a solidity event alias to specify what the …\nAppends a <code>call</code> to the list of calls of the Multicall …\nAppends a <code>call</code> to the list of calls of the Multicall …\nAppends a <code>call</code> to the list of calls of the Multicall …\nAppends a <code>call</code> to the list of calls of the Multicall …\nAppends a <code>call</code> to the list of calls of the Multicall …\nAppends a <code>call</code> to the list of calls of the Multicall …\nAppends a <code>call</code> to the list of calls of the Multicall …\nAppends a <code>call</code> to the list of calls of the Multicall …\nAppends a <code>call</code> to the list of calls of the Multicall …\nAppends a <code>call</code> to the list of calls of the Multicall …\nAdd a Solidity method error alias to specify the generated …\nAdds an exact name to the filter\nAdds an exact name to the filter\nSets the pattern to use\nSets the pattern to use\nAdds the regex to use\nAdds the regex to use\nSets the filter’s address.\nReturns the contract’s address\nAddress from which this log originated\nRemoves all <code>Abigen</code> items that should not be included based …\nConvert a <code>MulticallError</code> to a the underlying error if …\nConvert a <code>MulticallError</code> to a the underlying error if …\nConvert a <code>ContractError</code> to a <code>MiddlewareError</code> if possible.\nConvert a <code>MulticallError</code> to a <code>ProviderError</code> if possible.\nConvert a <code>ContractError</code> to a <code>ProviderError</code> if possible.\nIf this <code>MulticallError</code> is a revert, this method will …\nIf this <code>ContractError</code> is a revert, this method will …\nReturns a new contract instance at <code>address</code>.\nSets the filter’s <code>blockHash</code>. Setting this will override …\nSets the <code>block</code> field of the Multicall aggregate call.\nSets the block at which RPC requests are made\nSets the <code>block</code> field for sending the tx to the chain\nThe <code>block</code> field of the Multicall aggregate call.\nOptional block number to be used when calculating the …\nOptional block number to be used when calculating the …\nThe block hash in which the log was emitted\nThe block in which the log was emitted\nBuild the contract bindings and prepare for writing\nQueries the Ethereum blockchain using <code>eth_call</code>, but via …\nDry runs the deployment of the contract\nQueries the blockchain via an <code>eth_call</code> for the provided …\nQueries the Ethereum blockchain using <code>eth_call</code>, but via …\nQueries the Ethereum blockchain using <code>eth_call</code>, but via …\nReturns a CallBuilder, which when awaited executes the …\nReturns an implementer of <code>RawCall</code> which can be <code>.await</code>d to …\nReturns a <code>CallBuilder</code> which can be <code>.await</code>d to query the …\nReturns the underlying transaction’s ABI encoded data\nSets the <code>chain_id</code> field in the deploy transaction to the …\nClears the batch of calls from the Multicall instance. …\nReturns a pointer to the deployer’s client\nReturns a pointer to the contract’s client.\nReturns a reference to the contract’s client.\nSets the number of confirmations to wait for the contract …\nReturns a new contract instance using the provided client\nReturns a new contract instance using the provided client\nThe Multicall contract interface.\nSets the <code>data</code> field in the deploy transaction to the …\nDecodes the provided ABI encoded function arguments with …\nDecode revert data into a <code>ContractRevert</code> type. Returns <code>None</code>…\nDecodes for a given event name, given the <code>log.topics</code> and …\nDecodes for a given event name, given the <code>log.topics</code> and …\nHelper for ABI decoding raw data based on a function’s …\nDecodes the provided ABI encoded input bytes\nDecodes the provided ABI encoded input bytes\nDecodes an Ethereum <code>RawLog</code> into an instance of the type.\ndecode from a <code>RawLog</code>\nDecodes a series of logs into a vector\nDecodes the provided ABI encoded function output with the …\nDecodes the provided ABI encoded function output with the …\nDecode the provided ABI encoded bytes as the output of the …\nDecodes the provided ABI encoded bytes with the selected …\nDecodes the provided ABI encoded function arguments with …\nDecode revert data into an <code>EthError</code> type. Returns <code>None</code> if …\nDecode revert data into an <code>EthError</code> type. Returns <code>None</code> if …\nDecode the error from EVM revert data including an Error …\nDecode the error from EVM revert data including an Error …\nDecode the error from EVM revert data including an Error …\nDecode the error from EVM revert data including an Error …\nDecodes the provided ABI encoded bytes with the selected …\nDecodes the provided ABI encoded bytes with the selected …\nConstructs the deployment transaction based on the …\nCreate a deployment tx using the provided tokens as …\nthe actual deployer, exposed for overriding the defaults\nthe actual deployer, exposed for overriding the defaults\nReturns a reference to the contract’s derives.\nReturns a mutable reference to the contract’s derives.\nSpecify whether to print cargo build script directives if …\nReturns the ABI encoded data for the provided function and …\nHelper for ABI encoding arguments for a specific function\nReturns the ABI encoded data for the provided function …\nReturns a mutable reference to the contract’s event …\nThe name of the error\nReturns the estimated gas cost for the underlying …\nReturns an <code>Event</code> builder for the provided event.\nReturns a reference to the contract’s event aliases.\nReturns an <code>Event</code> builder with the provided name.\nReturns an <code>Event</code> builder for the provided event.\nReturns an <code>Event</code> builder with the provided filter.\nExpands the <code>Abigen</code> and returns the <code>ExpandedContract</code> that …\nAdds multiple exact names to the filter\nAdds multiple exact names to the filter\nAdds multiple patterns to the filter\nAdds multiple patterns to the filter\nAdds multiple exact names to the filter\nAdds multiple exact names to the filter\nThe event filter’s state\nSpecify whether to format the code or not. True by default.\nCreates a new <code>BaseContract</code> from the abi.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSets the <code>from</code> field in the deploy transaction to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nSets the <code>from</code> field in the transaction to the provided …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new instance from a series of already resolved …\nSets the filter’s <code>from</code> block\nAttempts to load a new builder from an ABI JSON file at …\nReads all json files contained in the given <code>dir</code> and use …\nConvert a <code>MiddlewareError</code> to a <code>ContractError</code>\nAttempt to decode from a <code>JsonRpcError</code> by extracting revert …\nAttempt to decode from a <code>JsonRpcError</code> by extracting revert …\nThe ABI of the function being called\nThe ABI of the function being called\nThe name of the function\nSets the <code>gas</code> field in the deploy transaction to the …\nSets the <code>gas</code> field in the transaction to the provided value\nSets the <code>gas_price</code> field in the deploy transaction to the …\nSets the <code>gas_price</code> field in the transaction to the …\nGenerates the contract bindings.\nReturns the type identifier as it’s used in the solidity …\nReturns the name of the rust type that will be generated …\nReturns solidity type identifier as it’s used in the ABI.\nReturns the name of the rust type that will be generated …\nReturns the name of the rust type that will be generated …\nReturns the name of the rust type that will be generated …\nReturns the name of the rust type for the type\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUpgrades a <code>BaseContract</code> into a full fledged contract with …\nReturns true if this is an anonymous event\nTrue if the underlying error is a <code>ContractError</code>\nReturns whether to include the contract with the given <code>name</code>\nReturns true whether the <code>name</code> matches the filter\nReturns true whether the <code>name</code> matches the filter\nTrue if the underlying error is a MiddlewareError\nTrue if the error is a middleware error\nTrue if the error is a provider error\nTrue if the error is a provider error\nTrue if the error is a revert, false otherwise\nTrue if the error is a revert, false otherwise\nTrue if call is v1\nTrue if call is v2\nTrue if call is v3\nMakes a legacy transaction instead of an EIP-1559 one.\nUses a Legacy transaction instead of an EIP-1559 one to do …\nUses a Legacy transaction instead of an EIP-1559 one to …\nWhether to use a legacy or a EIP-1559 transaction.\nLog index position in the block\nReturns a transaction builder for the provided function …\nReturns a reference to the contract’s method aliases.\nReturns a mutable reference to the contract’s method …\nReturns a transaction builder for the selected function …\nA mapping from method signature to a name-index pair for …\nThe Multicall contract bindings. Auto-generated with <code>abigen</code>…\nThe name of the event this type represents\nReturns a reference to the contract’s name.\nReturns a mutable reference to the contract’s name.\nReturns an Event builder for the ethereum event …\nReturns an Event builder for the ethereum event …\nCreates a new instance with a filled type mapping table …\nCreate a new instance from a series (<code>contract name</code>, …\nCreates a new builder with the given contract name and ABI …\nCreates a new Multicall instance from the provided client. …\nCreate a new instance of this from a deployer.\nCreates a factory for deployment of the Contract with …\nCreates a new contract from the provided client, abi and …\nCreates a new builder with the given contract name Ident …\nCreates a new Multicall instance synchronously from the …\nSets the <code>nonce</code> field in the deploy transaction to the …\nSets the <code>nonce</code> field in the transaction to the provided …\nAttempt to parse a log into a specific output type.\nAdd another Abigen to the module or lib\nQueries the blockchain for the selected filter and returns …\nQueries the blockchain for the selected filter and returns …\nReturns the mapping table of abi …\nThe selector of the function\nThe selector of the function\nThe selector of the error\nThe selector of the error\nSigns and broadcasts a batch of transactions by using the …\nBroadcasts the contract deployment transaction and after …\nSigns and broadcasts the provided transaction\nBroadcasts the contract deployment transaction and after …\nRetrieves the signature for the event this data …\nReturns a reference to the contract’s ABI source.\nReturns a mutable reference to the contract’s ABI source.\nSets the <code>overriding state</code> of the Multicall aggregate call.\nThe state overrides of the Multicall aggregate\nContains the <code>EventStream</code> type which aids in streaming …\nTurns this event filter into <code>Stream</code> that yields decoded …\nAs <code>Self::stream</code>, but does not discard <code>Log</code> metadata.\nReturns all the solidity struct types\nReturns a subscription for the event\nAs <code>Self::subscribe</code>, but includes event metadata\nSets the <code>to</code> field in the deploy transaction to the …\nSets the filter’s <code>to</code> block\nSets the filter’s 0th topic (typically the event name …\nSets the filter’s 1st topic\nSets the filter’s 2nd topic\nSets the filter’s 3rd topic\nThe transaction hash in which the log was emitted\nTransactions index position log was created from\nSets the pattern to use\nSets the pattern to use\nAdds multiple patterns to the filter\nAdds multiple patterns to the filter\nThe raw transaction object\nThe raw transaction object\n<code>true</code> if the selector corresponds to an error that this …\nSets the <code>value</code> field in the deploy transaction to the …\nSets the <code>value</code> field in the transaction to the provided …\nChanges which functions to use when making the contract …\nThe version of which methods to use when making the …\nSee <code>apply_filter</code>\nThe underlying error\nThe underlying error\nContainer type for all input parameters for the <code>aggregate3</code> …\nContainer type for all return fields from the <code>aggregate3</code> …\nContainer type for all input parameters for the …\nContainer type for all return fields from the …\nContainer type for all input parameters for the <code>aggregate</code> …\nContainer type for all return fields from the <code>aggregate</code> …\nContainer type for all input parameters for the …\nContainer type for all return fields from the …\n<code>Call(address,bytes)</code>\n<code>Call3(address,bool,bytes)</code>\n<code>Call3Value(address,bool,uint256,bytes)</code>\nContainer type for all input parameters for the <code>getBasefee</code> …\nContainer type for all return fields from the <code>getBasefee</code> …\nContainer type for all input parameters for the …\nContainer type for all return fields from the <code>getBlockHash</code> …\nContainer type for all input parameters for the …\nContainer type for all return fields from the …\nContainer type for all input parameters for the <code>getChainId</code> …\nContainer type for all return fields from the <code>getChainId</code> …\nContainer type for all input parameters for the …\nContainer type for all return fields from the …\nContainer type for all input parameters for the …\nContainer type for all return fields from the …\nContainer type for all input parameters for the …\nContainer type for all return fields from the …\nContainer type for all input parameters for the …\nContainer type for all return fields from the …\nContainer type for all input parameters for the …\nContainer type for all return fields from the <code>getEthBalance</code>…\nContainer type for all input parameters for the …\nContainer type for all return fields from the …\nThe parsed JSON ABI of the contract.\nContainer type for all of the contract’s call\n<code>Result(bool,bytes)</code>\nContainer type for all input parameters for the …\nContainer type for all return fields from the <code>tryAggregate</code> …\nContainer type for all input parameters for the …\nContainer type for all return fields from the …\nThis module was auto-generated with ethers-rs Abigen. More …\nContainer type for all input parameters for the <code>aggregate3</code> …\nContainer type for all return fields from the <code>aggregate3</code> …\nContainer type for all input parameters for the …\nContainer type for all return fields from the …\nContainer type for all input parameters for the <code>aggregate</code> …\nContainer type for all return fields from the <code>aggregate</code> …\nContainer type for all input parameters for the …\nContainer type for all return fields from the …\n<code>Call(address,bytes)</code>\n<code>Call3(address,bool,bytes)</code>\n<code>Call3Value(address,bool,uint256,bytes)</code>\nContainer type for all input parameters for the <code>getBasefee</code> …\nContainer type for all return fields from the <code>getBasefee</code> …\nContainer type for all input parameters for the …\nContainer type for all return fields from the <code>getBlockHash</code> …\nContainer type for all input parameters for the …\nContainer type for all return fields from the …\nContainer type for all input parameters for the <code>getChainId</code> …\nContainer type for all return fields from the <code>getChainId</code> …\nContainer type for all input parameters for the …\nContainer type for all return fields from the …\nContainer type for all input parameters for the …\nContainer type for all return fields from the …\nContainer type for all input parameters for the …\nContainer type for all return fields from the …\nContainer type for all input parameters for the …\nContainer type for all return fields from the …\nContainer type for all input parameters for the …\nContainer type for all return fields from the <code>getEthBalance</code>…\nContainer type for all input parameters for the …\nContainer type for all return fields from the …\nThe parsed JSON ABI of the contract.\nContainer type for all of the contract’s call\n<code>Result(bool,bytes)</code>\nContainer type for all input parameters for the …\nContainer type for all return fields from the <code>tryAggregate</code> …\nContainer type for all input parameters for the …\nContainer type for all return fields from the …\nCalls the contract’s <code>aggregate</code> (0x252dba42) function\nCalls the contract’s <code>aggregate3</code> (0x82ad56cb) function\nCalls the contract’s <code>aggregate3Value</code> (0x174dea71) …\nCalls the contract’s <code>blockAndAggregate</code> (0xc3077fa9) …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls the contract’s <code>getBasefee</code> (0x3e64a696) function\nCalls the contract’s <code>getBlockHash</code> (0xee82ac5e) function\nCalls the contract’s <code>getBlockNumber</code> (0x42cbb15c) function\nCalls the contract’s <code>getChainId</code> (0x3408e470) function\nCalls the contract’s <code>getCurrentBlockCoinbase</code> …\nCalls the contract’s <code>getCurrentBlockDifficulty</code> …\nCalls the contract’s <code>getCurrentBlockGasLimit</code> …\nCalls the contract’s <code>getCurrentBlockTimestamp</code> …\nCalls the contract’s <code>getEthBalance</code> (0x4d2301cc) function\nCalls the contract’s <code>getLastBlockHash</code> (0x27e86d6e) …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new contract instance with the specified <code>ethers</code> …\nCalls the contract’s <code>tryAggregate</code> (0xbce38bd7) function\nCalls the contract’s <code>tryBlockAndAggregate</code> (0x399542e9) …\nGeneric wrapper around Log streams, mapping their content …\nWrapper around a <code>EventStream</code>, that in addition to the …\nA stream of two items\nStream for <code>EventStream::select</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe stream ID, provided by the RPC server\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInstantiate a new <code>EventStream</code>\nTurns a stream of Results to a stream of <code>Result::ok</code> for …\nThis function will attempt to pull events from both event …\nSee <code>EventStream::select</code>\nTurns this stream of events into a stream that also yields …")