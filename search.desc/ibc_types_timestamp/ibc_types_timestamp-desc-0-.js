searchState.loadedDescShard("ibc_types_timestamp", 0, "A timestamp type for IBC.\nThe expiry result when comparing two timestamps.\nparsing u64 integer from string error: <code>{0}</code>\nA newtype wrapper over <code>Option&lt;Time&gt;</code> to keep track of IBC …\nTimestamp overflow when modifying with duration\nChecks whether the current timestamp is strictly more …\nConvert a <code>Timestamp</code> to <code>u64</code> value in nanoseconds. If no …\nChecks whether the timestamp has expired when compared to …\nComputes the duration difference of another <code>Timestamp</code> from …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe IBC protocol represents timestamps as u64 Unix …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert a <code>Timestamp</code> to an optional <code>OffsetDateTime</code>\nConvert a <code>Timestamp</code> to an optional <code>tendermint::Time</code>\nConvert a <code>Timestamp</code> to <code>u64</code> value in nanoseconds. If no …\nReturns a <code>Timestamp</code> representation of a timestamp not …\nReturns a <code>Timestamp</code> representation of the current time.")