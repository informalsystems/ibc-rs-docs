searchState.loadedDescShard("poseidon_parameters", 0, "Parameters for Poseidon1 and Poseidon2.\nStructures related to Poseidon version 1 parameters.\nStructures related to Poseidon version 2 parameters.\nThe exponent in <code>Sbox(x) = x^\\alpha</code>.\nRepresents an matrix of round constants.\nA positive exponent $x^{alpha}$.\n1/x\nSecurity level.\nElement at M00\nA sparse matrix formed from M,\nA (t - 1) x (t - 1) MDS submatrix derived from the MDS …\nThe inverse of the (t - 1) x (t - 1) Mhat matrix.\nM_i\nThe inverse of the t x t MDS matrix (needed to compute …\nA matrix formed from Mhat (an MDS submatrix of the MDS …\nRepresents a matrix over <code>PrimeField</code> elements.\nRepresents an MDS (maximum distance separable) matrix.\nRepresents an optimized matrix of round constants.\nRepresents an optimized MDS (maximum distance separable) …\nA set of Poseidon1 parameters for a given set of input …\n<code>RoundNumbers</code> required for security based on known attacks.\nRepresents a square matrix over <code>PrimeField</code> elements\nMatrix operations that are defined on square matrices.\nExponent of the Sbox, i.e. S-box(x) = x^{\\alpha} used in …\n<code>num_total_rounds x t</code> matrix of constants used in the …\nCompute the matrix of cofactors\nCompute the cofactor matrix, i.e. $C_{ij} = (-1)^{i+j}$\nCompute the matrix determinant\nCompute the matrix determinant\nAccess elements as an array of arrays\nElements of the matrix, stored in a fixed-size array.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInstantiate an MDS matrix from a list of elements.\nNumber of full rounds.\nNumber of full rounds as mutable reference.\nGet element[i,j]\nCompute Hadamard (element-wise) product\nCompute the (t - 1) x (t - 1) Mhat matrix from the MDS …\nConstruct an identity matrix\nConstruct an identity matrix\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCompute the matrix inverse, if it exists\nCompute the inverse of the matrix\nCompute inverse of MDS matrix\nGet rows\nGet rows\nGet rows\nMultiply two <code>Matrix</code>\n<code>t x t</code> MDS matrix used in the <code>MixLayer</code> step\nCompute the matrix of minors\nCompute the (unsigned) minors of this matrix\nNumber of columns\nNumber of rows\nCreate a new matrix\nCreate a <code>OptimizedArcMatrix</code> from its elements.\nCreate a 2x2 <code>SquareMatrix</code> from four elements.\nCreate a new matrix from a slice of elements.\nCreate a new matrix from a slice of elements.\nCreate a new matrix from a slice of elements.\nCreate a new matrix from a slice of elements.\nCreate a new matrix from a slice of elements.\nOptimized round constants.\nOptimized MDS matrices.\nNumber of partial rounds.\nNumber of full rounds as mutable reference.\nNumber of full rounds.\nNumber of partial rounds.\nRound numbers\nGet row vector at a specified row index\nGet row vector at a specified row index.\nSet element[i,j]\nMultiply two matrices\nReturn the memory representation of alpha as a byte array …\nNumber of total rounds.\nReturn the elements M_{0,1} .. M_{0,t} from the first row\nA 1 x (t - 1) (row) vector derived from the MDS matrix.\nv_collection: one per partial round.\nReturn the elements M_{1,0} .. M_{t,0} from the first …\nA (t - 1) x 1 (column) vector derived from the MDS matrix.\nw_hat_collection: one per round\nThe exponent in <code>Sbox(x) = x^\\alpha</code>.\nRepresents an matrix of round constants.\nA positive exponent $x^{alpha}$.\n1/x\nSecurity level.\nA set of Poseidon2 parameters for a given set of input …\n<code>RoundNumbers</code> required for security based on known attacks.\nRepresents a square matrix over <code>PrimeField</code> elements\nMatrix operations that are defined on square matrices.\nExponent of the Sbox, i.e. S-box(x) = x^{\\alpha} used in …\nRound constants\nCompute the matrix of cofactors\nCompute the matrix determinant\nAccess elements as an array of arrays\nReturns the argument unchanged.\nGet element[i,j]\nCompute Hadamard (element-wise) product\nConstruct an identity matrix\nCalls <code>U::from(self)</code>.\nCompute the matrix inverse, if it exists\nExternal matrix\nInternal matrix\nCompute the matrix of minors\nNumber of columns\nNumber of rows\nCreate a new matrix\nNumber of full rounds.\nNumber of partial rounds.\nRound numbers\nSet element[i,j]")