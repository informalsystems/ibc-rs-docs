searchState.loadedDescShard("penumbra_sdk_governance", 0, "Registers all metrics used by this crate.\nAn encoded parameter.\nA set of changes to the app parameters.\nApplies a set of changes to the “raw” app parameters.\nGenerates a set of encoded parameters for the given object.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe body of a delegator vote.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe nullifier of the staked note being used to vote.\nThe proposal ID the vote is for.\nThe randomized validating key for the spend authorization …\nThe start position of the proposal in the TCT.\nThe unbonded amount equivalent to the value above\nThe value of the staked note being used to vote.\nThe vote on the proposal.\nA plan to vote as a delegator.\nConvenience method to construct the <code>DelegatorVote</code> …\nConstruct the <code>DelegatorVoteBody</code> described by this …\nConstruct the <code>DelegatorVoteProof</code> required by the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a new <code>DelegatorVotePlan</code> that votes using the given …\nConstruct the <code>Nullifier</code> associated with this …\nThe position of the staked note.\nThe first blinding factor used for generating the ZK proof.\nThe second blinding factor used for generating the ZK …\nThe proposal ID to vote on.\nThe randomizer to use.\nConstruct the randomized verification key associated with …\nA staked note that was spendable before the proposal …\nThe start position of the proposal.\nThe unbonded amount corresponding to the staked note.\nThe vote to cast.\nGroth16 proof for delegator voting.\nThe private input for a <code>DelegatorVoteProof</code>.\nThe public input for a <code>DelegatorVoteProof</code>.\nThe spend authorization key.\nthe merkle root of the state commitment tree.\nbalance commitment of the note to be spent.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe nullifier deriving key.\nThe note being spent.\nnullifier of the note to be spent.\nthe randomized verification spend key.\nThe randomizer used for generating the randomized spend …\nthe start position of the proposal being voted on.\nInclusion proof for the note commitment.\nThe blinding factor used for generating the balance …\nCalled to verify the proof using the provided public …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nThe initial configuration parameters for the governance …\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe deposit required to create a proposal.\nThe threshold for a proposal to pass voting, as a ratio of …\nThe threshold for a proposal to be slashed, as a ratio of …\nThe quorum required for a proposal to be considered valid, …\nThe number of blocks during which a proposal is voted on.\nA Community Pool spend proposal.\nA Community Pool spend proposal describes proposed …\nAn emergency proposal.\nAn emergency proposal is immediately passed when 1/3 of …\nA proposal to freeze an IBC client.\nA proposal to freeze a specific IBC client.\nA parameter change proposal.\nA parameter change proposal describes a change to the app …\nA governance proposal.\nThe specific kind of a proposal.\nThe machine-interpretable body of a proposal.\nA TOML-serializable version of <code>ProposalPayload</code>, meant for …\nA human-readable TOML-serializable version of a proposal.\nA signaling proposal.\nA signaling proposal is merely for coordination; it does …\nThe protobuf type URL for a transaction plan.\nA proposal to unfreeze an IBC client.\nA proposal to unfreeze a specific IBC client.\nAn upgrade proposal.\nAn upgrade plan proposal describes a planned upgrade to …\nA natural-language description of the effect of the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe ID number of the proposal.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the kind of a proposal.\nThe specific kind and attributes of the proposal.\nA short title describing the intent of the proposal.\nThe identifier of the client to freeze.\nThe identifier of the client to unfreeze.\nAn optional commit hash for code that this proposal refers …\nIf <code>halt_chain == true</code>, then the chain will immediately …\nThe transaction plan to be executed at the time the …\nA claim for the initial submission deposit for a proposal.\nCompute the balance contributed to the transaction by this …\nThe amount of the deposit.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe outcome of the proposal.\nThe proposal ID to claim the deposit for.\nUnbonding tokens represent staking tokens that are …\nGet the default display denomination for this delegation …\nGet the base denomination for this delegation token.\nMake a new proposal NFT in the deposit state.\nMake a new proposal NFT in the failed state.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the asset ID for this delegation token.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMake a new proposal NFT in the passed state.\nGet the proposal ID for this proposal token.\nGet the proposal state for this proposal token.\nMake a new proposal NFT in the slashed state.\nMake a new proposal NFT in the unbonding deposit state.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDetermines if the outcome should be refunded (i.e. it was …\nA proposal submission describes the proposal to propose, …\nCompute a commitment to the value contributed to a …\nThe amount deposited for the proposal.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe proposal to propose.\nReturns the <code>Value</code> of the proposal NFT.\nA withdrawal of a proposal.\nCompute a commitment to the value contributed to a …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe proposal ID to withdraw.\nThis is a ratio of two <code>u64</code> values, intended to be used …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAllowed length of validator vote reason field.\nA vote by a validator.\nA public vote as a validator.\nA comment or justification of the vote. Limited to 1 KB.\nThe signature authorizing the vote (signed with governance …\nThe body of the validator vote.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe governance key for the validator who is voting.\nThe identity of the validator who is voting.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe proposal ID to vote on.\nA comment or justification of the vote. Limited to 1 KB.\nThe vote to cast.\nVote to abstain from the proposal.\nVote is to reject the proposal.\nA vote on a proposal.\nVote to approve the proposal.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUnbonding tokens represent staking tokens that are …\nGet the default display denomination for this delegation …\nGet the base denomination for this delegation token.\nReturns the argument unchanged.\nGet the asset ID for this delegation token.\nCalls <code>U::from(self)</code>.\nGet the proposal ID this delegation token is associated …")