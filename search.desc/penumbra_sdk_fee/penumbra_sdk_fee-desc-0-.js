searchState.loadedDescShard("penumbra_sdk_fee", 0, "Represents the different resources that a transaction can …\nExpresses the price of each unit of gas in terms of the …\nUse these gas prices to calculate the fee for a given gas …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAllows payment of transaction fees.\nThis trait provides read access to fee-related parts of …\nThe accumulated base fees and tips for this block, indexed …\nThe accumulated base fees and tips for this block, indexed …\nReturns the argument unchanged.\nReturns true if the gas prices have been changed in this …\nReturns true if the gas prices have been changed in this …\nGets the current gas prices for alternative fee tokens.\nGets the current gas prices for alternative fee tokens.\nGets the fee parameters from the JMT.\nGets the fee parameters from the JMT.\nGets the current gas prices for the fee token.\nGets the current gas prices for the fee token.\nCalls <code>U::from(self)</code>.\nUses the provided <code>fee</code> to pay for <code>gas_used</code>, erroring if the …\nUses the provided <code>fee</code> to pay for <code>gas_used</code>, erroring if the …\nWrites the provided fee parameters to the JMT.\nWrites the provided fee parameters to the JMT.\nTakes the accumulated base fees and tips for this block, …\nTakes the accumulated base fees and tips for this block, …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe initial configuration parameters for the fee component.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")