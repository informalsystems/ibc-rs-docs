searchState.loadedDescShard("penumbra_sdk_custody", 0, "Implementations of custody services responsible for …\nA transaction authorization request submitted to a custody …\nA validator definition authorization request submitted to …\nA validator vote authorization request submitted to a …\nA well-typed wrapper around the GRPC custody protocol that …\nA pre-authorization packet.  This allows a custodian to …\nRequests authorization of the transaction with the given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA basic software key management system that stores keys in …\nThe transaction plan to authorize.\nA set of basic spend authorization policies.\nOptionally, pre-authorization data, if required by the …\nOptionally, pre-authorization data, if required by the …\nOptionally, pre-authorization data, if required by the …\nA basic software key management system that stores keys in …\nThe validator definition to authorize.\nThe transaction plan to authorize.\nThe configuration for the encrypted custody backend.\nRepresents a custody service that uses an encrypted …\nThe actual inner configuration used for an encrypted …\nCreate a config from an inner config, with the actual …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new encrypted config, using the terminal to ask …\nA “null KMS” that has no keys and errors on any …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA set of basic spend authorization policies.\nOnly allow transactions whose outputs are controlled by …\nIntended for relayers, only allows <code>Spend</code>, <code>Output</code>, and …\nA trait for checking whether a transaction plan is allowed …\nRequire specific pre-authorizations for submitted …\nA set of pre-authorization policies.\nChecks whether the proposed transaction plan is allowed by …\nChecks whether the proposed validator definition is …\nChecks whether the proposed validator vote is allowed by …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA list of pre-authorization keys that can be used to …\nThe number of distinct pre-authorizations required to …\nConfiguration data for the <code>SoftKms</code>.\nA basic software key management system that stores keys in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInitialize with the given <code>Config</code>.\nAttempt to authorize the requested <code>TransactionPlan</code>.\nAttempt to authorize the requested validator definition.\nAttempt to authorize the requested validator vote.\nAuthorization data returned in response to some signing …\nA trait abstracting over the kind of terminal interface we …\nA custody backend using threshold signing.\nAuthorization data for a transaction.\nAuthorization signature for a validator definition.\nAuthorization signature for a validator vote.\nBroadcast a message to other users.\nHave a user confirm that they want to sign this …\nA distributed key generation protocol, producing a config …\nPush an explanatory message to the terminal.\nAct as a follower in the signing protocol.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWait for the user to supply a password.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTry to read a typed message from the terminal, retrying …\nTry to read a typed message from the terminal, retrying …\nRead a single line from the terminal.")