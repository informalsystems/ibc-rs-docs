searchState.loadedDescShard("ibc_types_lightclients_tendermint", 0, "ICS 07: Tendermint Client implements a client verification …\nChain ID cannot be empty\nchain-id is (<code>{chain_id}</code>) is too long, got: <code>{len}</code>, max …\nthe client is frozen: frozen_height=<code>{frozen_height}</code> …\ncurrent timestamp minus the latest consensus state …\ndecode error: <code>{0}</code>\nduplicate validator in commit signatures with address <code>{id}</code>\ncan’t map <code>{field}</code> to its wire format: <code>{reason}</code>\nfailed to build Tendermint domain type trust threshold …\ngiven other previous updates, header timestamp should be …\ngiven other previous updates, header timestamp should be …\nthe height is insufficient: latest_height=<code>{latest_height}</code> …\ninsufficient signers overlap between <code>{q1}</code> and <code>{q2}</code>\ninvalid header, failed basic validation: <code>{reason}</code>, error: …\nheader revision height = <code>{height}</code> is invalid\ninvalid client state latest height: <code>{reason}</code>\ninvalid client state max clock drift: <code>{reason}</code>\ninvalid raw client id: <code>{client_id}</code>\ninvalid raw client state: <code>{reason}</code>\ninvalid raw header error: <code>{0}</code>\ninvalid raw misbehaviour: <code>{reason}</code>\ncouldn’t verify validator signature\ninvalid tendermint client state trust threshold error: <code>{0}</code>\ninvalid client state trust threshold: <code>{reason}</code>\nheaders block hashes are equal\nheader chain-id <code>{header_chain_id}</code> does not match the light …\nheaders are not at same height and are monotonically …\ntrusted validators <code>{trusted_validator_set:?}</code>, does not …\nThe given hash of the validators does not matches the …\nthe header’s current/trusted revision number (…\nmissing latest height\nmissing signed header\nmissing trusted height\nmissing trusted validator set\nmissing trusting period\nmissing unbonding period\nmissing validator set\nnegative max clock drift\nnot enough blocks elapsed, current height <code>{current_height}</code> …\nnot enough time elapsed, current timestamp <code>{current_time}</code> …\nnot enough trust because insufficient validators overlap: …\nConstant for a trust threshold of 1/3.\nProcessed height for the client <code>{client_id}</code> at height …\nProcessed time for the client <code>{client_id}</code> at height …\nConstant for a trust threshold of 2/3.\ntimestamp overflowed error: <code>{0}</code>\nDefines the level of trust that a client has towards a set …\ninvalid header, failed basic validation: <code>{reason}</code>\nverification failed: <code>{detail}</code>\nwrong type url for tendermint light client state: <code>{url}</code>\nConstant for a trust threshold of 0/0.\nThe denominator of the fraction underlying this trust …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInstantiate a TrustThreshold with the given denominator and\nThe numerator of the fraction underlying this trust …\nHelper method to produce a <code>Options</code> struct for use in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nreturns a bool indicating if the client is frozen, i.e. if …\nGet the refresh time to ensure the state does not expire\nVerify the time and height delays\nVerify that the client is at a sufficient height and …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTendermint consensus header\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")