searchState.loadedDescShard("ibc_core", 0, "Re-exports data structures and implementations of all the …\nRe-exports ICS-04 implementation from the <code>ibc-core-channel</code> …\nRe-exports ICS-02 implementation from the <code>ibc-core-client</code> …\nRe-exports ICS-23 data structures from the …\nRe-exports ICS-03 implementation from the …\nRe-exports convenient derive macros from <code>ibc-derive</code> crate.\nRe-exports IBC handler entrypoints from the …\nRe-exports ICS-25 implementation from the <code>ibc-core-handler</code> …\nRe-exports ICS-24 implementation from the <code>ibc-core-host</code> …\nRe-exports IBC primitive types from the <code>ibc-primitives</code> …\nRe-exports ICS-26 implementation from the <code>ibc-core-router</code> …\nICS4 (channel) context.\nThis module implements the processing logic for ICS4 …\nRe-exports ICS-04 data structures from the …\nMethods required in send packet execution, to be …\nMethods required in send packet validation, to be …\nReturns the ChannelEnd for the given <code>port_id</code> and <code>chan_id</code>.\nReturns the ConnectionState for the given identifier …\nIbc events\nRetrieve the context that implements all clients’ …\nLogging facility\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSend the given packet, including all necessary validation.\nSend the packet without any validation.\nValidate that sending the given packet would succeed.\nThe version field for a <code>ChannelEnd</code>.\nDefines acknowledgment types used by various IBC messages …\nImplementation of IBC channels, as described in ICS-04.\nTypes and utilities related to packet commitments.\nDefines the main channel, port, and packet error types\nTypes for the IBC events emitted from Tendermint Websocket …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMessage definitions for all ICS4 domain types: channel …\nDefines the packet type\nRe-exports ICS-04 proto types from the <code>ibc-proto</code> crate\nA generic Acknowledgement type that modules may interpret …\nDefines a convenience type for IBC applications to …\nError Acknowledgement e.g. …\nA wrapper type that guards variants of …\nSuccessful Acknowledgement e.g. <code>{&quot;result&quot;:&quot;AQ==&quot;}</code>\nCreates an error acknowledgement status with the given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the acknowledgement status is successful.\nConstructs a new instance of <code>StatusValue</code> if the given …\nCreates a success acknowledgement status with the given …\nOne end of a channel\nA <code>ChannelEnd</code> along with its ID and the port it is bound to\nRepresents the channel ordering\nRepresents the state of a <code>ChannelEnd</code>\nYields the Order as a string\nYields the state as a string\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if this <code>ChannelEnd</code> is in state <code>State::Open</code>.\nReturns if this channel state is <code>Open</code>.\nReturns if the channel with this state has progressed less …\nCreates a new <code>ChannelEnd</code> with performing basic validation …\nHelper function to compare the order of this end with …\nUpdates the ChannelEnd to assume a new State ‘s’.\nChecks if the <code>connection_hops</code> has a length of <code>expected</code>.\nChecks if the counterparty of this channel end matches …\nChecks if the state of this channel end is not closed.\nChecks if the state of this channel end matches the …\nAcknowledgement of commitment to be stored\nPacket commitment\nCompute the commitment for an acknowledgement.\nCompute the commitment for a packet.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\napplication specific error: <code>{description}</code>\nErrors that arise from the ICS04 Channel module\nclient error: {0}\nconnection error: {0}\ndecoding error: {0}\npacket acknowledgment for sequence <code>{0}</code> already exists\nexpired packet timestamp: should be greater than chain …\nhost error: {0}\ninsufficient packet timeout height: should have …\npacket timeout height <code>{timeout_height}</code> &gt; chain height …\ninvalid connection hops length: expected <code>{expected}</code>, …\ninvalid channel state: expected <code>{expected}</code>, actual <code>{actual}</code>\nmismatched counterparty: expected <code>{expected}</code>, actual …\nmismatched packet commitments: expected <code>{expected:?}</code>, …\nmismatched packet sequence: expected <code>{expected}</code>, actual …\nmissing acknowledgment status\nmissing counterparty\nmissing timeout\ntimestamp error: {0}\nunsupported version: expected <code>{expected}</code>, actual <code>{actual}</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA <code>ChannelClosed</code> event is emitted when a channel is closed …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAll channel messages\nMessage definition for packet acknowledgements.\nMessage definition for the second step in the channel …\nMessage definition for the first step in the channel close …\nMessage definition for the third step in the channel open …\nMessage definition for the fourth step in the channel open …\nMessage definition for the first step in the channel open …\nMessage definition for the second step in the channel open …\nMessage definition for the “packet receiving” datagram.\nMessage definition for packet timeout domain type, which …\nMessage definition for packet timeout domain type.\nAll packet messages\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe packet to be received\nProof of packet acknowledgement on the receiving chain\nProof of packet commitment on the sending chain\nHeight at which the commitment proof in this message were …\nHeight at which the commitment proof in this message was …\nThe signer of the message\nChecks if the <code>connection_hops</code> has a length of <code>expected</code>.\nChecks if the <code>connection_hops</code> has a length of <code>expected</code>.\nAllow a relayer to specify a particular version by …\nOnly kept here for proper conversion to/from the raw type\nThe packet type; this is what applications send to one …\nEnumeration of proof carrying ICS4 message, helper for …\nThe packet state type.\nPacket receipt, used over unordered channels.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks whether a packet from a <code>SendPacket</code> event is …\nAcknowledgement is the recommended acknowledgement format …\nChannel defines pipeline for exactly-once packet delivery …\nA channel has been closed and can no longer be used to …\nCounterparty defines a channel end counterparty\nErrorReceipt defines a type which encapsulates the upgrade …\nThe message was executed unsuccessfully\nA channel has just completed flushing any in-flight …\nA channel has just accepted the upgrade handshake attempt …\nGenesisState defines the ibc channel submodule’s genesis …\nIdentifiedChannel defines a channel with additional port …\nA channel has just started the opening handshake.\nMsgAcknowledgement receives incoming IBC acknowledgement\nMsgAcknowledgementResponse defines the Msg/Acknowledgement …\nMsgChannelCloseConfirm defines a msg sent by a Relayer to …\nMsgChannelCloseConfirmResponse defines the …\nMsgChannelCloseInit defines a msg sent by a Relayer to …\nMsgChannelCloseInitResponse defines the …\nMsgChannelOpenAck defines a msg sent by a Relayer to Chain …\nMsgChannelOpenAckResponse defines the Msg/ChannelOpenAck …\nMsgChannelOpenConfirm defines a msg sent by a Relayer to …\nMsgChannelOpenConfirmResponse defines the …\nMsgChannelOpenInit defines an sdk.Msg to initialize a …\nMsgChannelOpenInitResponse defines the Msg/ChannelOpenInit …\nMsgChannelOpenInit defines a msg sent by a Relayer to try …\nMsgChannelOpenTryResponse defines the Msg/ChannelOpenTry …\nMsgChannelUpgradeAck defines the request type for the …\nMsgChannelUpgradeAckResponse defines MsgChannelUpgradeAck …\nMsgChannelUpgradeCancel defines the request type for the …\nMsgChannelUpgradeCancelResponse defines the …\nMsgChannelUpgradeConfirm defines the request type for the …\nMsgChannelUpgradeConfirmResponse defines …\nMsgChannelUpgradeInit defines the request type for the …\nMsgChannelUpgradeInitResponse defines the …\nMsgChannelUpgradeOpen defines the request type for the …\nMsgChannelUpgradeOpenResponse defines the …\nMsgChannelUpgradeTimeout defines the request type for the …\nMsgChannelUpgradeTimeoutRepsonse defines the …\nMsgChannelUpgradeTry defines the request type for the …\nMsgChannelUpgradeTryResponse defines the …\nMsgPruneAcknowledgements defines the request type for the …\nMsgPruneAcknowledgementsResponse defines the response type …\nMsgRecvPacket receives incoming IBC packet\nMsgRecvPacketResponse defines the Msg/RecvPacket response …\nMsgTimeout receives timed-out packet\nMsgTimeoutOnClose timed-out packet upon counterparty …\nMsgTimeoutOnCloseResponse defines the Msg/TimeoutOnClose …\nMsgTimeoutResponse defines the Msg/Timeout response type.\nMsgUpdateParams is the MsgUpdateParams request type.\nMsgUpdateParamsResponse defines the MsgUpdateParams …\nzero-value for channel ordering\nThe message did not call the IBC application callbacks …\nA channel has completed the handshake. Open channels are …\nOrder defines if a channel is ORDERED or UNORDERED\npackets are delivered exactly in the order which they were …\nPacket defines a type that carries data across different …\nPacketId is an identifer for a unique Packet Source chains …\nPacketSequence defines the genesis type necessary to …\nPacketState defines the generic type necessary to retrieve …\nParams defines the set of IBC channel parameters.\nQueryChannelClientStateRequest is the request type for the …\nQueryChannelClientStateResponse is the Response type for …\nQueryChannelConsensusStateRequest is the request type for …\nQueryChannelClientStateResponse is the Response type for …\nQueryChannelParamsRequest is the request type for the …\nQueryChannelParamsResponse is the response type for the …\nQueryChannelRequest is the request type for the …\nQueryChannelResponse is the response type for the …\nQueryChannelsRequest is the request type for the …\nQueryChannelsResponse is the response type for the …\nQueryConnectionChannelsRequest is the request type for the …\nQueryConnectionChannelsResponse is the Response type for …\nQueryNextSequenceReceiveRequest is the request type for the\nQuerySequenceResponse is the response type for the …\nQueryNextSequenceSendRequest is the request type for the …\nQueryNextSequenceSendResponse is the request type for the …\nQueryPacketAcknowledgementRequest is the request type for …\nQueryPacketAcknowledgementResponse defines the client …\nQueryPacketAcknowledgementsRequest is the request type for …\nQueryPacketAcknowledgemetsResponse is the request type for …\nQueryPacketCommitmentRequest is the request type for the …\nQueryPacketCommitmentResponse defines the client query …\nQueryPacketCommitmentsRequest is the request type for the …\nQueryPacketCommitmentsResponse is the request type for the …\nQueryPacketReceiptRequest is the request type for the …\nQueryPacketReceiptResponse defines the client query …\nQueryUnreceivedAcks is the request type for the …\nQueryUnreceivedAcksResponse is the response type for the …\nQueryUnreceivedPacketsRequest is the request type for the …\nQueryUnreceivedPacketsResponse is the response type for the\nQueryUpgradeErrorRequest is the request type for the …\nQueryUpgradeErrorResponse is the response type for the …\nQueryUpgradeRequest is the request type for the …\nQueryUpgradeResponse is the response type for the …\nResponseResultType defines the possible outcomes of the …\nState defines if a channel is in one of the following …\nThe message was executed successfully\nTimeout defines an execution deadline structure for …\nA channel has acknowledged the handshake step on the …\nDefault State\npackets can be delivered in any order, which may differ …\nDefault zero value enumeration\nUpgrade is a verifiable type which contains the relevant …\nUpgradeFields are the fields in a channel end which may be …\nNested message and enum types in <code>Acknowledgement</code>.\npacket associated with the request fields\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nauthority is the address that controls the module …\nNOTE: the version field within the channel has been …\nchannel associated with the request identifiers\nchannel identifier\nchannel end on the counterparty chain\nchannel unique identifier.\nchannel unique identifier\nchannel unique identifier\nchannel unique identifier\nchannel unique identifier\nchannel unique identifier\nchannel unique identifier\nchannel unique identifier\nchannel unique identifier\nchannel unique identifier\nchannel unique identifier\nchannel unique identifier\nchannel unique identifier\nchannel unique identifier\nlist of stored channels of the chain.\nlist of channels associated with a connection.\nclient ID associated with the consensus state\npacket associated with the request fields\nconnection unique identifier\nlist of connection identifiers, in order, along which …\nlist of connection identifiers, in order, along which …\nconsensus state associated with the channel\ncounterparty channel end\ncounterparty channel end\nReturns the enum value of <code>counterparty_channel_state</code>, or …\nReturns the enum value of <code>counterparty_channel_state</code>, or …\nactual opaque bytes transferred directly to the …\nembedded data that represents packet state.\nidentifies the channel end on the receiving chain.\nidentifies the port on the receiving chain.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>State</code>, or <code>None</code> if <code>value</code> is not a …\nConverts an <code>i32</code> to a <code>Order</code>, or <code>None</code> if <code>value</code> is not a …\nConverts an <code>i32</code> to a <code>ResponseResultType</code>, or <code>None</code> if <code>value</code> …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nblock height after which the packet or upgrade times out\nquery block height\nquery block height\nquery block height\nquery block height\nquery block height\nquery block height\nclient state associated with the channel\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>State</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Order</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>ResponseResultType</code>.\nthe error message detailing the cause of failure\nGenerated client implementations.\nGenerated server implementations.\nthe sequence for the next generated channel identifier\nnext sequence receive number\nnext sequence send number\nReturns the enum value of <code>ordering</code>, or the default if the …\nReturns the enum value of <code>ordering</code>, or the default if the …\nReturns the enum value of <code>ordering</code>, or the default if the …\nwhether the channel is ordered or unordered\nwhether the channel is ordered or unordered\nlist of acknowledgement sequences\nlist of packet sequences\nlist of packet sequences\npagination request\npagination response\npagination request\npagination response\npagination request\npagination response\npagination request\npagination response\nparams defines the channel parameters to update.\nparams defines the parameters of the module.\nport identifier\nport on the counterparty chain which owns the other end of …\nchannel port identifier.\nchannel port identifier\nport unique identifier\nport unique identifier\nport unique identifier\nport unique identifier\nport unique identifier\nport unique identifier\nport unique identifier\nport unique identifier\nport unique identifier\nport unique identifier\nport unique identifier\nport unique identifier\nDeprecated: this field is unused. Crossing hello’s are …\nmerkle proof of existence\nmerkle proof of existence\nmerkle proof of existence\nmerkle proof of existence\nmerkle proof of existence\nmerkle proof of existence\nmerkle proof of existence\nmerkle proof of existence\nmerkle proof of existence\nmerkle proof of existence\nheight at which the proof was retrieved\nheight at which the proof was retrieved\nheight at which the proof was retrieved\nheight at which the proof was retrieved\nheight at which the proof was retrieved\nheight at which the proof was retrieved\nheight at which the proof was retrieved\nheight at which the proof was retrieved\nheight at which the proof was retrieved\nheight at which the proof was retrieved\nGenerated client implementations.\nGenerated server implementations.\nsuccess flag for if receipt exists\nresponse contains either a result or an error and must be …\nReturns the enum value of <code>result</code>, or the default if the …\nReturns the enum value of <code>result</code>, or the default if the …\nReturns the enum value of <code>result</code>, or the default if the …\nReturns the enum value of <code>result</code>, or the default if the …\nReturns the enum value of <code>result</code>, or the default if the …\nReturns the enum value of <code>result</code>, or the default if the …\nReturns the enum value of <code>result</code>, or the default if the …\nrevision height of the consensus state\nrevision number of the consensus state\nnumber corresponds to the order of sends and receives, …\npacket sequence.\npacket sequence\nthe channel upgrade sequence\npacket sequence\npacket sequence\npacket sequence\nlist of unreceived packet sequences\nlist of unreceived acknowledgement sequences\nSets <code>counterparty_channel_state</code> to the provided enum value.\nSets <code>counterparty_channel_state</code> to the provided enum value.\nSets <code>ordering</code> to the provided enum value.\nSets <code>ordering</code> to the provided enum value.\nSets <code>ordering</code> to the provided enum value.\nSets <code>result</code> to the provided enum value.\nSets <code>result</code> to the provided enum value.\nSets <code>result</code> to the provided enum value.\nSets <code>result</code> to the provided enum value.\nSets <code>result</code> to the provided enum value.\nSets <code>result</code> to the provided enum value.\nSets <code>result</code> to the provided enum value.\nSets <code>state</code> to the provided enum value.\nSets <code>state</code> to the provided enum value.\nidentifies the channel end on the sending chain.\nidentifies the port on the sending chain.\nReturns the enum value of <code>state</code>, or the default if the …\nReturns the enum value of <code>state</code>, or the default if the …\ncurrent state of the channel end\ncurrent state of the channel end\nblock height after which the packet times out\nblock timestamp (in nanoseconds) after which the packet …\nblock timestamp (in nanoseconds) after which the packet or …\nNumber of sequences pruned (includes both packet …\nNumber of sequences left after pruning.\nupgrade sequence indicates the latest upgrade attempt …\nupgrade sequence indicates the latest upgrade attempt …\nthe relative timeout after which channel upgrades will …\nopaque channel version, which is agreed upon during the …\nopaque channel version, which is agreed upon during the …\nresponse contains either a result or an error and must be …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nMsg defines the ibc/channel Msg service.\nEnable decompressing responses.\nAcknowledgement defines a rpc handler method for …\nChannelCloseConfirm defines a rpc handler method for …\nChannelCloseInit defines a rpc handler method for …\nChannelOpenAck defines a rpc handler method for …\nChannelOpenConfirm defines a rpc handler method for …\nChannelOpenInit defines a rpc handler method for …\nChannelOpenTry defines a rpc handler method for …\nChannelUpgradeAck defines a rpc handler method for …\nChannelUpgradeCancel defines a rpc handler method for …\nChannelUpgradeConfirm defines a rpc handler method for …\nChannelUpgradeInit defines a rpc handler method for …\nChannelUpgradeOpen defines a rpc handler method for …\nChannelUpgradeTimeout defines a rpc handler method for …\nChannelUpgradeTry defines a rpc handler method for …\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nPruneAcknowledgements defines a rpc handler method for …\nRecvPacket defines a rpc handler method for MsgRecvPacket.\nCompress requests with the given encoding.\nTimeout defines a rpc handler method for MsgTimeout.\nTimeoutOnClose defines a rpc handler method for …\nUpdateChannelParams defines a rpc handler method for …\nGenerated trait containing gRPC methods that should be …\nMsg defines the ibc/channel Msg service.\nEnable decompressing requests with the given encoding.\nAcknowledgement defines a rpc handler method for …\nChannelCloseConfirm defines a rpc handler method for …\nChannelCloseInit defines a rpc handler method for …\nChannelOpenAck defines a rpc handler method for …\nChannelOpenConfirm defines a rpc handler method for …\nChannelOpenInit defines a rpc handler method for …\nChannelOpenTry defines a rpc handler method for …\nChannelUpgradeAck defines a rpc handler method for …\nChannelUpgradeCancel defines a rpc handler method for …\nChannelUpgradeConfirm defines a rpc handler method for …\nChannelUpgradeInit defines a rpc handler method for …\nChannelUpgradeOpen defines a rpc handler method for …\nChannelUpgradeTimeout defines a rpc handler method for …\nChannelUpgradeTry defines a rpc handler method for …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nPruneAcknowledgements defines a rpc handler method for …\nRecvPacket defines a rpc handler method for MsgRecvPacket.\nCompress responses with the given encoding, if the client …\nTimeout defines a rpc handler method for MsgTimeout.\nTimeoutOnClose defines a rpc handler method for …\nUpdateChannelParams defines a rpc handler method for …\nQuery provides defines the gRPC querier service\nEnable decompressing responses.\nChannel queries an IBC Channel.\nChannelClientState queries for the client state for the …\nChannelConsensusState queries for the consensus state for …\nChannelParams queries all parameters of the ibc channel …\nChannels queries all the IBC channels of a chain.\nAttempt to create a new client by connecting to a given …\nConnectionChannels queries all the channels associated …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nNextSequenceReceive returns the next receive sequence for …\nNextSequenceSend returns the next send sequence for a …\nPacketAcknowledgement queries a stored packet …\nPacketAcknowledgements returns all the packet …\nPacketCommitment queries a stored packet commitment hash.\nPacketCommitments returns all the packet commitments …\nPacketReceipt queries if a given packet sequence has been …\nCompress requests with the given encoding.\nUnreceivedAcks returns all the unreceived IBC …\nUnreceivedPackets returns all the unreceived IBC packets …\nUpgrade returns the upgrade for a given port and channel …\nUpgradeError returns the error receipt if the upgrade …\nGenerated trait containing gRPC methods that should be …\nQuery provides defines the gRPC querier service\nEnable decompressing requests with the given encoding.\nChannel queries an IBC Channel.\nChannelClientState queries for the client state for the …\nChannelConsensusState queries for the consensus state for …\nChannelParams queries all parameters of the ibc channel …\nChannels queries all the IBC channels of a chain.\nConnectionChannels queries all the channels associated …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nNextSequenceReceive returns the next receive sequence for …\nNextSequenceSend returns the next send sequence for a …\nPacketAcknowledgement queries a stored packet …\nPacketAcknowledgements returns all the packet …\nPacketCommitment queries a stored packet commitment hash.\nPacketCommitments returns all the packet commitments …\nPacketReceipt queries if a given packet sequence has been …\nCompress responses with the given encoding, if the client …\nUnreceivedAcks returns all the unreceived IBC …\nUnreceivedPackets returns all the unreceived IBC packets …\nUpgrade returns the upgrade for a given port and channel …\nUpgradeError returns the error receipt if the upgrade …\nIndicates a consensus height on the destination chain …\nIndicates a timestamp on the destination chain after which …\nRevision height to be used in packet commitment computation\nRevision number to be used in packet commitment computation\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new timeout timestamp from a given nanosecond …\nCheck if a height is <em>strictly past</em> the timeout height, and …\nCheck if a timestamp is <em>strictly past</em> the timeout …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns if the timeout height is set.\nReturns <code>true</code> if the timeout timestamp is set.\nReturns the timestamp in nanoseconds, where 0 indicates …\nReturns a timeout timestamp that never expires.\nReturns a string formatted for an ABCI event attribute …\nRe-exports ICS-02 traits from <code>ibc-core-client-context</code> for …\nThis module implements the processing logic for ICS2 …\nRe-exports ICS-02 data structures from the …\nDefines the methods that all client <code>ExecutionContext</code>s …\nDefines the methods available to clients for validating …\nGeneral-purpose helper converter enabling <code>TryFrom</code> and <code>Into</code> …\nAn optional trait that extends the client context required …\nAn optional trait that extends the client validation …\nDefines <code>ClientState</code>, the core type to be implemented by …\nReturns the ClientState for the given identifier <code>client_id</code>.\nReturns the timestamp and height of the host when it …\nDefines the trait to be implemented by all concrete …\nRetrieve the consensus state for the given client ID at …\nReturns all the heights at which a consensus state is …\nDelete the consensus state from the store located at the …\nDelete the update time and height associated with the …\nReturns the current height of the local chain.\nReturns the current timestamp of the local chain.\nSearch for the lowest consensus state higher than <code>height</code>.\nTrait preludes for the ICS-02 client implementation.\nSearch for the highest consensus state lower than <code>height</code>.\nCalled upon successful client creation and update\nCalled upon successful client creation and update\nCalled upon successful client update.\nPrimary client trait. Defines all the methods that clients …\n<code>ClientState</code> methods needed in both validation and …\n<code>ClientState</code> methods which require access to the client’s …\n<code>ClientState</code> methods which require access to the client’s …\nChecks for evidence of a misbehaviour in Header or …\nVerifies whether the calling (subject) client state …\nType of client associated with this state (eg. Tendermint)\nInitialises the client with the initial client and …\nThe latest height the client was updated to\nSerializes a given path object into a raw path bytes.\nReturns the status of the client. Only Active clients are …\nUpdate the subject client using the <code>substitute_client_state</code>…\nUpdates and stores as necessary any associated information …\nupdate_state_on_misbehaviour should perform appropriate …\nUpdate the client state and consensus state in the store …\nValidate that the client is at a sufficient height\nverify_client_message must verify a client_message. A …\nPerforms basic validation on the <code>consensus_state</code>.\nVerifies a proof of the existence of a value at a given …\nVerifies a proof of the existence of a value at a given …\nVerifies the absence of a given proof at a given path …\nVerifies the absence of a given proof at a given raw path …\nVerify the upgraded client and consensus states and …\nDefines methods that all <code>ConsensusState</code>s should provide.\nCommitment root of the consensus state, which is used for …\nThe timestamp of the consensus state\nDefines the methods that all client <code>ExecutionContext</code>s …\nPrimary client trait. Defines all the methods that clients …\n<code>ClientState</code> methods needed in both validation and …\n<code>ClientState</code> methods which require access to the client’s …\n<code>ClientState</code> methods which require access to the client’s …\nDefines the methods available to clients for validating …\nDefines methods that all <code>ConsensusState</code>s should provide.\nGeneral-purpose helper converter enabling <code>TryFrom</code> and <code>Into</code> …\nAn optional trait that extends the client context required …\nAn optional trait that extends the client validation …\nChecks for evidence of a misbehaviour in Header or …\nVerifies whether the calling (subject) client state …\nReturns the ClientState for the given identifier <code>client_id</code>.\nType of client associated with this state (eg. Tendermint)\nReturns the timestamp and height of the host when it …\nRetrieve the consensus state for the given client ID at …\nReturns all the heights at which a consensus state is …\nDelete the consensus state from the store located at the …\nDelete the update time and height associated with the …\nReturns the current height of the local chain.\nReturns the current timestamp of the local chain.\nInitialises the client with the initial client and …\nThe latest height the client was updated to\nSearch for the lowest consensus state higher than <code>height</code>.\nSearch for the highest consensus state lower than <code>height</code>.\nCommitment root of the consensus state, which is used for …\nSerializes a given path object into a raw path bytes.\nReturns the status of the client. Only Active clients are …\nCalled upon successful client creation and update\nCalled upon successful client creation and update\nCalled upon successful client update.\nThe timestamp of the consensus state\nUpdate the subject client using the <code>substitute_client_state</code>…\nUpdates and stores as necessary any associated information …\nupdate_state_on_misbehaviour should perform appropriate …\nUpdate the client state and consensus state in the store …\nValidate that the client is at a sufficient height\nverify_client_message must verify a client_message. A …\nPerforms basic validation on the <code>consensus_state</code>.\nVerifies a proof of the existence of a value at a given …\nVerifies a proof of the existence of a value at a given …\nVerifies the absence of a given proof at a given path …\nVerifies the absence of a given proof at a given raw path …\nVerify the upgraded client and consensus states and …\nThe client is active and allowed to be used\nThe client is expired and not allowed to be used\nThe client is frozen and not allowed to be used\nThe core IBC height type, which represents the height of a …\nRepresents the status of a client\nthis is the scenario where misbehaviour is submitted to …\nUnauthorized indicates that the client type is not …\nthis is the typical scenario where a new header is …\n<code>UpdateKind</code> represents the 2 ways that a client can be …\nDefines the client error type\nTypes for the IBC events emitted from Tendermint Websocket …\nDefines the client message types that are sent to the …\nRe-exports ICS-02 proto types from the <code>ibc-proto</code> crate for …\nEncodes all the possible client errors\nclient-specific error: {description}\ndecoding error: {0}\ndecoding error: <code>{0}</code>\nduplicate client state <code>{0}</code>\nfailed ICS23 verification: {0}\nfailed to handle misbehaviour: {description}\nfailed to verify client recovery states\nfailed to verify header: {description}\nhost error : {0}\nhost chain error: <code>{0}</code>\ninsufficient proof height; expected <code>{actual}</code> &gt;= <code>{expected}</code>\ninsufficient upgrade client height <code>{upgraded_height}</code>; must …\ninvalid client recovery heights: expected substitute …\ninvalid client state type <code>{0}</code>\ninvalid consensus state timestamp <code>{0}</code>\ninvalid header type <code>{0}</code>\ninvalid height; cannot be zero or negative\ninvalid status <code>{0}</code>\ninvalid trust threshold <code>{numerator}</code>/<code>{denominator}</code>\ninvalid update client message\ninvalid proof for the upgraded client state: <code>{0}</code>\ninvalid proof for the upgraded consensus state: <code>{0}</code>\ninvalid upgrade path: <code>{description}</code>\ninvalid upgrade proposal: <code>{description}</code>\nmissing local consensus state at <code>{0}</code>\nmissing upgrade path\ntimestamp error: {0}\nupgrade client error: {0}\nEncodes all the possible upgrade client errors\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe content of the <code>key</code> field for the attribute containing …\nThe content of the <code>key</code> field for the attribute containing …\nThe content of the <code>key</code> field for the attribute containing …\nThe content of the <code>key</code> field for the attribute containing …\nClient event types\nClientMisbehaviour event signals the update of an on-chain …\nCreateClient event signals the creation of a new on-chain …\nThe content of the <code>key</code> field for the header in update …\nUpdateClient event signals a recent update of an on-chain …\nSignals a recent upgrade of an on-chain client (IBC …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructs a new UpdateClient event.\nEncodes all the different client messages\nA type of message that triggers the creation of a new …\nDefines the message used to recover a frozen or expired …\nA type of message that submits client misbehaviour proof.\nRepresents the message that triggers the update of an …\nA type of message that triggers the upgrade of an on-chain …\nclient unique identifier\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nmisbehaviour, used for freezing the light client\nsigner address\nThe address of the signer who serves as the authority for …\nClient identifier of the client to be updated if the …\nClient identifier of the client that will replace the …\nClientConsensusStates defines all the stored consensus …\nClientUpdateProposal is a legacy governance proposal. If …\nConsensusStateWithHeight defines a consensus state with an …\nGenesisMetadata defines the genesis type for metadata that …\nGenesisState defines the ibc client submodule’s genesis …\nHeight is a monotonically increasing data type that can be …\nIdentifiedClientState defines a client state with an …\nIdentifiedGenesisMetadata has the client metadata with the …\nMsgCreateClient defines a message to create an IBC client\nMsgCreateClientResponse defines the Msg/CreateClient …\nMsgIBCSoftwareUpgrade defines the message used to schedule …\nMsgIBCSoftwareUpgradeResponse defines the …\nMsgRecoverClient defines the message used to recover a …\nMsgRecoverClientResponse defines the Msg/RecoverClient …\nMsgSubmitMisbehaviour defines an sdk.Msg type that submits …\nMsgSubmitMisbehaviourResponse defines the …\nMsgUpdateClient defines an sdk.Msg to update a IBC client …\nMsgUpdateClientResponse defines the Msg/UpdateClient …\nMsgUpdateParams defines the sdk.Msg type to update the …\nMsgUpdateParamsResponse defines the MsgUpdateParams …\nMsgUpgradeClient defines an sdk.Msg to upgrade an IBC …\nMsgUpgradeClientResponse defines the Msg/UpgradeClient …\nParams defines the set of IBC light client parameters.\nQueryClientParamsRequest is the request type for the …\nQueryClientParamsResponse is the response type for the …\nQueryClientStateRequest is the request type for the …\nQueryClientStateResponse is the response type for the …\nQueryClientStatesRequest is the request type for the …\nQueryClientStatesResponse is the response type for the …\nQueryClientStatusRequest is the request type for the …\nQueryClientStatusResponse is the response type for the …\nQueryConsensusStateHeightsRequest is the request type for …\nQueryConsensusStateHeightsResponse is the response type …\nQueryConsensusStateRequest is the request type for the …\nQueryConsensusStateResponse is the response type for the …\nQueryConsensusStatesRequest is the request type for the …\nQueryConsensusStatesResponse is the response type for the …\nQueryUpgradedClientStateRequest is the request type for the\nQueryUpgradedClientStateResponse is the response type for …\nQueryUpgradedConsensusStateRequest is the request type for …\nQueryUpgradedConsensusStateResponse is the response type …\nUpgradeProposal is a gov Content type for initiating an …\nallowed_clients defines the list of allowed client state …\nclient identifier\nclient identifier\nclient unique identifier\nclient unique identifier\nclient unique identifier\nclient state unique identifier\nclient identifier\nclient identifier\nclient identifier\nclient unique identifier\nclient message to update the light client\nclient state\nlight client state\nupgraded client state\nclient state associated with the request identifier\nlist of stored ClientStates of the chain.\nclient states with their corresponding identifiers\nconsensus states from each client\nmetadata from each client\nconsensus state\nconsensus state associated with the client that …\nupgraded consensus state, only contains enough information …\nconsensus state associated with the client identifier at …\nconsensus state heights\nconsensus states and their heights associated with the …\nconsensus states associated with the identifier\nDeprecated: create_localhost has been deprecated. The …\nthe description of the proposal\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nconsensus state height\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nstore key of metadata without clientID-prefix\nlatest_height overrrides the height field and queries the …\nmisbehaviour used for freezing the light client\nGenerated client implementations.\nGenerated server implementations.\nthe sequence for the next generated client identifier\npagination request\npagination response\npagination request\npagination response\npagination request\npagination response\nparams defines the client parameters to update.\nparams defines the parameters of the module.\nmerkle proof of existence\nmerkle proof of existence\nheight at which the proof was retrieved\nheight at which the proof was retrieved\nproof that old chain committed to new client\nproof that old chain committed to new consensus state\nGenerated client implementations.\nGenerated server implementations.\nthe height within the given revision\nconsensus state revision height\nthe revision that the client is currently on\nconsensus state revision number\nsigner address\nsigner address\nsigner address\nsigner address\nsigner address\nsigner address\nsigner address\nthe client identifier for the client to be updated if the …\nthe client identifier for the client to be updated if the …\nthe substitute client identifier for the client standing …\nthe substitute client identifier for the client which will …\nthe title of the update proposal\nAn UpgradedClientState must be provided to perform an IBC …\nAn UpgradedClientState must be provided to perform an IBC …\nclient state associated with the request identifier\nConsensus state associated with the request identifier\nmetadata value\nMsg defines the ibc/client Msg service.\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nCreateClient defines a rpc handler method for …\nReturns the argument unchanged.\nIBCSoftwareUpgrade defines a rpc handler method for …\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nRecoverClient defines a rpc handler method for …\nCompress requests with the given encoding.\nSubmitMisbehaviour defines a rpc handler method for …\nUpdateClient defines a rpc handler method for …\nUpdateClientParams defines a rpc handler method for …\nUpgradeClient defines a rpc handler method for …\nGenerated trait containing gRPC methods that should be …\nMsg defines the ibc/client Msg service.\nEnable decompressing requests with the given encoding.\nCreateClient defines a rpc handler method for …\nReturns the argument unchanged.\nIBCSoftwareUpgrade defines a rpc handler method for …\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nRecoverClient defines a rpc handler method for …\nCompress responses with the given encoding, if the client …\nSubmitMisbehaviour defines a rpc handler method for …\nUpdateClient defines a rpc handler method for …\nUpdateClientParams defines a rpc handler method for …\nUpgradeClient defines a rpc handler method for …\nQuery provides defines the gRPC querier service\nEnable decompressing responses.\nClientParams queries all parameters of the ibc client …\nClientState queries an IBC light client.\nClientStates queries all the IBC light clients of a chain.\nStatus queries the status of an IBC client.\nAttempt to create a new client by connecting to a given …\nConsensusState queries a consensus state associated with a …\nConsensusStateHeights queries the height of every …\nConsensusStates queries all the consensus state associated …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nUpgradedClientState queries an Upgraded IBC light client.\nUpgradedConsensusState queries an Upgraded IBC consensus …\nGenerated trait containing gRPC methods that should be …\nQuery provides defines the gRPC querier service\nEnable decompressing requests with the given encoding.\nClientParams queries all parameters of the ibc client …\nClientState queries an IBC light client.\nClientStates queries all the IBC light clients of a chain.\nStatus queries the status of an IBC client.\nConsensusState queries a consensus state associated with a …\nConsensusStateHeights queries the height of every …\nConsensusStates queries all the consensus state associated …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress responses with the given encoding, if the client …\nUpgradedClientState queries an Upgraded IBC light client.\nUpgradedConsensusState queries an Upgraded IBC consensus …\nProtocol logic specific to processing ICS2 messages of …\nProtocol logic for processing ICS02 messages of type …\nProtocol logic specific to processing ICS2 messages of …\nProtocol logic specific to processing ICS2 messages of …\nExecutes the steps needed to recover the subject client, …\nPerforms the validation steps associated with the client …\nThe client is active and allowed to be used\nThe client is expired and not allowed to be used\nThe client is frozen and not allowed to be used\nThe core IBC height type, which represents the height of a …\nRepresents the status of a client\nthis is the scenario where misbehaviour is submitted to …\nUnauthorized indicates that the client type is not …\nthis is the typical scenario where a new header is …\n<code>UpdateKind</code> represents the 2 ways that a client can be …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks whether the status is active; returns <code>Err</code> if not.\nChecks whether the client is either frozen or expired; …\nDefines core commitment types\nDefines the commitment error type\nMerkle proof utilities\nRe-exports ICS-23 proto types from the <code>ibc-proto</code> crate, …\nDefines proof specs, which encode the structure of proofs\nDefines a store prefix of the commitment proof.\nDemonstrates membership or non-membership for an element …\nEncodes a commitment root; most often a Merkle tree root …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ndecoding error: {0}\nfailed to verify membership\ninvalid merkle proof\ninvalid range [<code>{min}</code>, <code>{max}</code>]\nmismatched number of proofs: expected <code>{expected}</code>, actual …\nmissing commitment prefix\nmissing commitment root\nmissing merkle proof\nmissing merkle root\nmissing proof specs\nmissing verified value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA wrapper type representing a Merkle path, consisting of a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructs a new <code>MerklePath</code> from a given <code>Vec&lt;PathBytes&gt;</code>.\nUse BatchEntry not CommitmentProof, to avoid recursion\nBatchProof is a group of multiple proof types than can be …\nripemd160(sha256(x))\nCommitmentProof is either an ExistenceProof or a …\nUse BatchEntry not CommitmentProof, to avoid recursion\nContains the error value\nExistenceProof takes a key and a value and a set of steps …\nFIXED32_BIG uses big-endian encoding of the length as a 32 …\nFIXED32_LITTLE uses little-endian encoding of the length …\nFIXED64_BIG uses big-endian encoding of the length as a 64 …\nFIXED64_LITTLE uses little-endian encoding of the length …\nIf this is to be executed in a blockchain context, then we …\nInnerOp represents a merkle-proof step that is not a leaf. …\nInnerSpec contains all store-specific structure info to …\nLeafOp represents the raw key-value data we wish to prove, …\nLengthOp defines how to process the key and value of the …\nNO_HASH is the default if no data passed. Note this is an …\nNO_PREFIX don’t include any length info\nNonExistenceProof takes a proof of two neighbors, one left …\nContains the success value\nProofSpec defines what the expected parameters are for a …\nREQUIRE_32_BYTES is like NONE, but will fail if the input …\nREQUIRE_64_BYTES is like NONE, but will fail if the input …\nVAR_PROTO uses protobuf (and go-amino) varint encoding of …\nVAR_RLP uses rlp int encoding of the length\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nNested message and enum types in <code>BatchEntry</code>.\nBLAKE2b-512 hash function.\nBLAKE2s-256 hash function.\nBLAKE3 hash function.\nChild order is the ordering of the children node, must …\nNested message and enum types in <code>CommitmentProof</code>.\nNested message and enum types in <code>CompressedBatchEntry</code>.\nempty child is the prehash image that is used when one …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>HashOp</code>, or <code>None</code> if <code>value</code> is not a …\nConverts an <code>i32</code> to a <code>LengthOp</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nReturns the enum value of <code>hash</code>, or the default if the …\nReturns the enum value of <code>hash</code>, or the default if the …\nReturns the enum value of <code>hash</code>, or the default if the …\nhash is the algorithm that must be used for each InnerOp\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>HashOp</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>LengthOp</code>.\nThe Keccak-256 hash function.\nTODO: remove this as unnecessary??? we prove a range\nTODO: remove this as unnecessary??? we prove a range\nany field in the ExistenceProof must be the same as in …\nReturns the enum value of <code>length</code>, or the default if the …\nmax_depth (if &gt; 0) is the maximum number of InnerOps …\nmin_depth (if &gt; 0) is the minimum number of InnerOps …\nthese are indexes into the lookup_inners table in …\nprefix is a fixed bytes that may optionally be included at …\nReturns the enum value of <code>prehash_key</code>, or the default if …\nprehash_key_before_comparison is a flag that indicates …\nReturns the enum value of <code>prehash_value</code>, or the default if …\nThe Ripemd160 hash function.\nSets <code>hash</code> to the provided enum value.\nSets <code>hash</code> to the provided enum value.\nSets <code>hash</code> to the provided enum value.\nSets <code>length</code> to the provided enum value.\nSets <code>prehash_key</code> to the provided enum value.\nSets <code>prehash_value</code> to the provided enum value.\nThe SHA-256 hash algorithm\nThe SHA-512 hash algorithm\nThe SHA-512 hash algorithm with its output truncated to …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nMerklePath is the path used to verify commitment proofs, …\nMerklePrefix is merkle path prefixed to the key. The …\nMerkleProof is a wrapper type over a chain of …\nMerkleRoot defines a merkle root hash. In the Cosmos SDK, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn array of proof specifications.\nReturns the specification for Cosmos-SDK proofs\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRe-exports ICS-03 data structures from the …\nProtocol logic specific to processing ICS3 messages of …\nProtocol logic specific to processing ICS3 messages of …\nProtocol logic specific to ICS3 messages of type …\nProtocol logic specific to processing ICS3 messages of …\nYields the State as a string.\nGetter for the client id on the local party of this …\nGetter for the client id.\nHelper function to compare the client id of this end with …\nGetter for connection id.\nGetter for the counterparty.\nHelper function to compare the counterparty of this end …\nGetter for the delay_period field. This represents the …\nDefines the connection error type\nTypes for the IBC events emitted from Tendermint Websocket …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nParses the State out from an i32.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHelper function to determine whether the connection is …\nReturns if this connection state is <code>Open</code>.\nHelper function to determine whether the connection is …\nReturns if this connection with this state has progressed …\nMessage definitions for the connection handshake datagrams.\nRe-exports ICS-03 proto types from the <code>ibc-proto</code> crate for …\nSetter for the <code>counterparty</code> field.\nSetter for the <code>state</code> field.\nSetter for the <code>version</code> field.\nGetter for the state of this connection end.\nChecks if the state of this connection end matches with an …\nDefines connection versioning type and functions\nGetter for the list of versions in this connection end.\nclient error: {0}\ndecoding error: {0}\nhost error: {0}\ninsufficient blocks elapsed: current height …\ninsufficient consensus height <code>{current_height}</code> for host …\ninsufficient time elapsed: current timestamp …\ninvalid counterparty\ninvalid connection state: {description}\nmismatched connection states: expected <code>{expected}</code>, actual …\nmissing common version\nmissing counterparty\nmissing supported features\ntimestamp error: {0}\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe content of the <code>key</code> field for the attribute containing …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPer our convention, this event is generated on chain A.\nPer our convention, this event is generated on chain B.\nPer our convention, this event is generated on chain A.\nPer our convention, this event is generated on chain B.\nEnumeration of all possible messages that the ICS3 …\nPer our convention, this message is sent to chain A. The …\nPer our convention, this message is sent to chain B. The …\nPer our convention, this message is sent to chain A. The …\nPer our convention, this message is sent to chain B. The …\nClientId on chain A that the connection is being opened for\nClientId on B that the connection is being opened for\nClientState of client tracking chain A on chain B\nClientState of client tracking chain B on chain A\nConnectionId that chain A has chosen for its ConnectionEnd\nConnectionId that chain B has chosen for its ConnectionEnd\nConnectionId that chain B has chosen for its ConnectionEnd\nheight of latest header of chain A that updated the client …\nheight of latest header of chain A that updated the client …\nClientId, ConnectionId and prefix of chain A\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOnly kept here for proper conversion to/from the raw type\nproof of ClientState tracking chain A on chain B\nproof that chain A has stored ClientState of chain B on …\nproof of ConnectionEnd stored on Chain A during …\nproof of ConnectionEnd stored on Chain A during …\nproof of ConnectionEnd stored on Chain B during ConnOpenTry\noptional proof of host state machines (chain A) that are …\nproof that chain B has stored ConsensusState of chain A on …\noptional proof of host state machines (chain B) that are …\nproof that chain A has stored ConsensusState of chain B on …\nHeight at which <code>proof_conn_end_on_a</code> in this message was …\nHeight at which all proofs in this message were taken\nHeight at which all proofs in this message were taken\nVersions supported by chain A\nClientPaths define all the connection paths for a client …\nConnectionEnd defines a stateful object on a chain …\nConnectionPaths define all the connection paths for a …\nCounterparty defines the counterparty chain associated …\nGenesisState defines the ibc connection submodule’s …\nIdentifiedConnection defines a connection with additional …\nA connection end has just started the opening handshake.\nMsgConnectionOpenAck defines a msg sent by a Relayer to …\nMsgConnectionOpenAckResponse defines the …\nMsgConnectionOpenConfirm defines a msg sent by a Relayer …\nMsgConnectionOpenConfirmResponse defines the …\nMsgConnectionOpenInit defines the msg sent by an account …\nMsgConnectionOpenInitResponse defines the …\nMsgConnectionOpenTry defines a msg sent by a Relayer to …\nMsgConnectionOpenTryResponse defines the …\nMsgUpdateParams defines the sdk.Msg type to update the …\nMsgUpdateParamsResponse defines the MsgUpdateParams …\nA connection end has completed the handshake.\nParams defines the set of Connection parameters.\nQueryClientConnectionsRequest is the request type for the …\nQueryClientConnectionsResponse is the response type for the\nQueryConnectionClientStateRequest is the request type for …\nQueryConnectionClientStateResponse is the response type …\nQueryConnectionConsensusStateRequest is the request type …\nQueryConnectionConsensusStateResponse is the response type …\nQueryConnectionParamsRequest is the request type for the …\nQueryConnectionParamsResponse is the response type for the …\nQueryConnectionRequest is the request type for the …\nQueryConnectionResponse is the response type for the …\nQueryConnectionsRequest is the request type for the …\nQueryConnectionsResponse is the response type for the …\nState defines if a connection is in one of the following …\nA connection end has acknowledged the handshake step on …\nDefault State\nVersion defines the versioning scheme used to negotiate …\nString value of the enum field names used in the ProtoBuf …\nclient associated with this connection.\nclient associated with this connection.\nidentifies the client on the counterparty chain associated …\nclient state unique identifier\nclient identifier associated with a connection\nclient ID associated with the consensus state\nconnection associated with the request identifier\nidentifies the connection end on the counterparty chain …\nconnection unique identifier\nconnection identifier\nconnection identifier\nslice of all the connection paths associated with a client.\nlist of stored connections of the chain.\nconsensus state associated with the channel\ncounterparty chain associated with this connection.\ncounterparty chain associated with this connection.\ndelay period that must pass before a consensus state can …\ndelay period associated with this connection.\nlist of features compatible with the specified identifier\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>State</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nquery block height\noptional proof data for host state machines that are …\noptional proof data for host state machines that are …\nconnection identifier.\nclient state associated with the channel\nunique version identifier\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>State</code>.\nmaximum expected time per block (in nanoseconds), used to …\nGenerated client implementations.\nGenerated server implementations.\nthe sequence for the next generated connection identifier\npagination response\nparams defines the connection parameters to update.\nparams defines the parameters of the module.\nlist of connection paths\nlist of connection paths\ncommitment merkle prefix of the counterparty chain.\nDeprecated: this field is unused. Crossing hellos are no …\nmerkle proof of existence\nmerkle proof of existence\nmerkle proof of existence\nmerkle proof of existence\nproof for the change of the connection state on Chain A: …\nproof of client state included in message\nproof of client state included in message\nproof of client consensus state\nproof of client consensus state\nheight at which the proof was retrieved\nheight at which the proof was generated\nheight at which the proof was retrieved\nheight at which the proof was retrieved\nproof of the initialization the connection on Chain A: …\nproof of the initialization the connection on Chain B: …\nGenerated client implementations.\nGenerated server implementations.\nSets <code>state</code> to the provided enum value.\nSets <code>state</code> to the provided enum value.\nsigner address\nReturns the enum value of <code>state</code>, or the default if the …\nReturns the enum value of <code>state</code>, or the default if the …\ncurrent state of the connection end.\ncurrent state of the connection end.\nIBC version which can be utilised to determine encodings …\nIBC version which can be utilised to determine encodings …\nMsg defines the ibc/connection Msg service.\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nConnectionOpenAck defines a rpc handler method for …\nConnectionOpenConfirm defines a rpc handler method for …\nConnectionOpenInit defines a rpc handler method for …\nConnectionOpenTry defines a rpc handler method for …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nUpdateConnectionParams defines a rpc handler method for …\nGenerated trait containing gRPC methods that should be …\nMsg defines the ibc/connection Msg service.\nEnable decompressing requests with the given encoding.\nConnectionOpenAck defines a rpc handler method for …\nConnectionOpenConfirm defines a rpc handler method for …\nConnectionOpenInit defines a rpc handler method for …\nConnectionOpenTry defines a rpc handler method for …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress responses with the given encoding, if the client …\nUpdateConnectionParams defines a rpc handler method for …\nQuery provides defines the gRPC querier service\nEnable decompressing responses.\nClientConnections queries the connection paths associated …\nAttempt to create a new client by connecting to a given …\nConnection queries an IBC connection end.\nConnectionClientState queries the client state associated …\nConnectionConsensusState queries the consensus state …\nConnectionParams queries all parameters of the ibc …\nConnections queries all the IBC connections of a chain.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nGenerated trait containing gRPC methods that should be …\nQuery provides defines the gRPC querier service\nEnable decompressing requests with the given encoding.\nClientConnections queries the connection paths associated …\nConnection queries an IBC connection end.\nConnectionClientState queries the client state associated …\nConnectionConsensusState queries the consensus state …\nConnectionParams queries all parameters of the ibc …\nConnections queries all the IBC connections of a chain.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress responses with the given encoding, if the client …\nStores the identifier and the features supported by a …\nReturns the lists of supported versions\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIterates over the descending ordered set of compatible IBC …\nChecks whether the given feature is supported in this …\nChecks whether the version has a matching version …\nTo specify the generic arguments for <code>ClientState</code>, use the …\nA derive macro for implementing the <code>ConsensusState</code> trait …\nEntrypoint which performs both validation and message …\nEntrypoint which only performs message execution\nEntrypoint which only performs message validation\nRe-export IBC handler types from <code>ibc-core-handler-types</code> …\nEntrypoint which performs both validation and message …\nEntrypoint which only performs message execution\nEntrypoint which only performs message validation\nDefines the handler error type\nDefines events emitted during handling of IBC messages\nICS04 Channel error: {0}\nICS02 Client error: {0}\nICS03 Connection error: {0}\nTop-level type that surfaces errors from the core ibc-rs …\nICS26 Routing error: {0}\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEvents created by the IBC component of a chain, destined …\nAn event type that is emitted by the Cosmos SDK.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe ABCI event attribute has only one attribute, with key …\nEnumeration of all messages that the local ICS26 module is …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConvenient type alias for <code>ClientStateMut</code>, providing access …\nConvenient type alias for <code>ClientStateRef</code>, providing access …\nConvenient type alias for <code>ConsensusStateRef</code>, providing …\nContext to be implemented by the host that provides all “…\nThe client state type for the host chain.\nThe consensus state type for the host chain.\nContext to be implemented by the host that provides all “…\nCalculates the block delay period using the connection’s …\nReturns a counter on the number of channel ids have been …\nReturns the <code>ChannelEnd</code> for the given <code>port_id</code> and <code>chan_id</code>.\nReturns a natural number, counting how many clients have …\nReturns the prefix that the local chain uses in the KV …\nReturns a counter on how many connections have been …\nReturns the ConnectionEnd for the given identifier <code>conn_id</code>.\nDeletes the packet acknowledgement at the given store path\nDeletes the packet commitment at the given store path\nEmit the given IBC event\nRetrieve the context that implements all clients’ …\nRetrieve the context that implements all clients’ …\nFunction required by ICS-03. Returns the list of all …\nReturns the sequence number for the next packet to be …\nReturns the sequence number for the next packet to be …\nReturns the sequence number for the next packet to be sent …\nReturns the packet acknowledgement for the given store path\nReturns the packet commitment for the given store path\nReturns the packet receipt for the given store path. This …\nReturns the <code>ConsensusState</code> of the host (local) chain at a …\nReturns the current height of the local chain.\nReturns the current timestamp of the local chain.\nCalled upon channel identifier creation (Init or Try …\nCalled upon client creation. Increases the counter, that …\nCalled upon connection identifier creation (Init or Try …\nLog the given message.\nReturns the maximum expected time per block\nFunction required by ICS-03. Returns one version out of …\nStores the given channel_end at a path associated with the …\nStores the given connection_end at path\nStores the given connection_id at a path associated with …\nStores the given <code>nextSequenceAck</code> number at the given store …\nStores the given <code>nextSequenceRecv</code> number at the given …\nStores the given <code>nextSequenceSend</code> number at the given …\nStores the given packet acknowledgement at the given store …\nStores the given packet commitment at the given store path\nStores the given packet receipt at the given store path\nRe-exports ICS-24 data structures from <code>ibc-core-host-types</code> …\nValidates the <code>signer</code> field of IBC messages, which …\nValidates the <code>ClientState</code> of the host chain stored on the …\nFoundational error types that are applicable across …\nDefines identifier types\nDefines all store paths used by IBC\nbase64 decoding error: {0}\nErrors that occur during the process of decoding, …\nfailed to parse: <code>{description}</code>\nfailed to retrieve from store: <code>{description}</code>\nfailed to update store: <code>{description}</code>\nErrors that originate from host implementations.\nidentifier error: {0}\nErrors that arise when parsing identifiers.\nid <code>{0}</code> can only contain alphanumeric characters or <code>.</code>, <code>_</code>, <code>+</code>…\ninvalid JSON data: <code>{description}</code>\nid <code>{actual}</code> has invalid length; must be between [<code>{min}</code>,…\ninvalid prefix <code>{0}</code>\ninvalid raw data: <code>{description}</code>\ninvalid state: <code>{description}</code>\nmismatched resource name: expected <code>{expected}</code>, actual …\nmissing raw data: <code>{description}</code>\nmissing state: <code>{description}</code>\nother error: <code>{description}</code>\noverflowed revision number\ninteger parsing error: {0}\nprost decoding error: {0}\nprotobuf decoding error: {0}\nutf-8 str decoding error: {0}\nutf-8 String decoding error: {0}\ninteger TryFrom error: {0}\nunknown type URL <code>{0}</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDefines the domain type for chain identifiers.\nType of the client, depending on the specific consensus …\nThe sequence number of a packet enforces ordering among …\nGet this identifier as a borrowed byte slice\nGet this identifier as a borrowed byte slice\nGet this identifier as a borrowed byte slice\nGet this identifier as a borrowed byte slice\nGet a reference to the underlying string.\nGet this identifier as a borrowed <code>&amp;str</code>\nGet this identifier as a borrowed <code>&amp;str</code>\nYields this identifier as a borrowed <code>&amp;str</code>\nGet this identifier as a borrowed <code>&amp;str</code>\nGet this identifier as a borrowed <code>&amp;str</code>\nConstructs a new <code>ClientId</code> with this type of client type …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIncrements the sequence number by one.\nIncreases <code>ChainId</code>s revision number by one. Fails if the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if the client identifier is for 08-wasm light client.\nReturns <code>true</code> if the sequence number is zero.\nCreates a new <code>ChainId</code> with the given chain identifier.\nBuilds a new channel identifier. Like client and …\nBuilds a new client identifier.\nConstructs a new <code>ClientType</code> from the given <code>String</code> if it …\nBuilds a new connection identifier. Connection identifiers …\nReturns the static prefix to be used across all channel …\nReturns the static prefix to be used across all connection …\nExtract the revision number from the chain identifier\nEncodes the sequence number into a byte array in big …\nInfallible creation of the well-known transfer port\nA convenient method to check if the <code>ChainId</code> forms a valid …\nGives the sequence number.\nReturn ConnectionId with identifier 0\n<code>{path}</code> could not be parsed into a Path\nThe Path enum abstracts out the different sub-paths.\nRepresents a general-purpose path structure using the byte …\nThe key identifying the upgraded consensus state\nThe key identifying the upgraded client state\nABCI client upgrade keys\nReturns the parent group path under which all the ack …\nReturns the parent group path under which all the …\nFlattens a list of path bytes into a single path.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ninto_bytes implementation\nIndication if the path is provable.\nThis iteration key is namely used by the <code>ibc-go</code> …\nReturns the final part (leaf) of the path under which an …\nReturns the final part (leaf) of the path under which an …\nReturns the final part (leaf) of the path under which an …\nReturns the final part (leaf) of the path under which an …\nConstructs a new <code>ClientConsensusStatePath</code>.\nConstructs a new <code>ClientUpdateTimePath</code>.\nCreate with the default upgrade path\nCreate with the default upgrade path\nReturns the path representing the parent group under which …\nReturns the path representing the parent group under which …\nReturns the path representing the parent group under which …\nReturns the client store prefix under which all the client …\nReturns the connection store prefix under which all the …\nReturns the channel end store prefix under which all the …\nReturns the commitment store prefix under which all the …\nReturns the ack store prefix under which all the packet …\nReturns the receipt store prefix under which all the …\nReturns the parent group path under which all the receipt …\nfailed to convert offset date: {0}\nfailed to parse integer: {0}\nfailed try_from on integer: {0}\nUtility trait for converting a <code>Timestamp</code> into a …\nUtility trait for converting an arbitrary host-specific …\ninvalid date: out of range\noverflowed timestamp\nRepresents the address of the signer of the current …\nA newtype wrapper over <code>PrimitiveDateTime</code> which serves as …\nTypes that implement this trait can be converted to a raw …\nConvenient trait for converting types to a raw Protobuf …\nComputes the duration difference of another <code>Timestamp</code> from …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts a <code>Timestamp</code> into another time representation of …\nConverts a time representation of type <code>T</code> back into a …\nConvert a <code>Timestamp</code> to <code>u64</code> value in nanoseconds. If no …\nReturns a <code>Timestamp</code> representation of the current time.\nContains various internally used utilities.\nUsed to do a cheap mutable-to-mutable reference conversion.\nUsed to do a cheap reference-to-reference conversion.\nAn ordered map based on a B-Tree.\nA pointer type that uniquely owns a heap allocation of …\nA common trait for the ability to explicitly duplicate an …\nDerive macro generating an impl of the trait <code>Clone</code>.\nTypes whose values can be duplicated simply by copying …\nDerive macro generating an impl of the trait <code>Copy</code>.\nDerive macro generating an impl of the trait <code>Debug</code>.\nA trait for giving a type a useful default value.\nDerive macro generating an impl of the trait <code>Default</code>.\nAn iterator able to yield elements from both ends.\nCustom code within the destructor.\nTrait for comparisons corresponding to equivalence …\nDerive macro generating an impl of the trait <code>Eq</code>.\nContains the error value\nAn iterator that knows its exact length.\nExtend a collection with the contents of an iterator.\nThe version of the call operator that takes an immutable …\nThe version of the call operator that takes a mutable …\nThe version of the call operator that takes a by-value …\nUsed to do value-to-value conversions while consuming the …\nDerive macro generating an impl of the trait <code>Hash</code>.\nA value-to-value conversion that consumes the input value. …\nWhich kind of iterator are we turning this into?\nConversion into an <code>Iterator</code>.\nThe type of the elements being iterated over.\nThe type of the elements being iterated over.\nA trait for dealing with iterators.\nNo value.\nContains the success value\nThe <code>Option</code> type. See the module level documentation for …\nTrait for types that form a total order.\nDerive macro generating an impl of the trait <code>Ord</code>. The …\nThe returned type after the call operator is used.\nThe resulting type after obtaining ownership.\nTrait for comparisons using the equality operator.\nDerive macro generating an impl of the trait <code>PartialEq</code>. …\nTrait for types that form a partial order.\nDerive macro generating an impl of the trait <code>PartialOrd</code>. …\n<code>Result</code> is a type that represents either success (<code>Ok</code>) or …\nTypes that can be transferred across thread boundaries.\nTypes with a constant size known at compile time.\nSome value of type <code>T</code>.\nA UTF-8–encoded, growable string.\nTypes for which it is safe to share references between …\nA generalization of <code>Clone</code> to borrowed data.\nA trait for converting a value to a <code>String</code>.\nTypes that do not require any pinning guarantees.\nA contiguous growable array type, written as <code>Vec&lt;T&gt;</code>, short …\nAdvances the iterator from the back by <code>n</code> elements.\nAdvances the iterator by <code>n</code> elements.\nReturns the ABI-required minimum alignment of a type in …\nReturns the ABI-required minimum alignment of the type of …\nTests if every element of the iterator matches a predicate.\nAttribute macro applied to a function to register it as a …\nReturns a reference to the underlying allocator.\nReturns <code>None</code> if the option is <code>None</code>, otherwise returns <code>optb</code>.\nReturns <code>res</code> if the result is <code>Ok</code>, otherwise returns the <code>Err</code> …\nReturns <code>None</code> if the option is <code>None</code>, otherwise calls <code>f</code> with …\nCalls <code>op</code> if the result is <code>Ok</code>, otherwise returns the <code>Err</code> …\nTests if any element of the iterator matches a predicate.\nMoves all elements from <code>other</code> into <code>self</code>, leaving <code>other</code> …\nReturns an iterator over <code>N</code> elements of the iterator at a …\nReturns a byte slice of this <code>String</code>’s contents.\nConverts from <code>Option&lt;T&gt;</code> (or <code>&amp;Option&lt;T&gt;</code>) to …\nConverts from <code>Result&lt;T, E&gt;</code> (or <code>&amp;Result&lt;T, E&gt;</code>) to …\nConverts from <code>Option&lt;T&gt;</code> (or <code>&amp;mut Option&lt;T&gt;</code>) to …\nConverts from <code>Result&lt;T, E&gt;</code> (or <code>&amp;mut Result&lt;T, E&gt;</code>) to …\nConverts this type into a mutable reference of the …\nConverts from <code>&amp;mut Option&lt;T&gt;</code> to <code>Option&lt;&amp;mut T&gt;</code>.\nConverts from <code>&amp;mut Result&lt;T, E&gt;</code> to <code>Result&lt;&amp;mut T, &amp;mut E&gt;</code>.\nReturns a raw mutable pointer to the <code>Box</code>’s contents.\nReturns a mutable slice of the contained value, if any. If …\nConverts a <code>String</code> into a mutable string slice.\nReturns a mutable reference to the contents of this <code>String</code>.\nConverts from Pin&lt;&amp;mut Option&lt;T&gt;&gt; to Option&lt;Pin&lt;&amp;mut T&gt;&gt;.\nConverts from Pin&lt;&amp;Option&lt;T&gt;&gt; to Option&lt;Pin&lt;&amp;T&gt;&gt;.\nReturns a raw pointer to the <code>Box</code>’s contents.\nConverts this type into a shared reference of the (usually …\nConverts from <code>&amp;Option&lt;T&gt;</code> to <code>Option&lt;&amp;T&gt;</code>.\nConverts from <code>&amp;Result&lt;T, E&gt;</code> to <code>Result&lt;&amp;T, &amp;E&gt;</code>.\nReturns a slice of the contained value, if any. If this is …\nExtracts a string slice containing the entire <code>String</code>.\nAsserts that a boolean expression is <code>true</code> at runtime.\nConverts to <code>Box&lt;T, A&gt;</code>.\nConverts to <code>Box&lt;[T], A&gt;</code>.\nAttribute macro applied to a function to turn it into a …\nBorrows an iterator, rather than consuming it.\nPerforms the call operation.\nPerforms the call operation.\nPerforms the call operation.\nReturns this <code>String</code>’s capacity, in bytes.\nEvaluates boolean combinations of configuration flags at …\nKeeps the item it’s applied to if the passed path is …\nExpands all <code>#[cfg]</code> and <code>#[cfg_attr]</code> attributes in the code …\nTakes two iterators and creates a new iterator over both …\nRestrict a value to a certain interval.\nClears the map, removing all elements.\nTruncates this <code>String</code>, removing all contents.\nReturns a copy of the value.\nReturns a new box with a <code>clone()</code> of this box’s contents.\nCopies <code>source</code>’s contents into <code>self</code> without creating a …\nCopies <code>source</code>’s contents into <code>self</code> without creating a …\nPerforms copy-assignment from <code>source</code>.\nClones the contents of <code>source</code> into <code>self</code>.\nUses borrowed data to replace owned data, usually by …\nCreates an iterator which <code>clone</code>s all of its elements.\nMaps an <code>Option&lt;&amp;mut T&gt;</code> to an <code>Option&lt;T&gt;</code> by cloning the …\nMaps an <code>Option&lt;&amp;T&gt;</code> to an <code>Option&lt;T&gt;</code> by cloning the contents …\nMaps a <code>Result&lt;&amp;mut T, E&gt;</code> to a <code>Result&lt;T, E&gt;</code> by cloning the …\nMaps a <code>Result&lt;&amp;T, E&gt;</code> to a <code>Result&lt;T, E&gt;</code> by cloning the …\nThis method returns an <code>Ordering</code> between <code>self</code> and <code>other</code>.\nLexicographically compares the elements of this <code>Iterator</code> …\nLexicographically compares the elements of this <code>Iterator</code> …\nTransforms an iterator into a collection.\nCollects all the items from an iterator into a collection.\nExpands to the column number at which it was invoked.\nCauses compilation to fail with the given error message …\nConcatenates literals into a static string slice.\nConcatenates literals into a byte slice.\nConcatenates identifiers into one identifier.\nReturns <code>true</code> if the map contains a value for the specified …\nCreates an iterator which copies all of its elements.\nMaps an <code>Option&lt;&amp;mut T&gt;</code> to an <code>Option&lt;T&gt;</code> by copying the …\nMaps an <code>Option&lt;&amp;T&gt;</code> to an <code>Option&lt;T&gt;</code> by copying the contents …\nMaps a <code>Result&lt;&amp;mut T, E&gt;</code> to a <code>Result&lt;T, E&gt;</code> by copying the …\nMaps a <code>Result&lt;&amp;T, E&gt;</code> to a <code>Result&lt;T, E&gt;</code> by copying the …\nConsumes the iterator, counting the number of iterations …\nRepeats an iterator endlessly.\nReturns the “default value” for a type.\nCreates a <code>Box&lt;T&gt;</code>, with the <code>Default</code> value for T.\nCreates an empty <code>BTreeMap</code>.\nCreates an empty <code>String</code>.\nReturns <code>None</code>.\nUnstable placeholder for deref patterns.\nAttribute macro used to apply derive macros.\nAttribute macro used to apply derive macros for …\nAttempts to downcast the box to a concrete type.\nAttempts to downcast the box to a concrete type.\nAttempts to downcast the box to a concrete type.\nDowncasts the box to a concrete type.\nDowncasts the box to a concrete type.\nDowncasts the box to a concrete type.\nRemoves the specified range from the string in bulk, …\nDisposes of a value.\nExecutes the destructor for this type.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nGets the given key’s corresponding entry in the map for …\nCreates an iterator which gives the current iteration …\nInspects an environment variable at compile time.\nTests for <code>self</code> and <code>other</code> values to be equal, and is used …\nDetermines if the elements of this <code>Iterator</code> are equal to …\nDetermines if the elements of this <code>Iterator</code> are equal to …\nConverts from <code>Result&lt;T, E&gt;</code> to <code>Option&lt;E&gt;</code>.\nReturns the contained <code>Some</code> value, consuming the <code>self</code> value.\nReturns the contained <code>Ok</code> value, consuming the <code>self</code> value.\nReturns the contained <code>Err</code> value, consuming the <code>self</code> value.\nExtends a collection with the contents of an iterator.\nCopies elements from <code>src</code> range to the end of the string.\nExtends a collection with exactly one element.\nReserves capacity in a collection for the given number of …\nCreates an iterator that visits all elements (key-value …\nExpands to the file name in which it was invoked.\nCreates an iterator which uses a closure to determine if …\nReturns <code>None</code> if the option is <code>None</code>, otherwise calls …\nCreates an iterator that both filters and maps.\nSearches for an element of an iterator that satisfies a …\nApplies function to the elements of iterator and returns …\nReturns the first entry in the map for in-place …\nReturns the first key-value pair in the map. The key in …\nCreates an iterator that works like map, but flattens …\nCreates an iterator that flattens nested structure.\nConverts from <code>Option&lt;Option&lt;T&gt;&gt;</code> to <code>Option&lt;T&gt;</code>.\nConverts from <code>Result&lt;Result&lt;T, E&gt;, E&gt;</code> to <code>Result&lt;T, E&gt;</code>\nFolds every element into an accumulator by applying an …\nCalls a closure on each element of an iterator.\nCreates a <code>String</code> using interpolation of runtime …\nConstructs parameters for the other string-formatting …\nSame as <code>format_args</code>, but adds a newline in the end.\nConverts to this type from the input type.\nCreates a boxed <code>Path</code> from a reference.\nConverts a <code>String</code> into a box of dyn <code>Error</code>.\nConverts a vector into a boxed slice.\nReturns the argument unchanged.\nCopies the string into a newly allocated Box&lt;OsStr&gt;.\nConverts a <code>Cow&lt;&#39;a, OsStr&gt;</code> into a Box&lt;OsStr&gt;, by copying …\nConverts an <code>OsString</code> into a Box&lt;OsStr&gt; without copying or …\nCreates a boxed <code>Path</code> from a clone-on-write pointer.\nConverts the given <code>String</code> to a boxed <code>str</code> slice that is …\nConverts a <code>PathBuf</code> into a Box&lt;Path&gt;.\nConverts a type of <code>Error</code> + <code>Send</code> + <code>Sync</code> into a box of dyn …\nConverts a <code>CString</code> into a Box&lt;CStr&gt; without copying or …\nConverts a type of <code>Error</code> into a box of dyn <code>Error</code>.\nConverts a <code>T</code> into a <code>Box&lt;T&gt;</code>\nConverts a <code>&amp;[T]</code> into a <code>Box&lt;[T]&gt;</code>\nConverts a <code>Cow&lt;&#39;_, [T]&gt;</code> into a <code>Box&lt;[T]&gt;</code>\nConverts a <code>&amp;str</code> into a <code>Box&lt;str&gt;</code>\nConverts a <code>Cow&lt;&#39;_, str&gt;</code> into a <code>Box&lt;str&gt;</code>\nConverts a <code>Box&lt;str&gt;</code> into a <code>Box&lt;[u8]&gt;</code>\nConverts a <code>[T; N]</code> into a <code>Box&lt;[T]&gt;</code>\nConverts a <code>Cow&lt;&#39;a, CStr&gt;</code> into a <code>Box&lt;CStr&gt;</code>, by copying the …\nConverts a <code>&amp;CStr</code> into a <code>Box&lt;CStr&gt;</code>, by copying the contents …\nConverts a <code>String</code> into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.\nConverts a <code>Cow</code> into a box of dyn <code>Error</code>.\nConverts a <code>Cow</code> into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.\nConverts a <code>str</code> into a box of dyn <code>Error</code>.\nConverts a <code>str</code> into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.\nReturns the argument unchanged.\nConverts a <code>[(K, V); N]</code> into a <code>BTreeMap&lt;(K, V)&gt;</code>.\nAllocates an owned <code>String</code> from a single character.\nConverts a clone-on-write string to an owned instance of …\nConverts the given boxed <code>str</code> slice to a <code>String</code>. It is …\nConverts a <code>&amp;String</code> into a <code>String</code>.\nConverts a <code>&amp;mut str</code> into a <code>String</code>.\nConverts a <code>&amp;str</code> into a <code>String</code>.\nReturns the argument unchanged.\nConverts from <code>&amp;mut Option&lt;T&gt;</code> to <code>Option&lt;&amp;mut T&gt;</code>\nConvert the <code>CtOption&lt;T&gt;</code> wrapper into an <code>Option&lt;T&gt;</code>, …\nMoves <code>val</code> into a new <code>Some</code>.\nConverts from <code>&amp;Option&lt;T&gt;</code> to <code>Option&lt;&amp;T&gt;</code>.\nConvert the <code>CtOption&lt;T&gt;</code> wrapper into an <code>Option&lt;T&gt;</code>, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nTakes each element in the <code>Iterator</code>: if it is <code>None</code>, no …\nTakes each element in the <code>Iterator</code>: if it is an <code>Err</code>, no …\nConstructs a box from a <code>NonNull</code> pointer.\nConstructs a box from a <code>NonNull</code> pointer in the given …\nConstructs a box from a raw pointer.\nConstructs a box from a raw pointer in the given allocator.\nCreates a new <code>String</code> from a pointer, a length and a …\nDecode a UTF-16–encoded vector <code>v</code> into a <code>String</code>, …\nDecode a UTF-16–encoded slice <code>v</code> into a <code>String</code>, replacing …\nDecode a UTF-16BE–encoded vector <code>v</code> into a <code>String</code>, …\nDecode a UTF-16BE–encoded slice <code>v</code> into a <code>String</code>, …\nDecode a UTF-16LE–encoded vector <code>v</code> into a <code>String</code>, …\nDecode a UTF-16LE–encoded slice <code>v</code> into a <code>String</code>, …\nConverts a vector of bytes to a <code>String</code>.\nConverts a slice of bytes to a string, including invalid …\nConverts a <code>Vec&lt;u8&gt;</code> to a <code>String</code>, substituting invalid UTF-8 …\nConverts a vector of bytes to a <code>String</code> without checking …\nCreates an iterator which ends after the first <code>None</code>.\nTests greater than or equal to (for <code>self</code> and <code>other</code>) and is …\nDetermines if the elements of this <code>Iterator</code> are …\nReturns a reference to the value corresponding to the key.\nReturns the key-value pair corresponding to the supplied …\nReturns a mutable reference to the value corresponding to …\nInserts <code>value</code> into the option if it is <code>None</code>, then returns …\nInserts the default value into the option if it is <code>None</code>, …\nInserts a value computed from <code>f</code> into the option if it is …\nAttribute macro applied to a static to register it as a …\nTests greater than (for <code>self</code> and <code>other</code>) and is used by the …\nDetermines if the elements of this <code>Iterator</code> are …\nParses a file as an expression or an item according to the …\nIncludes a file as a reference to a byte array.\nIncludes a UTF-8 encoded file as a string.\nReturns a reference to the value corresponding to the …\nInserts a key-value pair into the map.\nInserts a character into this <code>String</code> at a byte position.\nInserts <code>value</code> into the option, then returns a mutable …\nInserts a string slice into this <code>String</code> at a byte position.\nDoes something with each element of an iterator, passing …\nCalls a function with a reference to the contained value …\nCalls a function with a reference to the contained value …\nCalls a function with a reference to the contained value …\nCreates a new iterator which places a copy of <code>separator</code> …\nCreates a new iterator which places an item generated by …\nConverts this type into the (usually inferred) input type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts a <code>Box&lt;T&gt;</code> into a <code>Box&lt;[T]&gt;</code>\nConverts this <code>String</code> into a Box&lt;str&gt;.\nConverts a <code>String</code> into a byte vector.\nReturns the contained <code>Err</code> value, but never panics.\nConsumes the <code>Box</code>, returning the wrapped value.\nCreates an iterator from a value.\nGets an owning iterator over the entries of the map, …\nReturns a consuming iterator over the possibly contained …\nReturns a consuming iterator over the possibly contained …\nCreates a consuming iterator visiting all the keys, in …\nConsumes the <code>Box</code>, returning a wrapped <code>NonNull</code> pointer.\nConsumes the <code>Box</code>, returning a wrapped <code>NonNull</code> pointer and …\nReturns the contained <code>Ok</code> value, but never panics.\nConverts a <code>Box&lt;T&gt;</code> into a <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not …\nConsumes the <code>Box</code>, returning a wrapped raw pointer.\nDecomposes a <code>String</code> into its raw components: …\nConsumes the <code>Box</code>, returning a wrapped raw pointer and the …\nCreates a consuming iterator visiting all the values, in …\nReturns <code>true</code> if the map contains no elements.\nReturns <code>true</code> if this <code>String</code> has a length of zero, and <code>false</code>…\nReturns <code>true</code> if the iterator is empty.\nReturns <code>true</code> if the result is <code>Err</code>.\nReturns <code>true</code> if the result is <code>Err</code> and the value inside of …\nReturns <code>true</code> if the option is a <code>None</code> value.\nReturns <code>true</code> if the option is a <code>None</code> or the value inside …\nReturns <code>true</code> if the result is <code>Ok</code>.\nReturns <code>true</code> if the result is <code>Ok</code> and the value inside of …\nChecks if the elements of this iterator are partitioned …\nReturns <code>true</code> if the option is a <code>Some</code> value.\nReturns <code>true</code> if the option is a <code>Some</code> and the value inside …\nChecks if the elements of this iterator are sorted.\nChecks if the elements of this iterator are sorted using …\nChecks if the elements of this iterator are sorted using …\nGets an iterator over the entries of the map, sorted by …\nReturns an iterator over the possibly contained value.\nReturns an iterator over the possibly contained value.\nGets a mutable iterator over the entries of the map, …\nReturns a mutable iterator over the possibly contained …\nReturns a mutable iterator over the possibly contained …\nGets an iterator over the keys of the map, in sorted order.\nConsumes the iterator, returning the last element.\nReturns the last entry in the map for in-place …\nReturns the last key-value pair in the map. The key in …\nTests less than or equal to (for <code>self</code> and <code>other</code>) and is …\nDetermines if the elements of this <code>Iterator</code> are …\nConsumes and leaks the <code>Box</code>, returning a mutable reference, …\nConsumes and leaks the <code>String</code>, returning a mutable …\nReturns the number of elements in the map.\nReturns the length of this <code>String</code>, in bytes, not <code>char</code>s or …\nReturns the exact remaining length of the iterator.\nExpands to the line number on which it was invoked.\nPrints passed tokens into the standard output.\nReturns a <code>Cursor</code> pointing at the gap before the smallest …\nReturns a <code>CursorMut</code> pointing at the gap before the …\nTests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> …\nDetermines if the elements of this <code>Iterator</code> are …\nTakes a closure and creates an iterator which calls that …\nMaps an <code>Option&lt;T&gt;</code> to <code>Option&lt;U&gt;</code> by applying a function to a …\nMaps a <code>Result&lt;T, E&gt;</code> to <code>Result&lt;U, E&gt;</code> by applying a function …\nMaps a <code>Result&lt;T, E&gt;</code> to <code>Result&lt;T, F&gt;</code> by applying a function …\nReturns the provided default result (if none), or applies …\nReturns the provided default (if <code>Err</code>), or applies a …\nComputes a default function result (if none), or applies a …\nMaps a <code>Result&lt;T, E&gt;</code> to <code>U</code> by applying fallback function …\nCreates an iterator that both yields elements based on a …\nCalls the given function <code>f</code> for each contiguous window of …\nCompares and returns the maximum of two values.\nReturns the maximum element of an iterator.\nReturns the element that gives the maximum value with …\nReturns the element that gives the maximum value from the …\nCompares and returns the minimum of two values.\nReturns the minimum element of an iterator.\nReturns the element that gives the minimum value with …\nReturns the element that gives the minimum value from the …\nExpands to a string that represents the current module …\nTests for <code>!=</code>. The default implementation is almost always …\nDetermines if the elements of this <code>Iterator</code> are not equal …\nAllocates memory on the heap and then places <code>x</code> into it.\nMakes a new, empty <code>BTreeMap</code>.\nCreates a new empty <code>String</code>.\nAllocates memory in the given allocator then places <code>x</code> into …\nMakes a new empty BTreeMap with a reasonable choice for B.\nConstructs a new box with uninitialized contents.\nConstructs a new box with uninitialized contents in the …\nConstructs a new boxed slice with uninitialized contents.\nConstructs a new boxed slice with uninitialized contents …\nConstructs a new <code>Box</code> with uninitialized contents, with the …\nConstructs a new <code>Box</code> with uninitialized contents, with the …\nConstructs a new boxed slice with uninitialized contents, …\nConstructs a new boxed slice with uninitialized contents …\nAdvances the iterator and returns the next value.\nRemoves and returns an element from the end of the …\nAdvances the iterator and returns an array containing the …\nReturns the <code>n</code>th element of the iterator.\nReturns the <code>n</code>th element from the end of the iterator.\nConverts from <code>Result&lt;T, E&gt;</code> to <code>Option&lt;T&gt;</code>.\nTransforms the <code>Option&lt;T&gt;</code> into a <code>Result&lt;T, E&gt;</code>, mapping …\nTransforms the <code>Option&lt;T&gt;</code> into a <code>Result&lt;T, E&gt;</code>, mapping …\nOptionally inspects an environment variable at compile …\nReturns the option if it contains a value, otherwise …\nReturns <code>res</code> if the result is <code>Err</code>, otherwise returns the <code>Ok</code> …\nReturns the option if it contains a value, otherwise calls …\nCalls <code>op</code> if the result is <code>Err</code>, otherwise returns the <code>Ok</code> …\nThis method returns an ordering between <code>self</code> and <code>other</code> …\nLexicographically compares the <code>PartialOrd</code> elements of this …\nLexicographically compares the elements of this <code>Iterator</code> …\nConsumes an iterator, creating two collections from it.\nReorders the elements of this iterator <em>in-place</em> according …\nCreates an iterator which can use the <code>peek</code> and <code>peek_mut</code> …\nConstructs a new <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>…\nConstructs a new <code>Pin&lt;Box&lt;T, A&gt;&gt;</code>. If <code>T</code> does not implement …\nRemoves the last character from the string buffer and …\nRemoves and returns the first element in the map. The key …\nRemoves and returns the last element in the map. The key …\nSearches for an element in an iterator, returning its …\nIterates over the entire iterator, multiplying all the …\nTakes each element in the <code>Iterator</code>: if it is a <code>None</code>, no …\nTakes each element in the <code>Iterator</code>: if it is an <code>Err</code>, no …\nAppends the given <code>char</code> to the end of this <code>String</code>.\nAppends a given string slice onto the end of this <code>String</code>.\nConstructs a double-ended iterator over a sub-range of …\nConstructs a mutable double-ended iterator over a …\nReduces the elements to a single one, by repeatedly …\nRemoves a key from the map, returning the value at the key …\nRemoves a <code>char</code> from this <code>String</code> at a byte position and …\nRemoves a key from the map, returning the stored key and …\nRemove all matches of pattern <code>pat</code> in the <code>String</code>.\nReplaces the actual value in the option by the value given …\nRemoves the specified range in the string, and replaces it …\nReserves capacity for at least <code>additional</code> bytes more than …\nReserves the minimum capacity for at least <code>additional</code> …\nRetains only the elements specified by the predicate.\nRetains only the characters specified by the predicate.\nReverses an iterator’s direction.\nSearches for an element of an iterator from the back that …\nAn iterator method that reduces the iterator’s elements …\nSearches for an element in an iterator from the right, …\nAn iterator adapter which, like <code>fold</code>, holds internal …\nShrinks the capacity of this <code>String</code> with a lower bound.\nShrinks the capacity of this <code>String</code> to match its length.\nReturns the bounds on the remaining length of the iterator.\nReturns the size of a type in bytes.\nReturns the size of the pointed-to value in bytes.\nCreates an iterator that skips the first <code>n</code> elements.\nCreates an iterator that <code>skip</code>s elements based on a …\nSplits the collection into two at the given key. Returns …\nSplits the string into two at the given byte index.\nCreates an iterator starting at the same point, but …\nUtilities for the <code>str</code> primitive type.\nStringifies its arguments.\nSums the elements of an iterator.\nTakes each element in the <code>Iterator</code>: if it is a <code>None</code>, no …\nTakes each element in the <code>Iterator</code>: if it is an <code>Err</code>, no …\nCreates an iterator that yields the first <code>n</code> elements, or …\nTakes the value out of the option, leaving a <code>None</code> in its …\nTakes the value out of the option, but only if the …\nCreates an iterator that yields elements based on a …\nAttribute macro applied to a function to turn it into a …\nAn implementation detail of the <code>#[test]</code> and <code>#[bench]</code> …\nCreates owned data from borrowed data, usually by cloning.\nConverts the given value to a <code>String</code>.\nEnables or disables tracing functionality used for …\nTransposes an <code>Option</code> of a <code>Result</code> into a <code>Result</code> of an <code>Option</code>…\nTransposes a <code>Result</code> of an <code>Option</code> into an <code>Option</code> of a <code>Result</code>…\nShortens this <code>String</code> to the specified length.\nFallibly transforms an iterator into a collection, short …\nApplies function to the elements of iterator and returns …\nAn iterator method that applies a function as long as it …\nAn iterator method that applies a fallible function to …\nAttempts to convert a <code>Box&lt;[T]&gt;</code> into a <code>Box&lt;[T; N]&gt;</code>.\nAttempts to convert a <code>Vec&lt;T&gt;</code> into a <code>Box&lt;[T; N]&gt;</code>.\nTries to insert a key-value pair into the map, and returns …\nAllocates memory on the heap then places <code>x</code> into it, …\nAllocates memory in the given allocator then places <code>x</code> into …\nConstructs a new box with uninitialized contents on the …\nConstructs a new box with uninitialized contents in the …\nConstructs a new boxed slice with uninitialized contents. …\nConstructs a new boxed slice with uninitialized contents …\nConstructs a new <code>Box</code> with uninitialized contents, with the …\nConstructs a new <code>Box</code> with uninitialized contents, with the …\nConstructs a new boxed slice with uninitialized contents, …\nConstructs a new boxed slice with uninitialized contents …\nReduces the elements to a single one by repeatedly …\nTries to reserve capacity for at least <code>additional</code> bytes …\nTries to reserve the minimum capacity for at least …\nThis is the reverse version of <code>Iterator::try_fold()</code>: it …\nCreates a new empty <code>String</code> with at least the specified …\nUnstable placeholder for type ascription.\nReturns the contained <code>Some</code> value, consuming the <code>self</code> value.\nReturns the contained <code>Ok</code> value, consuming the <code>self</code> value.\nReturns the contained <code>Err</code> value, consuming the <code>self</code> value.\nReturns the contained <code>Err</code> value, consuming the <code>self</code> value, …\nReturns the contained <code>Some</code> value or a provided default.\nReturns the contained <code>Ok</code> value or a provided default.\nReturns the contained <code>Some</code> value or a default.\nReturns the contained <code>Ok</code> value or a default\nReturns the contained <code>Some</code> value or computes it from a …\nReturns the contained <code>Ok</code> value or computes it from a …\nReturns the contained <code>Some</code> value, consuming the <code>self</code> value,\nReturns the contained <code>Ok</code> value, consuming the <code>self</code> value, …\nConverts an iterator of pairs into a pair of containers.\nUnzips an option containing a tuple of two options.\nReturns a <code>Cursor</code> pointing at the gap after the greatest key\nReturns a <code>CursorMut</code> pointing at the gap after the greatest …\nGets an iterator over the values of the map, in order by …\nGets a mutable iterator over the values of the map, in …\nA contiguous growable array type with heap-allocated …\nCreates a <code>Vec</code> containing the arguments.\nCreates a new empty <code>String</code> with at least the specified …\nWrites the value and converts to <code>Box&lt;T, A&gt;</code>.\nReturns <code>Some</code> if exactly one of <code>self</code>, <code>optb</code> is <code>Some</code>, …\nUnlike <code>Vec</code>, <code>Box&lt;[Z]&gt;</code> cannot reallocate, so we can be sure …\n‘Zips up’ two iterators into a single iterator of …\nZips <code>self</code> with another <code>Option</code>.\nZips <code>self</code> and another <code>Option</code> with function <code>f</code>.\nAn iterator over the bytes of a string slice.\nAn iterator over the <code>char</code>s of a string slice, and their …\nAn iterator over the <code>char</code>s of a string slice.\nAn iterator of <code>u16</code> over the string encoded as UTF-16.\nThe associated error which can be returned from parsing.\nThe return type of <code>str::escape_debug</code>.\nThe return type of <code>str::escape_default</code>.\nThe return type of <code>str::escape_unicode</code>.\nParse a value from a string\nAn iterator over the lines of a string, as string slices.\nCreated with the method <code>lines_any</code>.\nCreated with the method <code>match_indices</code>.\nCreated with the method <code>matches</code>.\nAn error returned when parsing a <code>bool</code> using <code>from_str</code> fails\nCreated with the method <code>rmatch_indices</code>.\nCreated with the method <code>rmatches</code>.\nCreated with the method <code>rsplit</code>.\nCreated with the method <code>rsplitn</code>.\nCreated with the method <code>rsplit_terminator</code>.\nCreated with the method <code>split</code>.\nAn iterator over the non-ASCII-whitespace substrings of a …\nAn iterator over the substrings of a string, terminated by …\nCreated with the method <code>splitn</code>.\nCreated with the method <code>split_terminator</code>.\nAn iterator over the non-whitespace substrings of a string,\nAn item returned by the <code>Utf8Chunks</code> iterator.\nAn iterator used to decode a slice of mostly UTF-8 bytes …\nErrors which can occur when attempting to interpret a …\nViews the underlying data as a subslice of the original …\nViews the underlying data as a subslice of the original …\nProvides more information about the failure:\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a boxed slice of bytes to a boxed string slice …\nCreates a <code>&amp;str</code> from a pointer and a length.\nCreates a <code>&amp;mut str</code> from a pointer and a length.\nParses a string <code>s</code> to return a value of this type.\nConverts a slice of bytes to a string slice.\nConverts a mutable slice of bytes to a mutable string …\nConverts a slice of bytes to a string slice without …\nConverts a slice of bytes to a string slice without …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the invalid sequence that caused a failure.\nReturns the byte position of the next character, or the …\nThe string Pattern API.\nReturns remainder of the split string.\nReturns remainder of the split string.\nReturns remainder of the split string.\nReturns remainder of the split string.\nReturns remainder of the split string.\nReturns remainder of the split string.\nReturns remainder of the split string.\nReturns the remaining lines of the split string.\nReturns remainder of the split string\nReturns remainder of the split string.\nReturns the next validated UTF-8 substring.\nReturns the index in the given string up to which valid …\nAssociated type for <code>&lt;&amp;[char; N] as Pattern&gt;::Searcher&lt;&#39;a&gt;</code>.\nAssociated type for <code>&lt;[char; N] as Pattern&gt;::Searcher&lt;&#39;a&gt;</code>.\nAssociated type for <code>&lt;F as Pattern&gt;::Searcher&lt;&#39;a&gt;</code>.\nAssociated type for <code>&lt;char as Pattern&gt;::Searcher&lt;&#39;a&gt;</code>.\nAssociated type for <code>&lt;&amp;[char] as Pattern&gt;::Searcher&lt;&#39;a&gt;</code>.\nExpresses that every byte of the haystack has been …\nA marker trait to express that a <code>ReverseSearcher</code> can be …\nExpresses that a match of the pattern has been found at …\nA string pattern.\nExpresses that <code>haystack[a..b]</code> has been rejected as a …\nA reverse searcher for a string pattern.\nResult of calling <code>Searcher::next()</code> or …\nA searcher for a string pattern.\nAssociated searcher for this pattern\nAssociated type for <code>&lt;&amp;str as Pattern&gt;::Searcher&lt;&#39;a&gt;</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGetter for the underlying string to be searched in\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructs the associated searcher from <code>self</code> and the …\nChecks whether the pattern matches anywhere in the haystack\nChecks whether the pattern matches at the front of the …\nChecks whether the pattern matches at the back of the …\nPerforms the next search step starting from the front.\nPerforms the next search step starting from the back.\nFinds the next <code>Match</code> result. See <code>next()</code>.\nFinds the next <code>Match</code> result. See <code>next_back()</code>.\nFinds the next <code>Reject</code> result. See <code>next()</code> and <code>next_match()</code>.\nFinds the next <code>Reject</code> result. See <code>next_back()</code>.\nRemoves the pattern from the front of haystack, if it …\nRemoves the pattern from the back of haystack, if it …\nA draining iterator for <code>Vec&lt;T&gt;</code>.\nAn iterator which uses a closure to determine if an …\nAn iterator that moves out of a vector.\nA splicing iterator for <code>Vec</code>.\nA contiguous growable array type, written as <code>Vec&lt;T&gt;</code>, short …\nReturns a reference to the underlying allocator.\nReturns a reference to the underlying allocator.\nReturns a reference to the underlying allocator.\nReturns a reference to the underlying allocator.\nMoves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …\nReturns a raw mutable pointer to the vector’s buffer, or …\nReturns the remaining items of this iterator as a mutable …\nExtracts a mutable slice of the entire vector.\nReturns a <code>NonNull</code> pointer to the vector’s buffer, or a …\nReturns a raw pointer to the vector’s buffer, or a …\nReturns the remaining items of this iterator as a slice.\nReturns the remaining items of this iterator as a slice.\nExtracts a slice containing the entire vector.\nReturns the total number of elements the vector can hold …\nClears the vector, removing all values.\nOverwrites the contents of <code>self</code> with a clone of the …\nRemoves consecutive repeated elements in the vector …\nRemoves all but the first of consecutive elements in the …\nRemoves all but the first of consecutive elements in the …\nCreates an empty <code>vec::IntoIter</code>.\nCreates an empty <code>Vec&lt;T&gt;</code>.\nRemoves the specified range from the vector in bulk, …\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nCompute the length of this value in bytes when encoded as …\nClones and appends all elements in a slice to the <code>Vec</code>.\nCopies elements from <code>src</code> range to the end of the vector.\nCreates an iterator which uses a closure to determine if …\nReturns the argument unchanged.\nReturns the argument unchanged.\nAllocates a <code>Vec&lt;T&gt;</code> and fills it by cloning <code>s</code>’s items.")